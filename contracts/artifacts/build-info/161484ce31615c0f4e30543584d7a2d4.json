{
	"id": "161484ce31615c0f4e30543584d7a2d4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/4_SmartGTFX.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.16;\n\n// ----------------------------------------------------------------------------\n// 'GTFX' 'Gitshock Finance Testnet' BEP20 token contract\n//\n// Symbol      : tGTFX\n// Name        : Gitshock Finance Testnet\n// Total supply: 50,000,000.000000000000000000\n// Decimals    : 18\n// Website     : https://gitshock.com\n// Security    : jo-cybersecurity@gitshock.com\n// ----------------------------------------------------------------------------\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    return add(a, b, \"SafeMath: addition overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, errorMessage);\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ninterface BEP20Interface {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Tokenlock is Ownable {\n    /// @notice Indicates if token is locked\n    uint8 isLocked = 0;\n\n    event Freezed();\n    event UnFreezed();\n\n    modifier validLock {\n        require(isLocked == 0, \"Token is locked\");\n        _;\n    }\n    \n    function freeze() public onlyOwner {\n        isLocked = 1;\n        \n        emit Freezed();\n    }\n\n    function unfreeze() public onlyOwner {\n        isLocked = 0;\n        \n        emit UnFreezed();\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n//\n// Borrowed from MiniMeToken\n// ----------------------------------------------------------------------------\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n}\n\n// ----------------------------------------------------------------------------\n// Limit users in blacklist\n// ----------------------------------------------------------------------------\ncontract UserLock is Ownable {\n    mapping(address => bool) blacklist;\n        \n    event LockUser(address indexed who);\n    event UnlockUser(address indexed who);\n\n    modifier permissionCheck {\n        require(!blacklist[msg.sender], \"Blocked user\");\n        _;\n    }\n    \n    function lockUser(address who) public onlyOwner {\n        blacklist[who] = true;\n        \n        emit LockUser(who);\n    }\n\n    function unlockUser(address who) public onlyOwner {\n        blacklist[who] = false;\n        \n        emit UnlockUser(who);\n    }\n}\n\ncontract GTFX is BEP20Interface, Tokenlock, UserLock {\n    using SafeMath for uint256;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint256) private _balances;\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    /// @notice Total number of tokens in circulation\n    uint256 private _totalSupply;\n\n    /// @notice BEP-20 token decimals for this token\n    uint8 private _decimals;\n\n    /// @notice BEP-20 token symbol for this token\n    string private _symbol;\n\n    /// @notice BEP-20 token name for this token\n    string private _name;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint256) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /// @notice The standard BEP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard BEP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new GTFX Testnet token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        _name = \"Gitshock Finance Testnet\";\n        _symbol = \"tGTFX\";\n        _decimals = 18;\n        _totalSupply = 50000000e18;\n        _balances[account] = _totalSupply;\n\n        emit Transfer(address(0), account, _totalSupply);\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n    */\n    function getOwner() external view returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token decimals.\n    */\n    function decimals() external view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n    */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the token name.\n    */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the total supply.\n    */\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param recipient The address of the destination account\n     * @param amount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param owner The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address owner, address spender) external view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     * @param spender The address of the account which may transfer tokens\n     * @param amount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Approve the spender to transferFrom(...) with the amount.\n     * @dev receiveApproval(...) is executed.\n     * @param amount The number of tokens that are approved\n     * @param data The data to pass to receiveApproval(...)\n     * @return true\n     */\n    function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param sender The address of the source account\n     * @param recipient The address of the destination account\n     * @param amount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {\n        _transfer(sender, recipient, amount);\n        address spender = _msgSender();\n        uint256 spenderAllowance = _allowances[sender][spender];\n        if (spenderAllowance != uint256(-1)) {\n            _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\"));\n        }\n        return true;\n    }\n\n    /**\n     * @notice Atomically increases the allowance granted to `spender` by the caller\n     * @dev This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     * @param spender The address of the account which may transfer tokens\n     * @param addedValue The additional number of tokens to allow which may be spent\n     * @return Whether or not the approval succeeded\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\"));\n        return true;\n    }\n\n    /**\n     * @notice Atomically increases the allowance granted to `spender` by the caller\n     * @dev This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     * @param spender The address of the account which may transfer tokens\n     * @param subtractedValue The subtractional number of tokens to allow which may be spent\n     * @return Whether or not the approval succeeded\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @notice Destroy the amount of tokens from the sender, reducing the total supply.\n     * @dev The amount must be greater than balance, total supply.\n     * @param amount The number of tokens that are burnt\n     * @return true\n     */\n    function burn(uint256 amount) public validLock permissionCheck returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public validLock permissionCheck {\n        return _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Invalid signature\");\n        require(nonce == nonces[signatory]++, \"Invalid nonce\");\n        require(now <= expiry, \"The signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Not determined yet\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return ceil96(checkpoints[account][nCheckpoints - 1].votes);\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return ceil96(cp.votes);\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return ceil96(checkpoints[account][lower].votes);\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"Cannot transfer from the zero address\");\n        require(recipient != address(0), \"Cannot transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"The transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount, \"The balance overflows\");\n        emit Transfer(sender, recipient, amount);\n\n        _moveDelegates(delegates[sender], delegates[recipient], amount);\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"Cannot approve from the zero address\");\n        require(spender != address(0), \"Cannot approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"Cannot burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"The burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n\n        _moveDelegates(delegates[account], address(0), amount);\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint256 delegatorBalance = _balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount, \"The vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount, \"The vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"The block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n    \n    function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function ceil96(uint256 n) internal pure returns (uint96) {\n        if (n >= 2**96) {\n            return uint96(-1);\n        }\n        return uint96(n);\n    }\n\n    function getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/4_SmartGTFX.sol": {
				"ApproveAndCallFallBack": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "receiveApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"ApproveAndCallFallBack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"BEP20Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"BEP20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"GTFX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Freezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "LockUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "UnFreezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "UnlockUser",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "lockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "unlockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender`",
								"params": {
									"amount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "receiveApproval(...) is executed.",
								"params": {
									"amount": "The number of tokens that are approved",
									"data": "The data to pass to receiveApproval(...)"
								},
								"return": "true"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"burn(uint256)": {
								"details": "The amount must be greater than balance, total supply.",
								"params": {
									"amount": "The number of tokens that are burnt"
								},
								"return": "true"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.",
								"params": {
									"spender": "The address of the account which may transfer tokens",
									"subtractedValue": "The subtractional number of tokens to allow which may be spent"
								},
								"return": "Whether or not the approval succeeded"
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"increaseAllowance(address,uint256)": {
								"details": "This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.",
								"params": {
									"addedValue": "The additional number of tokens to allow which may be spent",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the total supply."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to transfer",
									"recipient": "The address of the destination account"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The number of tokens to transfer",
									"recipient": "The address of the destination account",
									"sender": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":13437:29042  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":11946:11947  0 */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":11929:11947  uint8 isLocked = 0 */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":15928:16204  constructor(address account) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/4_SmartGTFX.sol\":15928:16204  constructor(address account) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15928:16204  constructor(address account) public {... */\n  mload\n    /* \"contracts/4_SmartGTFX.sol\":7531:7548  address msgSender */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7551:7563  _msgSender() */\n  tag_8\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7551:7561  _msgSender */\n  tag_9\n    /* \"contracts/4_SmartGTFX.sol\":7551:7563  _msgSender() */\n  and\n  jump\t// in\ntag_8:\n    /* \"contracts/4_SmartGTFX.sol\":7569:7575  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7569:7587  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7569:7587  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7569:7575  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15974:16008  _name = \"Gitshock Finance Testnet\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x18\n  dup1\n  dup3\n  mstore\n  0x47697473686f636b2046696e616e636520546573746e65740000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_11\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15974:15979  _name */\n  0x07\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15974:16008  _name = \"Gitshock Finance Testnet\" */\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":16018:16035  _symbol = \"tGTFX\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x05\n  dup1\n  dup3\n  mstore\n  shl(0xdb, 0x0e88ea88cb)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_13\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":16018:16025  _symbol */\n  0x06\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":16018:16035  _symbol = \"tGTFX\" */\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":16045:16054  _decimals */\n  0x05\n    /* \"contracts/4_SmartGTFX.sol\":16045:16059  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/4_SmartGTFX.sol\":16057:16059  18 */\n  0x12\n    /* \"contracts/4_SmartGTFX.sol\":16045:16059  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":16084:16095  50000000e18 */\n  0x295be96e64066972000000\n    /* \"contracts/4_SmartGTFX.sol\":16069:16081  _totalSupply */\n  0x04\n    /* \"contracts/4_SmartGTFX.sol\":16069:16095  _totalSupply = 50000000e18 */\n  dup2\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":16105:16123  _balances[account] */\n  dup3\n  and\n    /* \"contracts/4_SmartGTFX.sol\":16045:16054  _decimals */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":16105:16123  _balances[account] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/4_SmartGTFX.sol\":16105:16114  _balances */\n  0x02\n    /* \"contracts/4_SmartGTFX.sol\":16105:16123  _balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/4_SmartGTFX.sol\":16105:16138  _balances[account] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":16154:16197  Transfer(address(0), account, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/4_SmartGTFX.sol\":16105:16123  _balances[account] */\n  swap3\n  swap4\n    /* \"contracts/4_SmartGTFX.sol\":16045:16054  _decimals */\n  swap2\n  swap3\n    /* \"contracts/4_SmartGTFX.sol\":16154:16197  Transfer(address(0), account, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":15928:16204  constructor(address account) public {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":13437:29042  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n  jump(tag_14)\n    /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\ntag_9:\n    /* \"contracts/4_SmartGTFX.sol\":6534:6544  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\ntag_15:\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":13437:29042  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\ntag_12:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\n  tag_15\n  swap2\n  swap1\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_23)\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":13437:29042  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":13437:29042  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x782d6fe1\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xbd1870a3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xbd1870a3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd7972580\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x782d6fe1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x42966c68\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x6a28f000\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x6a28f000\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x62a5af3b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x20606b70\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":16696:16779  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_43:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_43)\n    tag_45:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16696:16779  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_46:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":18477:18654  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_4:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18477:18654  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":16838:16929  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":14694:14816  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_50\n      tag_53\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":19543:20012  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19543:20012  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_56\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16410:16493  function decimals() external view returns (uint8) {... */\n    tag_8:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":20463:20733  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":20463:20733  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21727:21870  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21727:21870  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14158:14203  mapping (address => address) public delegates */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14158:14203  mapping (address => address) public delegates */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":22012:22140  function delegate(address delegatee) public validLock permissionCheck {... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22012:22140  function delegate(address delegatee) public validLock permissionCheck {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":12097:12194  function freeze() public onlyOwner {... */\n    tag_13:\n      tag_68\n      tag_72\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":12200:12301  function unfreeze() public onlyOwner {... */\n    tag_14:\n      tag_68\n      tag_74\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14575:14624  mapping (address => uint32) public numCheckpoints */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14575:14624  mapping (address => uint32) public numCheckpoints */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n    tag_75:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":17125:17235  function balanceOf(address account) external view returns (uint256) {... */\n    tag_16:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":17125:17235  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_80\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n    tag_17:\n      tag_68\n      tag_82\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":24160:25352  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24160:25352  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_85\n      jump\t// in\n    tag_83:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":15102:15144  mapping (address => uint256) public nonces */\n    tag_19:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":15102:15144  mapping (address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_88\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16266:16349  function getOwner() external view returns (address) {... */\n    tag_20:\n      tag_65\n      tag_90\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n    tag_21:\n      tag_65\n      tag_92\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16552:16639  function symbol() external view returns (string memory) {... */\n    tag_22:\n      tag_41\n      tag_94\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21192:21473  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n    tag_23:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_100:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":21192:21473  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_101\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17494:17677  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_24:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17494:17677  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_104\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":23511:23738  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_25:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":23511:23738  function getCurrentVotes(address account) external view returns (uint96) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n    tag_26:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_110\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":22563:23317  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n    tag_27:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_112:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":22563:23317  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x60\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xa0\n      add\n      calldataload\n      tag_113\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n    tag_28:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup3\n      calldataload\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_117:\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_118:\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap3\n      swap6\n      pop\n      tag_119\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n    tag_29:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_122\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17971:18105  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_30:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17971:18105  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_125\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14907:15024  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_31:\n      tag_50\n      tag_127\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14439:14509  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_32:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14439:14509  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_130\n      jump\t// in\n    tag_128:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_33:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_133\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16696:16779  function name() external view returns (string memory) {... */\n    tag_42:\n        /* \"contracts/4_SmartGTFX.sol\":16767:16772  _name */\n      0x07\n        /* \"contracts/4_SmartGTFX.sol\":16760:16772  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":16735:16748  string memory */\n      0x60\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":16760:16772  return _name */\n      swap1\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":16767:16772  _name */\n      swap1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":16760:16772  return _name */\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":16767:16772  _name */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":16760:16772  return _name */\n      dup3\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16696:16779  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":18477:18654  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_49:\n        /* \"contracts/4_SmartGTFX.sol\":18571:18575  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_139\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_141\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/4_SmartGTFX.sol\":18587:18626  _approve(_msgSender(), spender, amount) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":18596:18608  _msgSender() */\n      tag_144\n        /* \"contracts/4_SmartGTFX.sol\":18596:18606  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":18596:18608  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/4_SmartGTFX.sol\":18610:18617  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":18619:18625  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":18587:18595  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":18587:18626  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":18643:18647  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13158:13159  _ */\n    tag_142:\n        /* \"contracts/4_SmartGTFX.sol\":18477:18654  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16838:16929  function totalSupply() external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/4_SmartGTFX.sol\":16910:16922  _totalSupply */\n      sload(0x04)\n        /* \"contracts/4_SmartGTFX.sol\":16838:16929  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14694:14816  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_53:\n        /* \"contracts/4_SmartGTFX.sol\":14736:14816  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      0x43\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      dup3\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":14694:14816  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":19543:20012  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_56:\n        /* \"contracts/4_SmartGTFX.sol\":19660:19664  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_149\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_151\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/4_SmartGTFX.sol\":19676:19712  _transfer(sender, recipient, amount) */\n      tag_153\n        /* \"contracts/4_SmartGTFX.sol\":19686:19692  sender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19694:19703  recipient */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19705:19711  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19676:19685  _transfer */\n      tag_154\n        /* \"contracts/4_SmartGTFX.sol\":19676:19712  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/4_SmartGTFX.sol\":19722:19737  address spender */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":19740:19752  _msgSender() */\n      tag_155\n        /* \"contracts/4_SmartGTFX.sol\":19740:19750  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19740:19752  _msgSender() */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19789:19808  _allowances[sender] */\n      dup1\n      dup8\n      and\n        /* \"contracts/4_SmartGTFX.sol\":19762:19786  uint256 spenderAllowance */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":19789:19808  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":19789:19800  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":19789:19808  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":19789:19817  _allowances[sender][spender] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":19722:19752  address spender = _msgSender() */\n      swap1\n      swap2\n      pop\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":19831:19862  spenderAllowance != uint256(-1) */\n      dup2\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":19827:19985  if (spenderAllowance != uint256(-1)) {... */\n      tag_157\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":19878:19974  _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\")) */\n      tag_157\n        /* \"contracts/4_SmartGTFX.sol\":19887:19893  sender */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":19895:19902  spender */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":19904:19973  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":19925:19931  amount */\n      dup8\n        /* \"contracts/4_SmartGTFX.sol\":19904:19973  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":19904:19920  spenderAllowance */\n      dup7\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":19904:19973  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":19904:19924  spenderAllowance.sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":19904:19973  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_158:\n        /* \"contracts/4_SmartGTFX.sol\":19878:19886  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":19878:19974  _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":20001:20005  true */\n      0x01\n      swap6\n        /* \"contracts/4_SmartGTFX.sol\":19543:20012  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16410:16493  function decimals() external view returns (uint8) {... */\n    tag_58:\n        /* \"contracts/4_SmartGTFX.sol\":16477:16486  _decimals */\n      and(0xff, sload(0x05))\n        /* \"contracts/4_SmartGTFX.sol\":16410:16493  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":20463:20733  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n    tag_61:\n        /* \"contracts/4_SmartGTFX.sol\":20569:20573  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_162\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_164\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/4_SmartGTFX.sol\":20585:20705  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\")) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":20594:20606  _msgSender() */\n      tag_167\n        /* \"contracts/4_SmartGTFX.sol\":20594:20604  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":20594:20606  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/4_SmartGTFX.sol\":20608:20615  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":20617:20704  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":20656:20666  addedValue */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":20617:20704  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      data_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77\n      0x21\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":20617:20628  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":20617:20642  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":20629:20641  _msgSender() */\n      tag_169\n        /* \"contracts/4_SmartGTFX.sol\":20629:20639  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":20629:20641  _msgSender() */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":20617:20642  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":20617:20651  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":20617:20704  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":20617:20655  _allowances[_msgSender()][spender].add */\n      tag_170\n        /* \"contracts/4_SmartGTFX.sol\":20617:20704  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      and\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21727:21870  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n    tag_64:\n        /* \"contracts/4_SmartGTFX.sol\":21799:21803  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_174\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/4_SmartGTFX.sol\":21815:21842  _burn(_msgSender(), amount) */\n      tag_176\n        /* \"contracts/4_SmartGTFX.sol\":21821:21833  _msgSender() */\n      tag_177\n        /* \"contracts/4_SmartGTFX.sol\":21821:21831  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21821:21833  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/4_SmartGTFX.sol\":21835:21841  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":21815:21820  _burn */\n      tag_178\n        /* \"contracts/4_SmartGTFX.sol\":21815:21842  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21859:21863  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13158:13159  _ */\n    tag_175:\n        /* \"contracts/4_SmartGTFX.sol\":21727:21870  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14158:14203  mapping (address => address) public delegates */\n    tag_67:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":22012:22140  function delegate(address delegatee) public validLock permissionCheck {... */\n    tag_70:\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_180\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_182\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/4_SmartGTFX.sol\":22099:22133  _delegate(_msgSender(), delegatee) */\n      tag_184\n        /* \"contracts/4_SmartGTFX.sol\":22109:22121  _msgSender() */\n      tag_185\n        /* \"contracts/4_SmartGTFX.sol\":22109:22119  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":22109:22121  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/4_SmartGTFX.sol\":22123:22132  delegatee */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":22099:22108  _delegate */\n      tag_186\n        /* \"contracts/4_SmartGTFX.sol\":22099:22133  _delegate(_msgSender(), delegatee) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/4_SmartGTFX.sol\":22012:22140  function delegate(address delegatee) public validLock permissionCheck {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12097:12194  function freeze() public onlyOwner {... */\n    tag_72:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_188\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/4_SmartGTFX.sol\":12142:12150  isLocked */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12142:12154  isLocked = 1 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12178:12187  Freezed() */\n      mload(0x40)\n      0x962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12142:12150  isLocked */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12178:12187  Freezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12097:12194  function freeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12200:12301  function unfreeze() public onlyOwner {... */\n    tag_74:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_192\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_193\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/4_SmartGTFX.sol\":12258:12259  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12247:12259  isLocked = 0 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12283:12294  UnFreezed() */\n      mload(0x40)\n      0xf0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12258:12259  0 */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12283:12294  UnFreezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12200:12301  function unfreeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14575:14624  mapping (address => uint32) public numCheckpoints */\n    tag_77:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":17125:17235  function balanceOf(address account) external view returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17210:17228  _balances[account] */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":17184:17191  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":17210:17228  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":17210:17219  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":17210:17228  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":17125:17235  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n    tag_82:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_197\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/4_SmartGTFX.sol\":8391:8392  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8375:8381  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8375:8381  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8391:8392  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8417:8418  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8400:8419  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":24160:25352  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n    tag_85:\n        /* \"contracts/4_SmartGTFX.sol\":24242:24248  uint96 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24282:24294  block.number */\n      number\n        /* \"contracts/4_SmartGTFX.sol\":24268:24279  blockNumber */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":24268:24294  blockNumber < block.number */\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24260:24317  require(blockNumber < block.number, \"Not determined yet\") */\n      tag_201\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x139bdd0819195d195c9b5a5b9959081e595d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24350:24373  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24328:24347  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24350:24373  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24350:24364  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":24350:24373  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24387:24404  nCheckpoints == 0 */\n      dup1\n        /* \"contracts/4_SmartGTFX.sol\":24383:24439  if (nCheckpoints == 0) {... */\n      tag_202\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24427:24428  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24420:24428  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24383:24439  if (nCheckpoints == 0) {... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24496:24516  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24496:24507  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24496:24516  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24496:24534  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24517:24533  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24496:24534  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24496:24544  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24496:24559  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24492:24645  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_203\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24589:24609  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24589:24600  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24589:24609  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24589:24627  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24610:24626  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24589:24627  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24625:24626  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":24589:24633  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":24582:24634  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      tag_204\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":24582:24588  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":24582:24634  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/4_SmartGTFX.sol\":24575:24634  return ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24492:24645  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24703:24723  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24703:24714  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24703:24723  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24703:24726  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24703:24736  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":24703:24726  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":24703:24736  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24703:24750  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24699:24785  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24773:24774  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24766:24774  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24699:24785  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_206:\n        /* \"contracts/4_SmartGTFX.sol\":24795:24807  uint32 lower */\n      0x00\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24836:24852  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24862:25288  while (upper > lower) {... */\n    tag_207:\n        /* \"contracts/4_SmartGTFX.sol\":24877:24882  lower */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":24869:24882  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24869:24874  upper */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":24869:24882  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":24862:25288  while (upper > lower) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24940:24941  2 */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":24923:24936  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":24922:24941  (upper - lower) / 2 */\n      0xffffffff\n      and\n      div\n        /* \"contracts/4_SmartGTFX.sol\":24914:24941  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":24982:25002  Checkpoint memory cp */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25005:25025  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25005:25016  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":25005:25025  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25005:25033  checkpoints[account][center] */\n      0xffffffff\n      dup1\n      dup7\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24982:25033  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup1\n      dup3\n      mstore\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25051:25078  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":25047:25278  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":25105:25121  ceil96(cp.votes) */\n      tag_213\n        /* \"contracts/4_SmartGTFX.sol\":25112:25114  cp */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25112:25120  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25105:25111  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":25105:25121  ceil96(cp.votes) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/4_SmartGTFX.sol\":25098:25121  return ceil96(cp.votes) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":25047:25278  if (cp.fromBlock == blockNumber) {... */\n    tag_212:\n        /* \"contracts/4_SmartGTFX.sol\":25146:25158  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25146:25172  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":25142:25278  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":25200:25206  center */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25192:25206  lower = center */\n      swap4\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":25142:25278  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_216)\n    tag_215:\n        /* \"contracts/4_SmartGTFX.sol\":25262:25263  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":25253:25259  center */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":25253:25263  center - 1 */\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":25245:25263  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":25142:25278  if (cp.fromBlock < blockNumber) {... */\n    tag_216:\n        /* \"contracts/4_SmartGTFX.sol\":24862:25288  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_207)\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25311:25331  checkpoints[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25311:25322  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":25311:25331  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25311:25338  checkpoints[account][lower] */\n      0xffffffff\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25311:25344  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25304:25345  ceil96(checkpoints[account][lower].votes) */\n      tag_217\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25304:25310  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":25304:25345  ceil96(checkpoints[account][lower].votes) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/4_SmartGTFX.sol\":25297:25345  return ceil96(checkpoints[account][lower].votes) */\n      swap7\n        /* \"contracts/4_SmartGTFX.sol\":24160:25352  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":15102:15144  mapping (address => uint256) public nonces */\n    tag_88:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16266:16349  function getOwner() external view returns (address) {... */\n    tag_90:\n        /* \"contracts/4_SmartGTFX.sol\":16309:16316  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":16335:16342  owner() */\n      tag_219\n        /* \"contracts/4_SmartGTFX.sol\":16335:16340  owner */\n      tag_92\n        /* \"contracts/4_SmartGTFX.sol\":16335:16342  owner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/4_SmartGTFX.sol\":16328:16342  return owner() */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16266:16349  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n    tag_92:\n        /* \"contracts/4_SmartGTFX.sol\":7752:7759  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7774:7780  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16552:16639  function symbol() external view returns (string memory) {... */\n    tag_94:\n        /* \"contracts/4_SmartGTFX.sol\":16625:16632  _symbol */\n      0x06\n        /* \"contracts/4_SmartGTFX.sol\":16618:16632  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":16593:16606  string memory */\n      0x60\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":16618:16632  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":16625:16632  _symbol */\n      swap1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":16618:16632  return _symbol */\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":16625:16632  _symbol */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":16618:16632  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n        /* \"contracts/4_SmartGTFX.sol\":21192:21473  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n    tag_101:\n        /* \"contracts/4_SmartGTFX.sol\":21303:21307  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_226\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_228\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/4_SmartGTFX.sol\":21319:21445  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\")) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":21328:21340  _msgSender() */\n      tag_231\n        /* \"contracts/4_SmartGTFX.sol\":21328:21338  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21328:21340  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/4_SmartGTFX.sol\":21342:21349  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":21351:21444  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":21390:21405  subtractedValue */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":21351:21444  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":21351:21362  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":21351:21376  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":21363:21375  _msgSender() */\n      tag_233\n        /* \"contracts/4_SmartGTFX.sol\":21363:21373  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21363:21375  _msgSender() */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":21351:21376  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":21351:21385  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":21351:21444  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":21351:21389  _allowances[_msgSender()][spender].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":21351:21444  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17494:17677  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_104:\n        /* \"contracts/4_SmartGTFX.sol\":17591:17595  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_235\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_237\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/4_SmartGTFX.sol\":17607:17649  _transfer(_msgSender(), recipient, amount) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":17617:17629  _msgSender() */\n      tag_240\n        /* \"contracts/4_SmartGTFX.sol\":17617:17627  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":17617:17629  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/4_SmartGTFX.sol\":17631:17640  recipient */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":17642:17648  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":17607:17616  _transfer */\n      tag_154\n        /* \"contracts/4_SmartGTFX.sol\":17607:17649  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":23511:23738  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23616:23639  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23576:23582  uint96 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23616:23639  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23616:23630  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":23616:23639  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23656:23672  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/4_SmartGTFX.sol\":23656:23731  nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      tag_242\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":23730:23731  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23656:23731  nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      jump(tag_244)\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23682:23702  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23682:23693  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":23682:23702  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23682:23720  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":23703:23719  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":23682:23720  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23718:23719  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":23682:23726  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":23675:23727  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      tag_244\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":23675:23681  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":23675:23727  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/4_SmartGTFX.sol\":23649:23731  return nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":23511:23738  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_246\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_247\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13365:13379  blacklist[who] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13382:13387  false */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":13365:13379  blacklist[who] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13365:13374  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13365:13379  blacklist[who] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13365:13387  blacklist[who] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13411:13426  UnlockUser(who) */\n      mload\n      0x687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13382:13387  false */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13411:13426  UnlockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":22563:23317  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n    tag_113:\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_250\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_252\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_252:\n        /* \"contracts/4_SmartGTFX.sol\":22710:22733  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":14736:14816  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22790:22795  _name */\n      0x07\n        /* \"contracts/4_SmartGTFX.sol\":22774:22797  keccak256(bytes(_name)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_255\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      dup3\n      add\n      swap2\n      jump(tag_254)\n    tag_255:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_256:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_256\n      jumpi\n    tag_254:\n      pop\n      pop\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22799:22811  getChainId() */\n      tag_257\n        /* \"contracts/4_SmartGTFX.sol\":22799:22809  getChainId */\n      tag_258\n        /* \"contracts/4_SmartGTFX.sol\":22799:22811  getChainId() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/4_SmartGTFX.sol\":22821:22825  this */\n      address\n        /* \"contracts/4_SmartGTFX.sol\":22746:22827  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22746:22827  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22736:22828  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22710:22828  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22838:22856  bytes32 structHash */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":14953:15024  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x3a\n      add\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22869:22926  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      dup4\n      dup4\n      add\n      mstore\n      0x60\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0x80\n      dup1\n      dup5\n      add\n      dup12\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22869:22926  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xa0\n      dup5\n      add\n      dup4\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22859:22927  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      dup3\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/4_SmartGTFX.sol\":22964:23021  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0xc0\n      dup6\n      add\n      mstore\n      0xc2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      0xe2\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22964:23021  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0102\n      dup6\n      add\n      dup1\n      dup6\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22954:23022  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup2\n      mload\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23052:23078  ecrecover(digest, v, r, s) */\n      swap2\n      dup3\n      swap1\n      mstore\n      0x0122\n      dup7\n      add\n      dup1\n      dup7\n      mstore\n      dup2\n      swap1\n      mstore\n      0xff\n      dup13\n      and\n      0x0142\n      dup8\n      add\n      mstore\n      0x0162\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n      0x0182\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      swap4\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":22859:22927  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap2\n      swap7\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22954:23022  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap3\n      swap5\n      pop\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":23052:23078  ecrecover(digest, v, r, s) */\n      0x01\n      swap3\n      0x01a2\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":22869:22926  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap3\n      not(0x1f)\n        /* \"contracts/4_SmartGTFX.sol\":23052:23078  ecrecover(digest, v, r, s) */\n      dup4\n      add\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":23052:23078  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23096:23119  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23088:23141  require(signatory != address(0), \"Invalid signature\") */\n      tag_260\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e76616c6964207369676e6174757265)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23168:23185  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23168:23174  nonces */\n      0x0b\n        /* \"contracts/4_SmartGTFX.sol\":23168:23185  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23168:23187  nonces[signatory]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":23159:23187  nonce == nonces[signatory]++ */\n      dup10\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":23151:23205  require(nonce == nonces[signatory]++, \"Invalid nonce\") */\n      tag_261\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x496e76616c6964206e6f6e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/4_SmartGTFX.sol\":23230:23236  expiry */\n      dup8\n        /* \"contracts/4_SmartGTFX.sol\":23223:23226  now */\n      timestamp\n        /* \"contracts/4_SmartGTFX.sol\":23223:23236  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":23215:23262  require(now <= expiry, \"The signature expired\") */\n      tag_262\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x151a19481cda59db985d1d5c9948195e1c1a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/4_SmartGTFX.sol\":23279:23310  _delegate(signatory, delegatee) */\n      tag_263\n        /* \"contracts/4_SmartGTFX.sol\":23289:23298  signatory */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":23300:23309  delegatee */\n      dup12\n        /* \"contracts/4_SmartGTFX.sol\":23279:23288  _delegate */\n      tag_186\n        /* \"contracts/4_SmartGTFX.sol\":23279:23310  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/4_SmartGTFX.sol\":23272:23310  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13158:13159  _ */\n    tag_253:\n        /* \"contracts/4_SmartGTFX.sol\":22563:23317  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n    tag_119:\n        /* \"contracts/4_SmartGTFX.sol\":19053:19057  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12036:12044  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12036:12049  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12028:12069  require(isLocked == 0, \"Token is locked\") */\n      tag_265\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/4_SmartGTFX.sol\":13120:13130  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13110:13119  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13110:13131  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13109:13131  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13101:13148  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_267\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/4_SmartGTFX.sol\":19069:19108  _approve(_msgSender(), spender, amount) */\n      tag_269\n        /* \"contracts/4_SmartGTFX.sol\":19078:19090  _msgSender() */\n      tag_270\n        /* \"contracts/4_SmartGTFX.sol\":19078:19088  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19078:19090  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/4_SmartGTFX.sol\":19092:19099  spender */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19101:19107  amount */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19069:19077  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":19069:19108  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/4_SmartGTFX.sol\":19141:19148  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19118:19165  ApproveAndCallFallBack(spender).receiveApproval */\n      and\n      0x8f4ffcb1\n        /* \"contracts/4_SmartGTFX.sol\":19166:19178  _msgSender() */\n      tag_271\n        /* \"contracts/4_SmartGTFX.sol\":19166:19176  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19166:19178  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/4_SmartGTFX.sol\":19180:19186  amount */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19196:19200  this */\n      address\n        /* \"contracts/4_SmartGTFX.sol\":19203:19207  data */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":19118:19208  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_272:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_274\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_272)\n    tag_274:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19118:19208  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_275\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_275:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_276\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_276:\n        /* \"contracts/4_SmartGTFX.sol\":19118:19208  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_277\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_277:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19225:19229  true */\n      0x01\n      swap8\n        /* \"contracts/4_SmartGTFX.sol\":18935:19236  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n    tag_122:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_279\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13234:13248  blacklist[who] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13251:13255  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13234:13248  blacklist[who] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13234:13255  blacklist[who] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13279:13292  LockUser(who) */\n      mload\n      0x169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13234:13248  blacklist[who] */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13279:13292  LockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":17971:18105  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18071:18089  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":18045:18052  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":18071:18089  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":18071:18082  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":18071:18089  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":18071:18098  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":17971:18105  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14907:15024  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_127:\n        /* \"contracts/4_SmartGTFX.sol\":14953:15024  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      0x3a\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      dup3\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":14907:15024  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14439:14509  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_130:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      0xffffffff\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_133:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_284\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/4_SmartGTFX.sol\":8631:8659  _transferOwnership(newOwner) */\n      tag_184\n        /* \"contracts/4_SmartGTFX.sol\":8650:8658  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8631:8649  _transferOwnership */\n      tag_288\n        /* \"contracts/4_SmartGTFX.sol\":8631:8659  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n    tag_145:\n        /* \"contracts/4_SmartGTFX.sol\":6534:6544  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":25924:26256  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26017:26036  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26009:26077  require(owner != address(0), \"Cannot approve from the zero address\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26095:26116  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26087:26155  require(spender != address(0), \"Cannot approve to the zero address\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26166:26184  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26166:26177  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":26166:26184  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26166:26193  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26166:26202  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26217:26249  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":25924:26256  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":25358:25918  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25455:25475  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25447:25517  require(sender != address(0), \"Cannot transfer from the zero address\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25535:25558  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25527:25598  require(recipient != address(0), \"Cannot transfer to the zero address\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/4_SmartGTFX.sol\":25629:25697  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      tag_296\n        /* \"contracts/4_SmartGTFX.sol\":25651:25657  amount */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25629:25697  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973\n      0x23\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25629:25646  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25629:25638  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25629:25646  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25629:25697  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":25629:25650  _balances[sender].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":25629:25697  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25609:25626  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25609:25618  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25609:25626  _balances[sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25609:25697  _balances[sender] = _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":25730:25787  _balances[recipient].add(amount, \"The balance overflows\") */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n      0x15\n      dup2\n      mstore\n      shl(0x58, 0x5468652062616c616e6365206f766572666c6f7773)\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25730:25750  _balances[recipient] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25730:25787  _balances[recipient].add(amount, \"The balance overflows\") */\n      tag_297\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25755:25761  amount */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25730:25787  _balances[recipient].add(amount, \"The balance overflows\") */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":25730:25754  _balances[recipient].add */\n      tag_170\n        /* \"contracts/4_SmartGTFX.sol\":25730:25787  _balances[recipient].add(amount, \"The balance overflows\") */\n      and\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25707:25727  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25707:25716  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25707:25727  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25707:25787  _balances[recipient] = _balances[recipient].add(amount, \"The balance overflows\") */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":25802:25837  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25707:25727  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":25802:25837  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25863:25880  delegates[sender] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25863:25872  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":25863:25880  delegates[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25882:25902  delegates[recipient] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25848:25911  _moveDelegates(delegates[sender], delegates[recipient], amount) */\n      tag_298\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":25863:25880  delegates[sender] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25882:25902  delegates[recipient] */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25904:25910  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":25848:25862  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":25848:25911  _moveDelegates(delegates[sender], delegates[recipient], amount) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/4_SmartGTFX.sol\":25358:25918  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":2484:2657  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_159:\n        /* \"contracts/4_SmartGTFX.sol\":2570:2577  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":2601:2613  errorMessage */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":2593:2599  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":2585:2614  require(b <= a, errorMessage) */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_302:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n    tag_304:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2585:2614  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_305\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_305:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n      pop\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2632:2637  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":2484:2657  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":1675:1848  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"contracts/4_SmartGTFX.sol\":1761:1768  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":1788:1793  a + b */\n      dup4\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":1815:1827  errorMessage */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":1807:1813  c >= a */\n      dup6\n      dup3\n      lt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":1799:1828  require(c >= a, errorMessage) */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n        /* \"contracts/4_SmartGTFX.sol\":1799:1828  require(c >= a, errorMessage) */\n    tag_307:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":1842:1843  c */\n      swap5\n        /* \"contracts/4_SmartGTFX.sol\":1675:1848  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":26262:26666  function _burn(address account, uint256 amount) internal {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26337:26358  account != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26329:26396  require(account != address(0), \"Cannot burn from the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/4_SmartGTFX.sol\":26428:26493  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x546865206275726e20616d6f756e7420657863656564732062616c616e636500\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26428:26446  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26428:26437  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26428:26446  _balances[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26428:26493  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      tag_314\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26451:26457  amount */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26428:26493  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":26428:26450  _balances[account].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":26428:26493  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26407:26425  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26407:26416  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26407:26425  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26407:26493  _balances[account] = _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26518:26530  _totalSupply */\n      sload(0x04)\n        /* \"contracts/4_SmartGTFX.sol\":26518:26542  _totalSupply.sub(amount) */\n      tag_315\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26535:26541  amount */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":26518:26542  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":26518:26534  _totalSupply.sub */\n      tag_316\n        /* \"contracts/4_SmartGTFX.sol\":26518:26542  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/4_SmartGTFX.sol\":26503:26515  _totalSupply */\n      0x04\n        /* \"contracts/4_SmartGTFX.sol\":26503:26542  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26557:26594  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":26583:26584  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26557:26594  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26620:26638  delegates[account] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26620:26629  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":26620:26638  delegates[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26605:26659  _moveDelegates(delegates[account], address(0), amount) */\n      tag_317\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":26620:26638  delegates[account] */\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26652:26658  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":26605:26619  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":26605:26659  _moveDelegates(delegates[account], address(0), amount) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/4_SmartGTFX.sol\":26262:26666  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":26672:27041  function _delegate(address delegator, address delegatee) internal {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26774:26794  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26748:26771  address currentDelegate */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":26774:26794  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26774:26783  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":26774:26794  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26831:26840  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26831:26851  _balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26861:26881  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26861:26893  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26909:26963  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":26774:26794  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"contracts/4_SmartGTFX.sol\":26831:26851  _balances[delegator] */\n      swap2\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":26861:26893  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":26774:26794  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26909:26963  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26748:26771  address currentDelegate */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26909:26963  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/4_SmartGTFX.sol\":26974:27034  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_319\n        /* \"contracts/4_SmartGTFX.sol\":26989:27004  currentDelegate */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":27006:27015  delegatee */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27017:27033  delegatorBalance */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":26974:26988  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":26974:27034  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/4_SmartGTFX.sol\":26672:27041  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28724:28882  function ceil96(uint256 n) internal pure returns (uint96) {... */\n    tag_205:\n        /* \"contracts/4_SmartGTFX.sol\":28774:28780  uint96 */\n      0x00\n      shl(0x60, 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28796:28797  n */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":28796:28806  n >= 2**96 */\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":28792:28850  if (n >= 2**96) {... */\n      tag_321\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28822:28839  return uint96(-1) */\n      jump(tag_175)\n        /* \"contracts/4_SmartGTFX.sol\":28792:28850  if (n >= 2**96) {... */\n    tag_321:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28873:28874  n */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":28724:28882  function ceil96(uint256 n) internal pure returns (uint96) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28888:29040  function getChainId() internal pure returns (uint256) {... */\n    tag_258:\n        /* \"contracts/4_SmartGTFX.sol\":28999:29008  chainid() */\n      chainid\n        /* \"contracts/4_SmartGTFX.sol\":28888:29040  function getChainId() internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8757:8968  function _transferOwnership(address newOwner) internal {... */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8826:8848  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8818:8891  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/4_SmartGTFX.sol\":8923:8929  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8902:8940  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8923:8929  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8902:8940  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8946:8952  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8946:8963  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8757:8968  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":27047:27941  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n    tag_299:\n        /* \"contracts/4_SmartGTFX.sol\":27152:27158  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27142:27158  srcRep != dstRep */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27142:27148  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27142:27158  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27142:27172  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_326\n      jumpi\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27171:27172  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27162:27168  amount */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27162:27172  amount > 0 */\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":27142:27172  srcRep != dstRep && amount > 0 */\n    tag_326:\n        /* \"contracts/4_SmartGTFX.sol\":27138:27935  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27192:27212  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27188:27550  if (srcRep != address(0)) {... */\n      tag_328\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27251:27273  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27232:27248  uint32 srcRepNum */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27251:27273  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27251:27265  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":27251:27273  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27311:27324  srcRepNum > 0 */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27311:27371  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_329\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":27370:27371  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27311:27371  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_330)\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27327:27346  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27327:27338  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":27327:27346  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27327:27361  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":27347:27360  srcRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/4_SmartGTFX.sol\":27327:27361  checkpoints[srcRep][srcRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27359:27360  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":27327:27367  checkpoints[srcRep][srcRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":27311:27371  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_330:\n        /* \"contracts/4_SmartGTFX.sol\":27291:27371  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27389:27406  uint256 srcRepNew */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27409:27460  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      tag_331\n        /* \"contracts/4_SmartGTFX.sol\":27423:27429  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27409:27460  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520766f746520616d6f756e7420756e646572666c6f7773000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27409:27418  srcRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27409:27422  srcRepOld.sub */\n      tag_159\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27409:27460  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"contracts/4_SmartGTFX.sol\":27389:27460  uint256 srcRepNew = srcRepOld.sub(amount, \"The vote amount underflows\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27478:27535  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_332\n        /* \"contracts/4_SmartGTFX.sol\":27495:27501  srcRep */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":27503:27512  srcRepNum */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27514:27523  srcRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27525:27534  srcRepNew */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27478:27494  _writeCheckpoint */\n      tag_333\n        /* \"contracts/4_SmartGTFX.sol\":27478:27535  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/4_SmartGTFX.sol\":27188:27550  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27568:27588  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27564:27925  if (dstRep != address(0)) {... */\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27627:27649  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27608:27624  uint32 dstRepNum */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27627:27649  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27627:27641  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":27627:27649  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27687:27700  dstRepNum > 0 */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27687:27747  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_335\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":27746:27747  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27687:27747  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_336)\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27703:27722  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27703:27714  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":27703:27722  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27703:27737  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":27723:27736  dstRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/4_SmartGTFX.sol\":27703:27737  checkpoints[dstRep][dstRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27735:27736  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":27703:27743  checkpoints[dstRep][dstRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":27687:27747  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_336:\n        /* \"contracts/4_SmartGTFX.sol\":27667:27747  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27765:27782  uint256 dstRepNew */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27785:27835  dstRepOld.add(amount, \"The vote amount overflows\") */\n      tag_337\n        /* \"contracts/4_SmartGTFX.sol\":27799:27805  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27785:27835  dstRepOld.add(amount, \"The vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520766f746520616d6f756e74206f766572666c6f777300000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27785:27794  dstRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27785:27798  dstRepOld.add */\n      tag_170\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27785:27835  dstRepOld.add(amount, \"The vote amount overflows\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/4_SmartGTFX.sol\":27765:27835  uint256 dstRepNew = dstRepOld.add(amount, \"The vote amount overflows\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27853:27910  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_253\n        /* \"contracts/4_SmartGTFX.sol\":27870:27876  dstRep */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":27878:27887  dstRepNum */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27889:27898  dstRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27900:27909  dstRepNew */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27853:27869  _writeCheckpoint */\n      tag_333\n        /* \"contracts/4_SmartGTFX.sol\":27853:27910  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":2092:2220  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n        /* \"contracts/4_SmartGTFX.sol\":2150:2157  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":2172:2215  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_244\n        /* \"contracts/4_SmartGTFX.sol\":2176:2177  a */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":2179:2180  b */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":2172:2215  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2172:2175  sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":2172:2215  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":27947:28547  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {... */\n    tag_333:\n        /* \"contracts/4_SmartGTFX.sol\":28066:28084  uint32 blockNumber */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28087:28143  safe32(block.number, \"The block number exceeds 32 bits\") */\n      tag_342\n        /* \"contracts/4_SmartGTFX.sol\":28094:28106  block.number */\n      number\n        /* \"contracts/4_SmartGTFX.sol\":28087:28143  safe32(block.number, \"The block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520626c6f636b206e756d62657220657863656564732033322062697473\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28087:28093  safe32 */\n      tag_343\n        /* \"contracts/4_SmartGTFX.sol\":28087:28143  safe32(block.number, \"The block number exceeds 32 bits\") */\n      jump\t// in\n    tag_342:\n        /* \"contracts/4_SmartGTFX.sol\":28066:28143  uint32 blockNumber = safe32(block.number, \"The block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28171:28172  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28156:28168  nCheckpoints */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":28156:28172  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":28156:28241  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_344\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28176:28198  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28176:28187  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28176:28198  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28176:28241  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28199:28215  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28176:28216  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28176:28226  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":28176:28241  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup3\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":28176:28226  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      swap2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":28176:28241  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":28156:28241  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_344:\n        /* \"contracts/4_SmartGTFX.sol\":28152:28476  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_345\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28255:28277  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28255:28266  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28255:28277  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28255:28295  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28278:28294  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28255:28295  checkpoints[delegatee][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28293:28294  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":28255:28301  checkpoints[delegatee][nCheckpoints - 1].votes */\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28255:28312  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28152:28476  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_346)\n    tag_345:\n        /* \"contracts/4_SmartGTFX.sol\":28378:28411  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28339:28361  checkpoints[delegatee] */\n      dup11\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28339:28350  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28339:28361  checkpoints[delegatee] */\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28339:28375  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28339:28411  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap6\n      mload\n      dup7\n      sload\n      swap1\n      dup7\n      and\n      not(0xffffffff)\n      swap2\n      dup3\n      and\n      or\n      dup8\n      sstore\n      swap3\n      mload\n      0x01\n      swap7\n      dup8\n      add\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28423:28448  numCheckpoints[delegatee] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28423:28437  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":28423:28448  numCheckpoints[delegatee] */\n      swap1\n      swap3\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28423:28467  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":28451:28467  nCheckpoints + 1 */\n      swap3\n      dup9\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28423:28467  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28152:28476  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_346:\n        /* \"contracts/4_SmartGTFX.sol\":28489:28540  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap3\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":27947:28547  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28557:28718  function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_343:\n        /* \"contracts/4_SmartGTFX.sol\":28635:28641  uint32 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28672:28684  errorMessage */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":28665:28670  2**32 */\n      0x0100000000\n        /* \"contracts/4_SmartGTFX.sol\":28661:28670  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":28653:28685  require(n < 2**32, errorMessage) */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n        /* \"contracts/4_SmartGTFX.sol\":28653:28685  require(n < 2**32, errorMessage) */\n    tag_348:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28709:28710  n */\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":28557:28718  function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13437:29042  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n    tag_211:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9 43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373\n    data_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77 54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d 43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973 546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b 5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1 546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866 454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e 43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288 43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373\n    data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf 44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929\n    data_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee 43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158203e9acb9b47932c005f33f5495432200a3d48dabe50b37a8a35f68bd679b8188364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b506040516200299c3803806200299c833981810160405260208110156200004457600080fd5b505160006200005b6001600160e01b036200019216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506040805180820190915260188082527f47697473686f636b2046696e616e636520546573746e657400000000000000006020909201918252620000eb9160079162000197565b50604080518082019091526005808252640e88ea88cb60db1b60209092019182526200011a9160069162000197565b506005805460ff191660121790556a295be96e6406697200000060048190556001600160a01b0382166000818152600260209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35062000239565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001da57805160ff19168380011785556200020a565b828001600101855582156200020a579182015b828111156200020a578251825591602001919060010190620001ed565b50620002189291506200021c565b5090565b6200019491905b8082111562000218576000815560010162000223565b61275380620002496000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063782d6fe11161010f578063bd1870a3116100a2578063dd62ed3e11610071578063dd62ed3e146106a4578063e7a324dc146106d2578063f1127ed8146106da578063f2fde38b1461072c576101e5565b8063bd1870a314610556578063c3cda5201461057c578063cae9ca51146105c3578063d79725801461067e576101e5565b806395d89b41116100de57806395d89b41146104d0578063a457c2d7146104d8578063a9059cbb14610504578063b4b5ea5714610530576101e5565b8063782d6fe11461044d5780637ecebe001461049a578063893d20e8146104c05780638da5cb5b146104c8576101e5565b806342966c68116101875780636a28f000116101565780636a28f000146103d85780636fcfff45146103e057806370a082311461041f578063715018a614610445576101e5565b806342966c6814610349578063587cde1e146103665780635c19a95c146103a857806362a5af3b146103d0576101e5565b806320606b70116101c357806320606b70146102c157806323b872dd146102c9578063313ce567146102ff578063395093511461031d576101e5565b806306fdde03146101ea578063095ea7b31461026757806318160ddd146102a7575b600080fd5b6101f2610752565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356107e8565b604080519115158252519081900360200190f35b6102af6108aa565b60408051918252519081900360200190f35b6102af6108b0565b610293600480360360608110156102df57600080fd5b506001600160a01b038135811691602081013590911690604001356108cb565b6103076109f9565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561033357600080fd5b506001600160a01b038135169060200135610a02565b6102936004803603602081101561035f57600080fd5b5035610b14565b61038c6004803603602081101561037c57600080fd5b50356001600160a01b0316610bd4565b604080516001600160a01b039092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b0316610bef565b005b6103ce610ca8565b6103ce610d3c565b610406600480360360208110156103f657600080fd5b50356001600160a01b0316610dca565b6040805163ffffffff9092168252519081900360200190f35b6102af6004803603602081101561043557600080fd5b50356001600160a01b0316610de2565b6103ce610dfd565b6104796004803603604081101561046357600080fd5b506001600160a01b038135169060200135610e9f565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102af600480360360208110156104b057600080fd5b50356001600160a01b03166110cd565b61038c6110df565b61038c6110ee565b6101f26110fd565b610293600480360360408110156104ee57600080fd5b506001600160a01b03813516906020013561115e565b6102936004803603604081101561051a57600080fd5b506001600160a01b038135169060200135611270565b6104796004803603602081101561054657600080fd5b50356001600160a01b0316611328565b6103ce6004803603602081101561056c57600080fd5b50356001600160a01b0316611394565b6103ce600480360360c081101561059257600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135611435565b610293600480360360608110156105d957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117c9945050505050565b6103ce6004803603602081101561069457600080fd5b50356001600160a01b031661198e565b6102af600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516611a35565b6102af611a60565b61070c600480360360408110156106f057600080fd5b5080356001600160a01b0316906020013563ffffffff16611a7b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103ce6004803603602081101561074257600080fd5b50356001600160a01b0316611aa8565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050905090565b60008054600160a01b900460ff161561083a576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561088e576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610899611b09565b8484611b0d565b5060015b92915050565b60045490565b60405180604361261982396043019050604051809103902081565b60008054600160a01b900460ff161561091d576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610971576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61097c848484611bf9565b6000610986611b09565b6001600160a01b0380871660009081526003602090815260408083209385168352929052205490915060001981146109ed576109ed86836109e8876040518060600160405280602581526020016125f46025913986919063ffffffff611db816565b611b0d565b50600195945050505050565b60055460ff1690565b60008054600160a01b900460ff1615610a54576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610aa8576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610ab3611b09565b846109e8856040518060600160405280602181526020016125446021913960036000610add611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611e4f16565b60008054600160a01b900460ff1615610b66576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610bba576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610bcb610bc5611b09565b83611ead565b5060015b919050565b6008602052600090815260409020546001600160a01b031681565b600054600160a01b900460ff1615610c40576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610c94576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610ca5610c9f611b09565b82611fed565b50565b610cb0611b09565b6000546001600160a01b03908116911614610d00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b610d44611b09565b6000546001600160a01b03908116911614610d94576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b600a6020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526002602052604090205490565b610e05611b09565b6000546001600160a01b03908116911614610e55576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000438210610eea576040805162461bcd60e51b8152602060048201526012602482015271139bdd0819195d195c9b5a5b9959081e595d60721b604482015290519081900360640190fd5b6001600160a01b0383166000908152600a602052604090205463ffffffff1680610f185760009150506108a4565b6001600160a01b038416600090815260096020908152604080832063ffffffff600019860181168552925290912054168310610f90576001600160a01b038416600090815260096020908152604080832063ffffffff6000198601168452909152902060010154610f889061206d565b9150506108a4565b6001600160a01b038416600090815260096020908152604080832083805290915290205463ffffffff16831015610fcb5760009150506108a4565b600060001982015b8163ffffffff168163ffffffff16111561108d57600282820363ffffffff16048103610ffd61250a565b506001600160a01b038716600090815260096020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152908714156110685761105c816020015161206d565b955050505050506108a4565b805163ffffffff1687111561107f57819350611086565b6001820392505b5050610fd3565b6001600160a01b038616600090815260096020908152604080832063ffffffff861684529091529020600101546110c39061206d565b9695505050505050565b600b6020526000908152604090205481565b60006110e96110ee565b905090565b6000546001600160a01b031690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b60008054600160a01b900460ff16156111b0576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611204576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a061120f611b09565b846109e8856040518060600160405280602281526020016125d26022913960036000611239611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611db816565b60008054600160a01b900460ff16156112c2576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611316576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0611321611b09565b8484611bf9565b6001600160a01b0381166000908152600a602052604081205463ffffffff168061135357600061138d565b6001600160a01b038316600090815260096020908152604080832063ffffffff600019860116845290915290206001015461138d9061206d565b9392505050565b61139c611b09565b6000546001600160a01b039081169116146113ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b600054600160a01b900460ff1615611486576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff16156114da576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b600060405180806126196043913960430190506040518091039020600760405180828054600181600116156101000203166002900480156115525780601f10611530576101008083540402835291820191611552565b820191906000526020600020905b81548152906001019060200180831161153e575b50509150506040518091039020611567612087565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b03168152602001945050505050604051602081830303815290604052805190602001209050600060405180806126c4603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa1580156116a5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611701576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b602052604090208054600181019091558914611765576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015290519081900360640190fd5b874211156117b2576040805162461bcd60e51b8152602060048201526015602482015274151a19481cda59db985d1d5c9948195e1c1a5c9959605a1b604482015290519081900360640190fd5b6117bc818b611fed565b505050505b505050505050565b60008054600160a01b900460ff161561181b576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561186f576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61188161187a611b09565b8585611b0d565b836001600160a01b0316638f4ffcb1611898611b09565b8530866040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561191d578181015183820152602001611905565b50505050905090810190601f16801561194a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561196c57600080fd5b505af1158015611980573d6000803e3d6000fd5b506001979650505050505050565b611996611b09565b6000546001600160a01b039081169116146119e6576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60405180603a6126c48239603a019050604051809103902081565b60096020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b611ab0611b09565b6000546001600160a01b03908116911614611b00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b610ca58161208b565b3390565b6001600160a01b038316611b525760405162461bcd60e51b815260040180806020018281038252602481526020018061258b6024913960400191505060405180910390fd5b6001600160a01b038216611b975760405162461bcd60e51b81526004018080602001828103825260228152602001806125226022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061267c6025913960400191505060405180910390fd5b6001600160a01b038216611c835760405162461bcd60e51b81526004018080602001828103825260238152602001806126a16023913960400191505060405180910390fd5b611cc6816040518060600160405280602381526020016125af602391396001600160a01b038616600090815260026020526040902054919063ffffffff611db816565b6001600160a01b038085166000908152600260208181526040808420959095558451808601865260158152745468652062616c616e6365206f766572666c6f777360581b818301529387168352529190912054611d2a91839063ffffffff611e4f16565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a36001600160a01b03808416600090815260086020526040808220548584168352912054611db39291821691168361212b565b505050565b60008184841115611e475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578181015183820152602001611df4565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008383018285821015611ea45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b50949350505050565b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260218152602001806126fe6021913960400191505060405180910390fd5b604080518082018252601f81527f546865206275726e20616d6f756e7420657863656564732062616c616e6365006020808301919091526001600160a01b038516600090815260029091529190912054611f5391839063ffffffff611db816565b6001600160a01b038316600090815260026020526040902055600454611f7f908263ffffffff6122e816565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001600160a01b03808316600090815260086020526040812054611fe99216908361212b565b5050565b6001600160a01b03808316600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461206782848361212b565b50505050565b6000600160601b82106120835750600019610bcf565b5090565b4690565b6001600160a01b0381166120d05760405162461bcd60e51b81526004018080602001828103825260268152602001806125656026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b03161415801561214d5750600081115b15611db3576001600160a01b0383161561221f576001600160a01b0383166000908152600a602052604081205463ffffffff16908161218d5760006121bf565b6001600160a01b038516600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b9050600061220d846040518060400160405280601a81526020017f54686520766f746520616d6f756e7420756e646572666c6f777300000000000081525084611db89092919063ffffffff16565b905061221b8684848461232a565b5050505b6001600160a01b03821615611db3576001600160a01b0382166000908152600a602052604081205463ffffffff16908161225a57600061228c565b6001600160a01b038416600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b905060006122da846040518060400160405280601981526020017f54686520766f746520616d6f756e74206f766572666c6f77730000000000000081525084611e4f9092919063ffffffff16565b90506117c18584848461232a565b600061138d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611db8565b600061236b436040518060400160405280602081526020017f54686520626c6f636b206e756d626572206578636565647320333220626974738152506124ac565b905060008463ffffffff161180156123b457506001600160a01b038516600090815260096020908152604080832063ffffffff6000198901811685529252909120548282169116145b156123f1576001600160a01b038516600090815260096020908152604080832063ffffffff60001989011684529091529020600101829055612462565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600984528681208b8616825284528681209551865490861663ffffffff199182161787559251600196870155908152600a9092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106125025760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b509192915050565b60408051808201909152600080825260208201529056fe43616e6e6f7420617070726f766520746f20746865207a65726f206164647265737354686520696e6372656173656420616c6c6f77616e6365206f766572666c6f77734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e7366657220616d6f756e7420657863656564732062616c616e63655468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e7366657220746f20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792943616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a723158203e9acb9b47932c005f33f5495432200a3d48dabe50b37a8a35f68bd679b8188364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x299C CODESIZE SUB DUP1 PUSH3 0x299C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 PUSH3 0x5B PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x192 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP1 DUP3 MSTORE PUSH32 0x47697473686F636B2046696E616E636520546573746E65740000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xEB SWAP2 PUSH1 0x7 SWAP2 PUSH3 0x197 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP1 DUP3 MSTORE PUSH5 0xE88EA88CB PUSH1 0xDB SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x11A SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x197 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x295BE96E64066972000000 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH3 0x239 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1DA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x20A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x20A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x20A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP PUSH3 0x218 SWAP3 SWAP2 POP PUSH3 0x21C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x194 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x218 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x223 JUMP JUMPDEST PUSH2 0x2753 DUP1 PUSH3 0x249 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD1870A3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0x67E JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x530 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C8 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6A28F000 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x445 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x3D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x307 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x115E JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x17C9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198E JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x899 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2619 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP5 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9ED JUMPI PUSH2 0x9ED DUP7 DUP4 PUSH2 0x9E8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F4 PUSH1 0x25 SWAP2 CODECOPY DUP7 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0xAB3 PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2544 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xADD PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBCB PUSH2 0xBC5 PUSH2 0x1B09 JUMP JUMPDEST DUP4 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 PUSH2 0xC9F PUSH2 0x1B09 JUMP JUMPDEST DUP3 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD0819195D195C9B5A5B9959081E595D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xF90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xFFD PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1068 JUMPI PUSH2 0x105C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x206D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x8A4 JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x107F JUMPI DUP2 SWAP4 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10C3 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1204 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x120F PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x1239 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x1321 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1353 JUMPI PUSH1 0x0 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x138D SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1486 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2619 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x1567 PUSH2 0x2087 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x26C4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1701 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1765 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A19481CDA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BC DUP2 DUP12 PUSH2 0x1FED JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x181B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x186F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1881 PUSH2 0x187A PUSH2 0x1B09 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 PUSH2 0x1898 PUSH2 0x1B09 JUMP JUMPDEST DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1905 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x194A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1996 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x26C4 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0x208B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2522 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x267C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25AF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x5468652062616C616E6365206F766572666C6F7773 PUSH1 0x58 SHL DUP2 DUP4 ADD MSTORE SWAP4 DUP8 AND DUP4 MSTORE MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1D2A SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1DB3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E39 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 DUP6 DUP3 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x546865206275726E20616D6F756E7420657863656564732062616C616E636500 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1F53 SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1F7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x22E8 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FE9 SWAP3 AND SWAP1 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x2067 DUP3 DUP5 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 SHL DUP3 LT PUSH2 0x2083 JUMPI POP PUSH1 0x0 NOT PUSH2 0xBCF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2565 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x214D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x221F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220D DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E7420756E646572666C6F7773000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1DB8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x221B DUP7 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x225A JUMPI PUSH1 0x0 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DA DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E74206F766572666C6F777300000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1E4F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17C1 DUP6 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520626C6F636B206E756D62657220657863656564732033322062697473 DUP2 MSTORE POP PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x23B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420617070726F766520746F20746865 KECCAK256 PUSH27 0x65726F206164647265737354686520696E6372656173656420616C PUSH13 0x6F77616E6365206F766572666C PUSH16 0x77734F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F206164647265737343 PUSH2 0x6E6E PUSH16 0x7420617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737354 PUSH9 0x65207472616E736665 PUSH19 0x20616D6F756E7420657863656564732062616C PUSH2 0x6E63 PUSH6 0x546865206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F546865207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E657243616E6E6F PUSH21 0x207472616E736665722066726F6D20746865207A65 PUSH19 0x6F206164647265737343616E6E6F7420747261 PUSH15 0x7366657220746F20746865207A6572 PUSH16 0x206164647265737344656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 NUMBER PUSH2 0x6E6E PUSH16 0x74206275726E2066726F6D2074686520 PUSH27 0x65726F2061646472657373A265627A7A723158203E9ACB9B47932C STOP 0x5F CALLER CREATE2 0x49 SLOAD ORIGIN KECCAK256 EXP RETURNDATASIZE 0x48 0xDA 0xBE POP 0xB3 PUSH27 0x8A35F68BD679B8188364736F6C6343000511003200000000000000 ",
							"sourceMap": "13437:15605:0:-;;;11946:1;11929:18;;-1:-1:-1;;;;11929:18:0;;;15928:276;5:2:-1;;;;30:1;27;20:12;5:2;15928:276:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15928:276:0;7531:17;7551:12;-1:-1:-1;;;;;7551:10:0;:12;:::i;:::-;7569:6;:18;;-1:-1:-1;;;;;;7569:18:0;-1:-1:-1;;;;;7569:18:0;;;;;;;7598:43;;7569:18;;-1:-1:-1;7569:18:0;7598:43;;7569:6;;7598:43;-1:-1:-1;15974:34:0;;;;;;;;;;;;;;;;;;;;;;;:5;;:34;:::i;:::-;-1:-1:-1;16018:17:0;;;;;;;;;;;;;-1:-1:-1;;;16018:17:0;;;;;;;;;:7;;:17;:::i;:::-;-1:-1:-1;16045:9:0;:14;;-1:-1:-1;;16045:14:0;16057:2;16045:14;;;16084:11;16069:12;:26;;;-1:-1:-1;;;;;16105:18:0;;16045:9;16105:18;;;:9;:18;;;;;;;;:33;;;16154:43;;;;;;16105:18;;16045:9;;16154:43;;;;;;;;;;15928:276;13437:15605;;6459:90;6534:10;6459:90;;:::o;13437:15605::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13437:15605:0;;;-1:-1:-1;13437:15605:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c8063782d6fe11161010f578063bd1870a3116100a2578063dd62ed3e11610071578063dd62ed3e146106a4578063e7a324dc146106d2578063f1127ed8146106da578063f2fde38b1461072c576101e5565b8063bd1870a314610556578063c3cda5201461057c578063cae9ca51146105c3578063d79725801461067e576101e5565b806395d89b41116100de57806395d89b41146104d0578063a457c2d7146104d8578063a9059cbb14610504578063b4b5ea5714610530576101e5565b8063782d6fe11461044d5780637ecebe001461049a578063893d20e8146104c05780638da5cb5b146104c8576101e5565b806342966c68116101875780636a28f000116101565780636a28f000146103d85780636fcfff45146103e057806370a082311461041f578063715018a614610445576101e5565b806342966c6814610349578063587cde1e146103665780635c19a95c146103a857806362a5af3b146103d0576101e5565b806320606b70116101c357806320606b70146102c157806323b872dd146102c9578063313ce567146102ff578063395093511461031d576101e5565b806306fdde03146101ea578063095ea7b31461026757806318160ddd146102a7575b600080fd5b6101f2610752565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356107e8565b604080519115158252519081900360200190f35b6102af6108aa565b60408051918252519081900360200190f35b6102af6108b0565b610293600480360360608110156102df57600080fd5b506001600160a01b038135811691602081013590911690604001356108cb565b6103076109f9565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561033357600080fd5b506001600160a01b038135169060200135610a02565b6102936004803603602081101561035f57600080fd5b5035610b14565b61038c6004803603602081101561037c57600080fd5b50356001600160a01b0316610bd4565b604080516001600160a01b039092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b0316610bef565b005b6103ce610ca8565b6103ce610d3c565b610406600480360360208110156103f657600080fd5b50356001600160a01b0316610dca565b6040805163ffffffff9092168252519081900360200190f35b6102af6004803603602081101561043557600080fd5b50356001600160a01b0316610de2565b6103ce610dfd565b6104796004803603604081101561046357600080fd5b506001600160a01b038135169060200135610e9f565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102af600480360360208110156104b057600080fd5b50356001600160a01b03166110cd565b61038c6110df565b61038c6110ee565b6101f26110fd565b610293600480360360408110156104ee57600080fd5b506001600160a01b03813516906020013561115e565b6102936004803603604081101561051a57600080fd5b506001600160a01b038135169060200135611270565b6104796004803603602081101561054657600080fd5b50356001600160a01b0316611328565b6103ce6004803603602081101561056c57600080fd5b50356001600160a01b0316611394565b6103ce600480360360c081101561059257600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135611435565b610293600480360360608110156105d957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117c9945050505050565b6103ce6004803603602081101561069457600080fd5b50356001600160a01b031661198e565b6102af600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516611a35565b6102af611a60565b61070c600480360360408110156106f057600080fd5b5080356001600160a01b0316906020013563ffffffff16611a7b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103ce6004803603602081101561074257600080fd5b50356001600160a01b0316611aa8565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050905090565b60008054600160a01b900460ff161561083a576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561088e576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610899611b09565b8484611b0d565b5060015b92915050565b60045490565b60405180604361261982396043019050604051809103902081565b60008054600160a01b900460ff161561091d576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610971576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61097c848484611bf9565b6000610986611b09565b6001600160a01b0380871660009081526003602090815260408083209385168352929052205490915060001981146109ed576109ed86836109e8876040518060600160405280602581526020016125f46025913986919063ffffffff611db816565b611b0d565b50600195945050505050565b60055460ff1690565b60008054600160a01b900460ff1615610a54576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610aa8576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610ab3611b09565b846109e8856040518060600160405280602181526020016125446021913960036000610add611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611e4f16565b60008054600160a01b900460ff1615610b66576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610bba576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610bcb610bc5611b09565b83611ead565b5060015b919050565b6008602052600090815260409020546001600160a01b031681565b600054600160a01b900460ff1615610c40576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610c94576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610ca5610c9f611b09565b82611fed565b50565b610cb0611b09565b6000546001600160a01b03908116911614610d00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b610d44611b09565b6000546001600160a01b03908116911614610d94576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b600a6020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526002602052604090205490565b610e05611b09565b6000546001600160a01b03908116911614610e55576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000438210610eea576040805162461bcd60e51b8152602060048201526012602482015271139bdd0819195d195c9b5a5b9959081e595d60721b604482015290519081900360640190fd5b6001600160a01b0383166000908152600a602052604090205463ffffffff1680610f185760009150506108a4565b6001600160a01b038416600090815260096020908152604080832063ffffffff600019860181168552925290912054168310610f90576001600160a01b038416600090815260096020908152604080832063ffffffff6000198601168452909152902060010154610f889061206d565b9150506108a4565b6001600160a01b038416600090815260096020908152604080832083805290915290205463ffffffff16831015610fcb5760009150506108a4565b600060001982015b8163ffffffff168163ffffffff16111561108d57600282820363ffffffff16048103610ffd61250a565b506001600160a01b038716600090815260096020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152908714156110685761105c816020015161206d565b955050505050506108a4565b805163ffffffff1687111561107f57819350611086565b6001820392505b5050610fd3565b6001600160a01b038616600090815260096020908152604080832063ffffffff861684529091529020600101546110c39061206d565b9695505050505050565b600b6020526000908152604090205481565b60006110e96110ee565b905090565b6000546001600160a01b031690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b60008054600160a01b900460ff16156111b0576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611204576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a061120f611b09565b846109e8856040518060600160405280602281526020016125d26022913960036000611239611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611db816565b60008054600160a01b900460ff16156112c2576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611316576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0611321611b09565b8484611bf9565b6001600160a01b0381166000908152600a602052604081205463ffffffff168061135357600061138d565b6001600160a01b038316600090815260096020908152604080832063ffffffff600019860116845290915290206001015461138d9061206d565b9392505050565b61139c611b09565b6000546001600160a01b039081169116146113ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b600054600160a01b900460ff1615611486576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff16156114da576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b600060405180806126196043913960430190506040518091039020600760405180828054600181600116156101000203166002900480156115525780601f10611530576101008083540402835291820191611552565b820191906000526020600020905b81548152906001019060200180831161153e575b50509150506040518091039020611567612087565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b03168152602001945050505050604051602081830303815290604052805190602001209050600060405180806126c4603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa1580156116a5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611701576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b602052604090208054600181019091558914611765576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015290519081900360640190fd5b874211156117b2576040805162461bcd60e51b8152602060048201526015602482015274151a19481cda59db985d1d5c9948195e1c1a5c9959605a1b604482015290519081900360640190fd5b6117bc818b611fed565b505050505b505050505050565b60008054600160a01b900460ff161561181b576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561186f576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61188161187a611b09565b8585611b0d565b836001600160a01b0316638f4ffcb1611898611b09565b8530866040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561191d578181015183820152602001611905565b50505050905090810190601f16801561194a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561196c57600080fd5b505af1158015611980573d6000803e3d6000fd5b506001979650505050505050565b611996611b09565b6000546001600160a01b039081169116146119e6576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60405180603a6126c48239603a019050604051809103902081565b60096020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b611ab0611b09565b6000546001600160a01b03908116911614611b00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b610ca58161208b565b3390565b6001600160a01b038316611b525760405162461bcd60e51b815260040180806020018281038252602481526020018061258b6024913960400191505060405180910390fd5b6001600160a01b038216611b975760405162461bcd60e51b81526004018080602001828103825260228152602001806125226022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061267c6025913960400191505060405180910390fd5b6001600160a01b038216611c835760405162461bcd60e51b81526004018080602001828103825260238152602001806126a16023913960400191505060405180910390fd5b611cc6816040518060600160405280602381526020016125af602391396001600160a01b038616600090815260026020526040902054919063ffffffff611db816565b6001600160a01b038085166000908152600260208181526040808420959095558451808601865260158152745468652062616c616e6365206f766572666c6f777360581b818301529387168352529190912054611d2a91839063ffffffff611e4f16565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a36001600160a01b03808416600090815260086020526040808220548584168352912054611db39291821691168361212b565b505050565b60008184841115611e475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578181015183820152602001611df4565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008383018285821015611ea45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b50949350505050565b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260218152602001806126fe6021913960400191505060405180910390fd5b604080518082018252601f81527f546865206275726e20616d6f756e7420657863656564732062616c616e6365006020808301919091526001600160a01b038516600090815260029091529190912054611f5391839063ffffffff611db816565b6001600160a01b038316600090815260026020526040902055600454611f7f908263ffffffff6122e816565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001600160a01b03808316600090815260086020526040812054611fe99216908361212b565b5050565b6001600160a01b03808316600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461206782848361212b565b50505050565b6000600160601b82106120835750600019610bcf565b5090565b4690565b6001600160a01b0381166120d05760405162461bcd60e51b81526004018080602001828103825260268152602001806125656026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b03161415801561214d5750600081115b15611db3576001600160a01b0383161561221f576001600160a01b0383166000908152600a602052604081205463ffffffff16908161218d5760006121bf565b6001600160a01b038516600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b9050600061220d846040518060400160405280601a81526020017f54686520766f746520616d6f756e7420756e646572666c6f777300000000000081525084611db89092919063ffffffff16565b905061221b8684848461232a565b5050505b6001600160a01b03821615611db3576001600160a01b0382166000908152600a602052604081205463ffffffff16908161225a57600061228c565b6001600160a01b038416600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b905060006122da846040518060400160405280601981526020017f54686520766f746520616d6f756e74206f766572666c6f77730000000000000081525084611e4f9092919063ffffffff16565b90506117c18584848461232a565b600061138d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611db8565b600061236b436040518060400160405280602081526020017f54686520626c6f636b206e756d626572206578636565647320333220626974738152506124ac565b905060008463ffffffff161180156123b457506001600160a01b038516600090815260096020908152604080832063ffffffff6000198901811685529252909120548282169116145b156123f1576001600160a01b038516600090815260096020908152604080832063ffffffff60001989011684529091529020600101829055612462565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600984528681208b8616825284528681209551865490861663ffffffff199182161787559251600196870155908152600a9092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106125025760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b509192915050565b60408051808201909152600080825260208201529056fe43616e6e6f7420617070726f766520746f20746865207a65726f206164647265737354686520696e6372656173656420616c6c6f77616e6365206f766572666c6f77734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e7366657220616d6f756e7420657863656564732062616c616e63655468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e7366657220746f20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792943616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a723158203e9acb9b47932c005f33f5495432200a3d48dabe50b37a8a35f68bd679b8188364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD1870A3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0x67E JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x530 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C8 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6A28F000 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x445 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x3D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x307 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x115E JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x17C9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198E JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x899 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2619 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP5 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9ED JUMPI PUSH2 0x9ED DUP7 DUP4 PUSH2 0x9E8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F4 PUSH1 0x25 SWAP2 CODECOPY DUP7 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0xAB3 PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2544 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xADD PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBCB PUSH2 0xBC5 PUSH2 0x1B09 JUMP JUMPDEST DUP4 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 PUSH2 0xC9F PUSH2 0x1B09 JUMP JUMPDEST DUP3 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD0819195D195C9B5A5B9959081E595D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xF90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xFFD PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1068 JUMPI PUSH2 0x105C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x206D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x8A4 JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x107F JUMPI DUP2 SWAP4 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10C3 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1204 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x120F PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x1239 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x1321 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1353 JUMPI PUSH1 0x0 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x138D SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1486 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2619 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x1567 PUSH2 0x2087 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x26C4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1701 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1765 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A19481CDA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BC DUP2 DUP12 PUSH2 0x1FED JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x181B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x186F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1881 PUSH2 0x187A PUSH2 0x1B09 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 PUSH2 0x1898 PUSH2 0x1B09 JUMP JUMPDEST DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1905 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x194A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1996 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x26C4 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0x208B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2522 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x267C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25AF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x5468652062616C616E6365206F766572666C6F7773 PUSH1 0x58 SHL DUP2 DUP4 ADD MSTORE SWAP4 DUP8 AND DUP4 MSTORE MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1D2A SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1DB3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E39 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 DUP6 DUP3 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x546865206275726E20616D6F756E7420657863656564732062616C616E636500 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1F53 SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1F7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x22E8 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FE9 SWAP3 AND SWAP1 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x2067 DUP3 DUP5 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 SHL DUP3 LT PUSH2 0x2083 JUMPI POP PUSH1 0x0 NOT PUSH2 0xBCF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2565 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x214D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x221F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220D DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E7420756E646572666C6F7773000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1DB8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x221B DUP7 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x225A JUMPI PUSH1 0x0 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DA DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E74206F766572666C6F777300000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1E4F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17C1 DUP6 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520626C6F636B206E756D62657220657863656564732033322062697473 DUP2 MSTORE POP PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x23B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420617070726F766520746F20746865 KECCAK256 PUSH27 0x65726F206164647265737354686520696E6372656173656420616C PUSH13 0x6F77616E6365206F766572666C PUSH16 0x77734F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F206164647265737343 PUSH2 0x6E6E PUSH16 0x7420617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737354 PUSH9 0x65207472616E736665 PUSH19 0x20616D6F756E7420657863656564732062616C PUSH2 0x6E63 PUSH6 0x546865206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F546865207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E657243616E6E6F PUSH21 0x207472616E736665722066726F6D20746865207A65 PUSH19 0x6F206164647265737343616E6E6F7420747261 PUSH15 0x7366657220746F20746865207A6572 PUSH16 0x206164647265737344656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 NUMBER PUSH2 0x6E6E PUSH16 0x74206275726E2066726F6D2074686520 PUSH27 0x65726F2061646472657373A265627A7A723158203E9ACB9B47932C STOP 0x5F CALLER CREATE2 0x49 SLOAD ORIGIN KECCAK256 EXP RETURNDATASIZE 0x48 0xDA 0xBE POP 0xB3 PUSH27 0x8A35F68BD679B8188364736F6C6343000511003200000000000000 ",
							"sourceMap": "13437:15605:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13437:15605:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16696:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16696:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18477:177;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18477:177:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16838:91;;;:::i;:::-;;;;;;;;;;;;;;;;14694:122;;;:::i;19543:469::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;19543:469:0;;;;;;;;;;;;;;;;;:::i;16410:83::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20463:270;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;20463:270:0;;;;;;;;:::i;21727:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21727:143:0;;:::i;14158:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14158:45:0;-1:-1:-1;;;;;14158:45:0;;:::i;:::-;;;;-1:-1:-1;;;;;14158:45:0;;;;;;;;;;;;;;22012:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22012:128:0;-1:-1:-1;;;;;22012:128:0;;:::i;:::-;;12097:97;;;:::i;12200:101::-;;;:::i;14575:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14575:49:0;-1:-1:-1;;;;;14575:49:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;17125:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17125:110:0;-1:-1:-1;;;;;17125:110:0;;:::i;8297:127::-;;;:::i;24160:1192::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;24160:1192:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15102:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15102:42:0;-1:-1:-1;;;;;15102:42:0;;:::i;16266:83::-;;;:::i;7714:71::-;;;:::i;16552:87::-;;;:::i;21192:281::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;21192:281:0;;;;;;;;:::i;17494:183::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17494:183:0;;;;;;;;:::i;23511:227::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23511:227:0;-1:-1:-1;;;;;23511:227:0;;:::i;13305:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13305:128:0;-1:-1:-1;;;;;13305:128:0;;:::i;22563:754::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;22563:754:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18935:301::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;18935:301:0;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;18935:301:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;18935:301:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;18935:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18935:301:0;;-1:-1:-1;18935:301:0;;-1:-1:-1;;;;;18935:301:0:i;13176:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13176:123:0;-1:-1:-1;;;;;13176:123:0;;:::i;17971:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17971:134:0;;;;;;;;;;:::i;14907:117::-;;;:::i;14439:70::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14439:70:0;;-1:-1:-1;;;;;14439:70:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;8563:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8563:101:0;-1:-1:-1;;;;;8563:101:0;;:::i;16696:83::-;16767:5;16760:12;;;;;;;;-1:-1:-1;;16760:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16735:13;;16760:12;;16767:5;;16760:12;;16767:5;16760:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16696:83;:::o;18477:177::-;18571:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;18587:39;18596:12;:10;:12::i;:::-;18610:7;18619:6;18587:8;:39::i;:::-;-1:-1:-1;18643:4:0;13158:1;18477:177;;;;:::o;16838:91::-;16910:12;;16838:91;:::o;14694:122::-;14736:80;;;;;;;;;;;;;;;;;;14694:122;:::o;19543:469::-;19660:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;19676:36;19686:6;19694:9;19705:6;19676:9;:36::i;:::-;19722:15;19740:12;:10;:12::i;:::-;-1:-1:-1;;;;;19789:19:0;;;19762:24;19789:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;19722:30;;-1:-1:-1;;;19831:31:0;;19827:158;;19878:96;19887:6;19895:7;19904:69;19925:6;19904:69;;;;;;;;;;;;;;;;;:16;;:69;;:20;:69;:::i;:::-;19878:8;:96::i;:::-;-1:-1:-1;20001:4:0;;19543:469;-1:-1:-1;;;;;19543:469:0:o;16410:83::-;16477:9;;;;16410:83;:::o;20463:270::-;20569:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;20585:120;20594:12;:10;:12::i;:::-;20608:7;20617:87;20656:10;20617:87;;;;;;;;;;;;;;;;;:11;:25;20629:12;:10;:12::i;:::-;-1:-1:-1;;;;;20617:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;20617:25:0;;;:34;;;;;;;;;;;:87;;:38;:87;:::i;21727:143::-;21799:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;21815:27;21821:12;:10;:12::i;:::-;21835:6;21815:5;:27::i;:::-;-1:-1:-1;21859:4:0;13158:1;21727:143;;;:::o;14158:45::-;;;;;;;;;;;;-1:-1:-1;;;;;14158:45:0;;:::o;22012:128::-;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;22099:34;22109:12;:10;:12::i;:::-;22123:9;22099;:34::i;:::-;22012:128;:::o;12097:97::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;12142:8;:12;;-1:-1:-1;;;;12142:12:0;-1:-1:-1;;;12142:12:0;;;12178:9;;;;12142:8;12178:9;12097:97::o;12200:101::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;12258:1;12247:12;;-1:-1:-1;;;;12247:12:0;;;12283:11;;;;12258:1;12283:11;12200:101::o;14575:49::-;;;;;;;;;;;;;;;:::o;17125:110::-;-1:-1:-1;;;;;17210:18:0;17184:7;17210:18;;;:9;:18;;;;;;;17125:110::o;8297:127::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;8391:1;8375:6;;8354:40;;-1:-1:-1;;;;;8375:6:0;;;;8354:40;;8391:1;;8354:40;8417:1;8400:19;;-1:-1:-1;;;;;;8400:19:0;;;8297:127::o;24160:1192::-;24242:6;24282:12;24268:11;:26;24260:57;;;;;-1:-1:-1;;;24260:57:0;;;;;;;;;;;;-1:-1:-1;;;24260:57:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;24350:23:0;;24328:19;24350:23;;;:14;:23;;;;;;;;24387:17;24383:56;;24427:1;24420:8;;;;;24383:56;-1:-1:-1;;;;;24496:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;24517:16:0;;24496:38;;;;;;;;;:48;;:63;-1:-1:-1;24492:153:0;;-1:-1:-1;;;;;24589:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;24610:16:0;;24589:38;;;;;;;;24625:1;24589:44;;24582:52;;:6;:52::i;:::-;24575:59;;;;;24492:153;-1:-1:-1;;;;;24703:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;24699:86:0;;;24773:1;24766:8;;;;;24699:86;24795:12;-1:-1:-1;;24836:16:0;;24862:426;24877:5;24869:13;;:5;:13;;;24862:426;;;24940:1;24923:13;;;24922:19;;;24914:27;;24982:20;;:::i;:::-;-1:-1:-1;;;;;;25005:20:0;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;24982:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25051:27;;25047:231;;;25105:16;25112:2;:8;;;25105:6;:16::i;:::-;25098:23;;;;;;;;;25047:231;25146:12;;:26;;;-1:-1:-1;25142:136:0;;;25200:6;25192:14;;25142:136;;;25262:1;25253:6;:10;25245:18;;25142:136;24862:426;;;;;-1:-1:-1;;;;;25311:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;25304:41;;:6;:41::i;:::-;25297:48;24160:1192;-1:-1:-1;;;;;;24160:1192:0:o;15102:42::-;;;;;;;;;;;;;:::o;16266:83::-;16309:7;16335;:5;:7::i;:::-;16328:14;;16266:83;:::o;7714:71::-;7752:7;7774:6;-1:-1:-1;;;;;7774:6:0;7714:71;:::o;16552:87::-;16625:7;16618:14;;;;;;;;-1:-1:-1;;16618:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16593:13;;16618:14;;16625:7;;16618:14;;16625:7;16618:14;;;;;;;;;;;;;;;;;;;;;;;;21192:281;21303:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;21319:126;21328:12;:10;:12::i;:::-;21342:7;21351:93;21390:15;21351:93;;;;;;;;;;;;;;;;;:11;:25;21363:12;:10;:12::i;:::-;-1:-1:-1;;;;;21351:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;21351:25:0;;;:34;;;;;;;;;;;:93;;:38;:93;:::i;17494:183::-;17591:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;17607:42;17617:12;:10;:12::i;:::-;17631:9;17642:6;17607:9;:42::i;23511:227::-;-1:-1:-1;;;;;23616:23:0;;23576:6;23616:23;;;:14;:23;;;;;;;;23656:16;:75;;23730:1;23656:75;;;-1:-1:-1;;;;;23682:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;23703:16:0;;23682:38;;;;;;;;23718:1;23682:44;;23675:52;;:6;:52::i;:::-;23649:82;23511:227;-1:-1:-1;;;23511:227:0:o;13305:128::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13365:14:0;;13382:5;13365:14;;;:9;:14;;;;;;:22;;-1:-1:-1;;13365:22:0;;;13411:15;;;13382:5;13411:15;13305:128;:::o;22563:754::-;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;22710:23;14736:80;;;;;;;;;;;;;;;;;;;22790:5;22774:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22799:12;:10;:12::i;:::-;22821:4;22746:81;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22746:81:0;-1:-1:-1;;;;;22746:81:0;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22746:81:0;;;22736:92;;;;;;22710:118;;22838:18;14953:71;;;;;;;;;;;;;;;;;;;22869:57;;;;;;;;-1:-1:-1;;;;;22869:57:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;22869:57:0;;;;;22859:68;;;;;;-1:-1:-1;;;22964:57:0;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;22964:57:0;;;;;;22954:68;;;;;;;;;-1:-1:-1;23052:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22859:68;;-1:-1:-1;22954:68:0;;-1:-1:-1;;;23052:26:0;;;;;;;22869:57;-1:-1:-1;;23052:26:0;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;23052:26:0;;-1:-1:-1;;23052:26:0;;;-1:-1:-1;;;;;;;23096:23:0;;23088:53;;;;;-1:-1:-1;;;23088:53:0;;;;;;;;;;;;-1:-1:-1;;;23088:53:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;23168:17:0;;;;;;:6;:17;;;;;:19;;;;;;;;23159:28;;23151:54;;;;;-1:-1:-1;;;23151:54:0;;;;;;;;;;;;-1:-1:-1;;;23151:54:0;;;;;;;;;;;;;;;23230:6;23223:3;:13;;23215:47;;;;;-1:-1:-1;;;23215:47:0;;;;;;;;;;;;-1:-1:-1;;;23215:47:0;;;;;;;;;;;;;;;23279:31;23289:9;23300;23279;:31::i;:::-;23272:38;;;;13158:1;22563:754;;;;;;:::o;18935:301::-;19053:4;12036:8;;-1:-1:-1;;;12036:8:0;;;;:13;12028:41;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;-1:-1:-1;;;12028:41:0;;;;;;;;;;;;;;;13120:10;13110:21;;;;:9;:21;;;;;;;;13109:22;13101:47;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;-1:-1:-1;;;13101:47:0;;;;;;;;;;;;;;;19069:39;19078:12;:10;:12::i;:::-;19092:7;19101:6;19069:8;:39::i;:::-;19141:7;-1:-1:-1;;;;;19118:47:0;;19166:12;:10;:12::i;:::-;19180:6;19196:4;19203;19118:90;;;;;;;;;;;;;-1:-1:-1;;;;;19118:90:0;-1:-1:-1;;;;;19118:90:0;;;;;;;;;;;-1:-1:-1;;;;;19118:90:0;-1:-1:-1;;;;;19118:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;19118:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19118:90:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;19225:4:0;;18935:301;-1:-1:-1;;;;;;;18935:301:0:o;13176:123::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13234:14:0;;;;;;13251:4;13234:14;;;;;;;;:21;;-1:-1:-1;;13234:21:0;;;;;;;13279:13;;;13234:14;13279:13;13176:123;:::o;17971:134::-;-1:-1:-1;;;;;18071:18:0;;;18045:7;18071:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17971:134::o;14907:117::-;14953:71;;;;;;;;;;;;;;;;;;14907:117;:::o;14439:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8563:101::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;8631:28;8650:8;8631:18;:28::i;6459:90::-;6534:10;6459:90;:::o;25924:332::-;-1:-1:-1;;;;;26017:19:0;;26009:68;;;;-1:-1:-1;;;26009:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26095:21:0;;26087:68;;;;-1:-1:-1;;;26087:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26166:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;26217:32;;;;;;;;;;;;;;;;;25924:332;;;:::o;25358:560::-;-1:-1:-1;;;;;25455:20:0;;25447:70;;;;-1:-1:-1;;;25447:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25535:23:0;;25527:71;;;;-1:-1:-1;;;25527:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25629:68;25651:6;25629:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25629:17:0;;;;;;:9;:17;;;;;;;:68;;:21;:68;:::i;:::-;-1:-1:-1;;;;;25609:17:0;;;;;;;:9;:17;;;;;;;;:88;;;;25730:57;;;;;;;;;;-1:-1:-1;;;25730:57:0;;;;:20;;;;;;;;;;;:57;;25755:6;;25730:57;:24;:57;:::i;:::-;-1:-1:-1;;;;;25707:20:0;;;;;;;:9;:20;;;;;;;;;:80;;;;25802:35;;;;;;;25707:20;;25802:35;;;;;;;;;;;;;-1:-1:-1;;;;;25863:17:0;;;;;;;:9;:17;;;;;;;25882:20;;;;;;;;25848:63;;25863:17;;;;25882:20;25904:6;25848:14;:63::i;:::-;25358:560;;;:::o;2484:173::-;2570:7;2601:12;2593:6;;;;2585:29;;;;-1:-1:-1;;;2585:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2585:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2632:5:0;;;2484:173::o;1675:::-;1761:7;1788:5;;;1815:12;1807:6;;;;1799:29;;;;-1:-1:-1;;;1799:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1799:29:0;-1:-1:-1;1842:1:0;1675:173;-1:-1:-1;;;;1675:173:0:o;26262:404::-;-1:-1:-1;;;;;26337:21:0;;26329:67;;;;-1:-1:-1;;;26329:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26428:65;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26428:18:0;;-1:-1:-1;26428:18:0;;;:9;:18;;;;;;;;:65;;26451:6;;26428:65;:22;:65;:::i;:::-;-1:-1:-1;;;;;26407:18:0;;;;;;:9;:18;;;;;:86;26518:12;;:24;;26535:6;26518:24;:16;:24;:::i;:::-;26503:12;:39;26557:37;;;;;;;;26583:1;;-1:-1:-1;;;;;26557:37:0;;;;;;;;;;;;-1:-1:-1;;;;;26620:18:0;;;;;;;:9;:18;;;;;;26605:54;;26620:18;;26652:6;26605:14;:54::i;:::-;26262:404;;:::o;26672:369::-;-1:-1:-1;;;;;26774:20:0;;;26748:23;26774:20;;;:9;:20;;;;;;;;;;26831:9;:20;;;;;;26861;;;;:32;;;-1:-1:-1;;;;;;26861:32:0;;;;;;;26909:54;;26774:20;;;;;26831;;26861:32;;26774:20;;;26909:54;;26748:23;26909:54;26974:60;26989:15;27006:9;27017:16;26974:14;:60::i;:::-;26672:369;;;;:::o;28724:158::-;28774:6;-1:-1:-1;;;28796:1:0;:10;28792:58;;-1:-1:-1;;;28822:17:0;;28792:58;-1:-1:-1;28873:1:0;28724:158::o;28888:152::-;28999:9;28888:152;:::o;8757:211::-;-1:-1:-1;;;;;8826:22:0;;8818:73;;;;-1:-1:-1;;;8818:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8923:6;;;8902:38;;-1:-1:-1;;;;;8902:38:0;;;;8923:6;;;8902:38;;;8946:6;:17;;-1:-1:-1;;;;;;8946:17:0;-1:-1:-1;;;;;8946:17:0;;;;;;;;;;8757:211::o;27047:894::-;27152:6;-1:-1:-1;;;;;27142:16:0;:6;-1:-1:-1;;;;;27142:16:0;;;:30;;;;;27171:1;27162:6;:10;27142:30;27138:797;;;-1:-1:-1;;;;;27192:20:0;;;27188:362;;-1:-1:-1;;;;;27251:22:0;;27232:16;27251:22;;;:14;:22;;;;;;;;;27311:13;:60;;27370:1;27311:60;;;-1:-1:-1;;;;;27327:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;27347:13:0;;27327:34;;;;;;;;27359:1;27327:40;;27311:60;27291:80;;27389:17;27409:51;27423:6;27409:51;;;;;;;;;;;;;;;;;:9;:13;;:51;;;;;:::i;:::-;27389:71;;27478:57;27495:6;27503:9;27514;27525;27478:16;:57::i;:::-;27188:362;;;;-1:-1:-1;;;;;27568:20:0;;;27564:361;;-1:-1:-1;;;;;27627:22:0;;27608:16;27627:22;;;:14;:22;;;;;;;;;27687:13;:60;;27746:1;27687:60;;;-1:-1:-1;;;;;27703:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;27723:13:0;;27703:34;;;;;;;;27735:1;27703:40;;27687:60;27667:80;;27765:17;27785:50;27799:6;27785:50;;;;;;;;;;;;;;;;;:9;:13;;:50;;;;;:::i;:::-;27765:70;;27853:57;27870:6;27878:9;27889;27900;27853:16;:57::i;2092:128::-;2150:7;2172:43;2176:1;2179;2172:43;;;;;;;;;;;;;;;;;:3;:43::i;27947:600::-;28066:18;28087:56;28094:12;28087:56;;;;;;;;;;;;;;;;;:6;:56::i;:::-;28066:77;;28171:1;28156:12;:16;;;:85;;;;-1:-1:-1;;;;;;28176:22:0;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;28199:16:0;;28176:40;;;;;;;;;:50;:65;;;:50;;:65;28156:85;28152:324;;;-1:-1:-1;;;;;28255:22:0;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;28278:16:0;;28255:40;;;;;;;;28293:1;28255:46;:57;;;28152:324;;;28378:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28339:22:0;;-1:-1:-1;28339:22:0;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;28339:72:0;;;;;;;;;;;;;28423:25;;;:14;:25;;;;;;:44;;28451:16;;;28423:44;;;;;;;;;;28152:324;28489:51;;;;;;;;;;;;;;-1:-1:-1;;;;;28489:51:0;;;;;;;;;;;27947:600;;;;;:::o;28557:161::-;28635:6;28672:12;28665:5;28661:9;;28653:32;;;;-1:-1:-1;;;28653:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;28653:32:0;-1:-1:-1;28709:1:0;;28557:161;-1:-1:-1;;28557:161:0:o;13437:15605::-;;;;;;;;;;-1:-1:-1;13437:15605:0;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2013400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"allowance(address,address)": "1294",
								"approve(address,uint256)": "infinite",
								"approveAndCall(address,uint256,bytes)": "infinite",
								"balanceOf(address)": "1231",
								"burn(uint256)": "infinite",
								"checkpoints(address,uint32)": "2168",
								"decimals()": "1103",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1231",
								"freeze()": "infinite",
								"getCurrentVotes(address)": "2366",
								"getOwner()": "1162",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"lockUser(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1192",
								"numCheckpoints(address)": "1206",
								"owner()": "1149",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1089",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreeze()": "infinite",
								"unlockUser(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"ceil96(uint256)": "68",
								"getChainId()": "14",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "MSTORE"
								},
								{
									"begin": 11946,
									"end": 11947,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "DUP1"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "AND"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "SWAP1"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "SSTORE"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "POP"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "MLOAD"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "CODESIZE"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "SUB"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "DUP1"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "DUP4"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "CODECOPY"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "DUP2"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "DUP2"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "ADD"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "MLOAD"
								},
								{
									"begin": 7531,
									"end": 7548,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "AND"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "JUMPDEST"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP1"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP4"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "AND"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP1"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP2"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "OR"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP3"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SSTORE"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "MLOAD"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP3"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP2"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "SWAP1"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "DUP3"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "SWAP1"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "DUP1"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "MLOAD"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "DUP1"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "DUP3"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "ADD"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "SWAP1"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "MSTORE"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "PUSH",
									"value": "18"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "DUP1"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "DUP3"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "MSTORE"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "PUSH",
									"value": "47697473686F636B2046696E616E636520546573746E65740000000000000000"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "SWAP1"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "SWAP3"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "ADD"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "DUP3"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "MSTORE"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 15979,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 15974,
									"end": 15979,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 15974,
									"end": 16008,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "DUP1"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "MLOAD"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "DUP1"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "DUP3"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "ADD"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "SWAP1"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "SWAP2"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "MSTORE"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "DUP1"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "DUP3"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E88EA88CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "DB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "SWAP1"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "SWAP3"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "ADD"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "SWAP2"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "DUP3"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "MSTORE"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "SWAP2"
								},
								{
									"begin": 16018,
									"end": 16025,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 16018,
									"end": 16025,
									"name": "SWAP2"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 16018,
									"end": 16035,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 16045,
									"end": 16054,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 16045,
									"end": 16059,
									"name": "DUP1"
								},
								{
									"begin": 16045,
									"end": 16059,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 16045,
									"end": 16059,
									"name": "AND"
								},
								{
									"begin": 16057,
									"end": 16059,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 16045,
									"end": 16059,
									"name": "OR"
								},
								{
									"begin": 16045,
									"end": 16059,
									"name": "SWAP1"
								},
								{
									"begin": 16045,
									"end": 16059,
									"name": "SSTORE"
								},
								{
									"begin": 16084,
									"end": 16095,
									"name": "PUSH",
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 16069,
									"end": 16081,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 16069,
									"end": 16095,
									"name": "DUP2"
								},
								{
									"begin": 16069,
									"end": 16095,
									"name": "SWAP1"
								},
								{
									"begin": 16069,
									"end": 16095,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "DUP3"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "AND"
								},
								{
									"begin": 16045,
									"end": 16054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "DUP2"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "DUP2"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "MSTORE"
								},
								{
									"begin": 16105,
									"end": 16114,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "SWAP1"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "DUP2"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "MSTORE"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "DUP1"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "DUP4"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "KECCAK256"
								},
								{
									"begin": 16105,
									"end": 16138,
									"name": "DUP6"
								},
								{
									"begin": 16105,
									"end": 16138,
									"name": "SWAP1"
								},
								{
									"begin": 16105,
									"end": 16138,
									"name": "SSTORE"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "DUP1"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "MLOAD"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SWAP5"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "DUP6"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "MSTORE"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "MLOAD"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "SWAP3"
								},
								{
									"begin": 16105,
									"end": 16123,
									"name": "SWAP4"
								},
								{
									"begin": 16045,
									"end": 16054,
									"name": "SWAP2"
								},
								{
									"begin": 16045,
									"end": 16054,
									"name": "SWAP3"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SWAP3"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "DUP2"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SWAP1"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SUB"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SWAP1"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SWAP2"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "ADD"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "SWAP1"
								},
								{
									"begin": 16154,
									"end": 16197,
									"name": "LOG3"
								},
								{
									"begin": 15928,
									"end": 16204,
									"name": "POP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMP"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMPDEST"
								},
								{
									"begin": 6534,
									"end": 6544,
									"name": "CALLER"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMPDEST"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "SWAP1"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SLOAD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "AND"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ISZERO"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "MUL"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SUB"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "AND"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DIV"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "MSTORE"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "KECCAK256"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DIV"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "LT"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPI"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "MLOAD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "NOT"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "AND"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP4"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "OR"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP6"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SSTORE"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP6"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SSTORE"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ISZERO"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPI"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "GT"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ISZERO"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPI"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "MLOAD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SSTORE"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "POP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SWAP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP3"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "GT"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ISZERO"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPI"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP2"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "SSTORE"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "ADD"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMP"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "JUMPDEST"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "DUP1"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "CODECOPY"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13437,
									"end": 29042,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203e9acb9b47932c005f33f5495432200a3d48dabe50b37a8a35f68bd679b8188364736f6c63430005110032",
									".code": [
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "MSTORE"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "POP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "LT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "SHR"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "CAE9CA51"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "D7972580"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "62A5AF3B"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "GT"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "EQ"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPI"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "REVERT"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMPDEST"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMPDEST"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MLOAD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP3"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MSTORE"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MLOAD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "ADD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MSTORE"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MLOAD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP3"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP3"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "ADD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP6"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "ADD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "ADD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "AND"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "ISZERO"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMPI"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP3"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SUB"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MLOAD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP4"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SUB"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "EXP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SUB"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "NOT"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "AND"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MSTORE"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "ADD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMPDEST"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP3"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "MLOAD"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "DUP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP2"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SUB"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "RETURN"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "JUMPDEST"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "DUP1"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "DUP2"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "AND"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP1"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "ADD"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "JUMPDEST"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "DUP1"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "MLOAD"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP2"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "ISZERO"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "ISZERO"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "DUP3"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "MSTORE"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "MLOAD"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP1"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "DUP2"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP1"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SUB"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "ADD"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP1"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "RETURN"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "JUMPDEST"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "JUMPDEST"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "DUP1"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "MLOAD"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "SWAP2"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "DUP3"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "MSTORE"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "MLOAD"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "SWAP1"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "DUP2"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "SWAP1"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "SUB"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "ADD"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "SWAP1"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "RETURN"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "JUMPDEST"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "JUMPDEST"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "DUP1"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "DUP2"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "DUP2"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "AND"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "SWAP2"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "DUP2"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "ADD"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "SWAP1"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "SWAP2"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "AND"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "SWAP1"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "ADD"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "DUP1"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "MLOAD"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SWAP3"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "AND"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "DUP3"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "MSTORE"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "MLOAD"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "DUP2"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SUB"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "ADD"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "RETURN"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "JUMPDEST"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "DUP1"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "DUP2"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "AND"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "SWAP1"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "ADD"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "JUMPDEST"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "DUP1"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "JUMPDEST"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "DUP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "AND"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "JUMPDEST"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "DUP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP3"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "AND"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "DUP3"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "MSTORE"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "MLOAD"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "DUP2"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SUB"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "ADD"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "RETURN"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "JUMPDEST"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "DUP1"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "AND"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "JUMPDEST"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "STOP"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMPDEST"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "JUMPDEST"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "DUP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "AND"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "JUMPDEST"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "DUP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "MLOAD"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP3"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "AND"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "DUP3"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "MSTORE"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "MLOAD"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "DUP2"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SUB"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "ADD"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "RETURN"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "JUMPDEST"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "DUP1"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "AND"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "JUMPDEST"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "DUP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "DUP2"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "AND"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "ADD"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "JUMPDEST"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "DUP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "MLOAD"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP3"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "AND"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "DUP3"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "MSTORE"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "MLOAD"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "DUP2"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SUB"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "ADD"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP1"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "RETURN"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "JUMPDEST"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "DUP1"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "AND"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "JUMPDEST"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "JUMPDEST"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "JUMPDEST"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "DUP1"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "DUP2"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "AND"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "SWAP1"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "ADD"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "JUMPDEST"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "DUP1"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "DUP2"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "AND"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "ADD"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "JUMPDEST"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "DUP1"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "AND"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMPDEST"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "DUP1"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "AND"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "JUMPDEST"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "DUP1"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "DUP2"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "AND"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "SWAP1"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "DUP2"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "ADD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "SWAP1"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "DUP2"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "ADD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "SWAP1"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "DUP3"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "ADD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "AND"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "SWAP1"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "DUP2"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "ADD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "SWAP1"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "ADD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "JUMPDEST"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP3"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "AND"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP3"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP3"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DIV"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "MUL"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "MLOAD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "MSTORE"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP4"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP3"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP1"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP2"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "MSTORE"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "ADD"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP4"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP3"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMPDEST"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "DUP1"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "AND"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "JUMPDEST"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "DUP1"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "DUP2"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "DUP2"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "AND"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "SWAP2"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "ADD"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "AND"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "JUMPDEST"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "JUMPDEST"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "AND"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "ADD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "AND"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "JUMPDEST"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MLOAD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP4"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "AND"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP4"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MSTORE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP4"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "ADD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MSTORE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MLOAD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP3"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SUB"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "ADD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "RETURN"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMPDEST"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "DUP1"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "AND"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMPDEST"
										},
										{
											"begin": 16767,
											"end": 16772,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SLOAD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MLOAD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP9"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "AND"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ISZERO"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MUL"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP6"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "AND"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP5"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP5"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DIV"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP4"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP5"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DIV"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MUL"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MSTORE"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MSTORE"
										},
										{
											"begin": 16735,
											"end": 16748,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16735,
											"end": 16748,
											"name": "SWAP4"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP3"
										},
										{
											"begin": 16767,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16772,
											"name": "SWAP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP4"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ISZERO"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMPI"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "LT"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMPI"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP4"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SLOAD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DIV"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MUL"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP4"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MSTORE"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMP"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMPDEST"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MSTORE"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "KECCAK256"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMPDEST"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SLOAD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "MSTORE"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP4"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "GT"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMPI"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SUB"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "AND"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "DUP3"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "ADD"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP2"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "JUMPDEST"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "POP"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "POP"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "POP"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "POP"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "POP"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "SWAP1"
										},
										{
											"begin": 16760,
											"end": 16772,
											"name": "POP"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "SWAP1"
										},
										{
											"begin": 16696,
											"end": 16779,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "JUMPDEST"
										},
										{
											"begin": 18571,
											"end": 18575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 18587,
											"end": 18626,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 18596,
											"end": 18608,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 18596,
											"end": 18606,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 18596,
											"end": 18608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18596,
											"end": 18608,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 18596,
											"end": 18608,
											"name": "JUMPDEST"
										},
										{
											"begin": 18610,
											"end": 18617,
											"name": "DUP5"
										},
										{
											"begin": 18619,
											"end": 18625,
											"name": "DUP5"
										},
										{
											"begin": 18587,
											"end": 18595,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 18587,
											"end": 18626,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18587,
											"end": 18626,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 18587,
											"end": 18626,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18643,
											"end": 18647,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "JUMPDEST"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP3"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "SWAP2"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "POP"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "POP"
										},
										{
											"begin": 18477,
											"end": 18654,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "JUMPDEST"
										},
										{
											"begin": 16910,
											"end": 16922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16910,
											"end": 16922,
											"name": "SLOAD"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "SWAP1"
										},
										{
											"begin": 16838,
											"end": 16929,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "JUMPDEST"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "MLOAD"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "DUP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "DUP3"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "CODECOPY"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "ADD"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "POP"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "MLOAD"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "DUP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP2"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SUB"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "KECCAK256"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "DUP2"
										},
										{
											"begin": 14694,
											"end": 14816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "JUMPDEST"
										},
										{
											"begin": 19660,
											"end": 19664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19712,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 19686,
											"end": 19692,
											"name": "DUP5"
										},
										{
											"begin": 19694,
											"end": 19703,
											"name": "DUP5"
										},
										{
											"begin": 19705,
											"end": 19711,
											"name": "DUP5"
										},
										{
											"begin": 19676,
											"end": 19685,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 19676,
											"end": 19712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19676,
											"end": 19712,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 19676,
											"end": 19712,
											"name": "JUMPDEST"
										},
										{
											"begin": 19722,
											"end": 19737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19740,
											"end": 19752,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 19740,
											"end": 19750,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19740,
											"end": 19752,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19740,
											"end": 19752,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 19740,
											"end": 19752,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "DUP1"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "DUP8"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "AND"
										},
										{
											"begin": 19762,
											"end": 19786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "SWAP1"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "DUP2"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "MSTORE"
										},
										{
											"begin": 19789,
											"end": 19800,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "SWAP1"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "DUP2"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "MSTORE"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "DUP1"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "DUP4"
										},
										{
											"begin": 19789,
											"end": 19808,
											"name": "KECCAK256"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "SWAP4"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "DUP6"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "AND"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "DUP4"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "MSTORE"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "SWAP3"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "SWAP1"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "MSTORE"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "KECCAK256"
										},
										{
											"begin": 19789,
											"end": 19817,
											"name": "SLOAD"
										},
										{
											"begin": 19722,
											"end": 19752,
											"name": "SWAP1"
										},
										{
											"begin": 19722,
											"end": 19752,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 19831,
											"end": 19862,
											"name": "DUP2"
										},
										{
											"begin": 19831,
											"end": 19862,
											"name": "EQ"
										},
										{
											"begin": 19827,
											"end": 19985,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 19827,
											"end": 19985,
											"name": "JUMPI"
										},
										{
											"begin": 19878,
											"end": 19974,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 19887,
											"end": 19893,
											"name": "DUP7"
										},
										{
											"begin": 19895,
											"end": 19902,
											"name": "DUP4"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 19925,
											"end": 19931,
											"name": "DUP8"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "MLOAD"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "DUP1"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "ADD"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "MSTORE"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "DUP1"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "DUP2"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "MSTORE"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "ADD"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH data",
											"value": "5E83471B3A3D1FE92BFF19912BAB84DCC2C92190AF741E7C33D886D7EC91F5D1"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "SWAP2"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "CODECOPY"
										},
										{
											"begin": 19904,
											"end": 19920,
											"name": "DUP7"
										},
										{
											"begin": 19904,
											"end": 19920,
											"name": "SWAP2"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "SWAP1"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19904,
											"end": 19924,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "AND"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 19904,
											"end": 19973,
											"name": "JUMPDEST"
										},
										{
											"begin": 19878,
											"end": 19886,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 19878,
											"end": 19974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19878,
											"end": 19974,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 19878,
											"end": 19974,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 20001,
											"end": 20005,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20001,
											"end": 20005,
											"name": "SWAP6"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19543,
											"end": 20012,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SLOAD"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "AND"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16410,
											"end": 16493,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 20463,
											"end": 20733,
											"name": "JUMPDEST"
										},
										{
											"begin": 20569,
											"end": 20573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 20585,
											"end": 20705,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 20594,
											"end": 20606,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 20594,
											"end": 20604,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 20594,
											"end": 20606,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20594,
											"end": 20606,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 20594,
											"end": 20606,
											"name": "JUMPDEST"
										},
										{
											"begin": 20608,
											"end": 20615,
											"name": "DUP5"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 20656,
											"end": 20666,
											"name": "DUP6"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "MLOAD"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "DUP1"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "ADD"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "MSTORE"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "DUP1"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "DUP2"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "MSTORE"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "ADD"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH data",
											"value": "AC444B4635A35929A68A5C8FA43076F8FD9D5DD9C52546538D69B2042F34C77"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "SWAP2"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "CODECOPY"
										},
										{
											"begin": 20617,
											"end": 20628,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20629,
											"end": 20641,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 20629,
											"end": 20639,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 20629,
											"end": 20641,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20629,
											"end": 20641,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 20629,
											"end": 20641,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "SWAP1"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "DUP2"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "AND"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "DUP3"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "MSTORE"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "DUP1"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "DUP4"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "ADD"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "SWAP4"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "SWAP1"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "SWAP4"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "MSTORE"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "SWAP2"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "DUP3"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "SWAP1"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "DUP2"
										},
										{
											"begin": 20617,
											"end": 20642,
											"name": "KECCAK256"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "SWAP2"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "DUP14"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "AND"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "DUP2"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "MSTORE"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "SWAP3"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "MSTORE"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "SWAP1"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "KECCAK256"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "SLOAD"
										},
										{
											"begin": 20617,
											"end": 20651,
											"name": "SWAP2"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "SWAP1"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20617,
											"end": 20655,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "AND"
										},
										{
											"begin": 20617,
											"end": 20704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "JUMPDEST"
										},
										{
											"begin": 21799,
											"end": 21803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 21815,
											"end": 21842,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 21821,
											"end": 21833,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 21821,
											"end": 21831,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21821,
											"end": 21833,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21821,
											"end": 21833,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 21821,
											"end": 21833,
											"name": "JUMPDEST"
										},
										{
											"begin": 21835,
											"end": 21841,
											"name": "DUP4"
										},
										{
											"begin": 21815,
											"end": 21820,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 21815,
											"end": 21842,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21815,
											"end": 21842,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 21815,
											"end": 21842,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21859,
											"end": 21863,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "JUMPDEST"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "SWAP2"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "SWAP1"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "POP"
										},
										{
											"begin": 21727,
											"end": 21870,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "JUMPDEST"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "MSTORE"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "DUP2"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "MSTORE"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SWAP1"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "KECCAK256"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "AND"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "DUP2"
										},
										{
											"begin": 14158,
											"end": 14203,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "JUMPDEST"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 22099,
											"end": 22133,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 22109,
											"end": 22121,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 22109,
											"end": 22119,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 22109,
											"end": 22121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22109,
											"end": 22121,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 22109,
											"end": 22121,
											"name": "JUMPDEST"
										},
										{
											"begin": 22123,
											"end": 22132,
											"name": "DUP3"
										},
										{
											"begin": 22099,
											"end": 22108,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 22099,
											"end": 22133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22099,
											"end": 22133,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 22099,
											"end": 22133,
											"name": "JUMPDEST"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "POP"
										},
										{
											"begin": 22012,
											"end": 22140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 12142,
											"end": 12150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "DUP1"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "OR"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "DUP2"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "SSTORE"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "MLOAD"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "PUSH",
											"value": "962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "SWAP2"
										},
										{
											"begin": 12142,
											"end": 12150,
											"name": "SWAP1"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "LOG1"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 12258,
											"end": 12259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "AND"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "DUP2"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "SSTORE"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "PUSH",
											"value": "F0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "SWAP2"
										},
										{
											"begin": 12258,
											"end": 12259,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "LOG1"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "JUMPDEST"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "MSTORE"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "DUP2"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "MSTORE"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SWAP1"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "KECCAK256"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "SLOAD"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "AND"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "DUP2"
										},
										{
											"begin": 14575,
											"end": 14624,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "AND"
										},
										{
											"begin": 17184,
											"end": 17191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "SWAP1"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "DUP2"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "MSTORE"
										},
										{
											"begin": 17210,
											"end": 17219,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "MSTORE"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "SWAP1"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "KECCAK256"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "SLOAD"
										},
										{
											"begin": 17210,
											"end": 17228,
											"name": "SWAP1"
										},
										{
											"begin": 17125,
											"end": 17235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "DUP1"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SLOAD"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP2"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "AND"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "SWAP1"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "DUP4"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "SWAP1"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "LOG3"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "DUP1"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "AND"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SSTORE"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "JUMPDEST"
										},
										{
											"begin": 24242,
											"end": 24248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24282,
											"end": 24294,
											"name": "NUMBER"
										},
										{
											"begin": 24268,
											"end": 24279,
											"name": "DUP3"
										},
										{
											"begin": 24268,
											"end": 24294,
											"name": "LT"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "JUMPI"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "DUP1"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "DUP2"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "MSTORE"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "DUP3"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "ADD"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "MSTORE"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "DUP3"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "ADD"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "139BDD0819195D195C9B5A5B9959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "DUP3"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "ADD"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "MSTORE"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "SWAP1"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "MLOAD"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "SWAP1"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "DUP2"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "SWAP1"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "SUB"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "ADD"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "SWAP1"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "REVERT"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 24260,
											"end": 24317,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "DUP4"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "AND"
										},
										{
											"begin": 24328,
											"end": 24347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "SWAP1"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "DUP2"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "MSTORE"
										},
										{
											"begin": 24350,
											"end": 24364,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "MSTORE"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "SWAP1"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "KECCAK256"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "SLOAD"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24350,
											"end": 24373,
											"name": "AND"
										},
										{
											"begin": 24387,
											"end": 24404,
											"name": "DUP1"
										},
										{
											"begin": 24383,
											"end": 24439,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 24383,
											"end": 24439,
											"name": "JUMPI"
										},
										{
											"begin": 24427,
											"end": 24428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24420,
											"end": 24428,
											"name": "SWAP2"
										},
										{
											"begin": 24420,
											"end": 24428,
											"name": "POP"
										},
										{
											"begin": 24420,
											"end": 24428,
											"name": "POP"
										},
										{
											"begin": 24420,
											"end": 24428,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24420,
											"end": 24428,
											"name": "JUMP"
										},
										{
											"begin": 24383,
											"end": 24439,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 24383,
											"end": 24439,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "DUP5"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "AND"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "SWAP1"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "DUP2"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "MSTORE"
										},
										{
											"begin": 24496,
											"end": 24507,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "SWAP1"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "DUP2"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "MSTORE"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "DUP1"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "DUP4"
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "KECCAK256"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24517,
											"end": 24533,
											"name": "DUP7"
										},
										{
											"begin": 24517,
											"end": 24533,
											"name": "ADD"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "DUP2"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "AND"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "DUP6"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "MSTORE"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "SWAP3"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "MSTORE"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "SWAP1"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "SWAP2"
										},
										{
											"begin": 24496,
											"end": 24534,
											"name": "KECCAK256"
										},
										{
											"begin": 24496,
											"end": 24544,
											"name": "SLOAD"
										},
										{
											"begin": 24496,
											"end": 24544,
											"name": "AND"
										},
										{
											"begin": 24496,
											"end": 24559,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24492,
											"end": 24645,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 24492,
											"end": 24645,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "DUP5"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "AND"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "SWAP1"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "DUP2"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "MSTORE"
										},
										{
											"begin": 24589,
											"end": 24600,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "SWAP1"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "DUP2"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "MSTORE"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "DUP1"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "DUP4"
										},
										{
											"begin": 24589,
											"end": 24609,
											"name": "KECCAK256"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24610,
											"end": 24626,
											"name": "DUP7"
										},
										{
											"begin": 24610,
											"end": 24626,
											"name": "ADD"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "AND"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "DUP5"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "MSTORE"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "SWAP1"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "SWAP2"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "MSTORE"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "SWAP1"
										},
										{
											"begin": 24589,
											"end": 24627,
											"name": "KECCAK256"
										},
										{
											"begin": 24625,
											"end": 24626,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24589,
											"end": 24633,
											"name": "ADD"
										},
										{
											"begin": 24589,
											"end": 24633,
											"name": "SLOAD"
										},
										{
											"begin": 24582,
											"end": 24634,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 24582,
											"end": 24634,
											"name": "SWAP1"
										},
										{
											"begin": 24582,
											"end": 24588,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 24582,
											"end": 24634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24582,
											"end": 24634,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 24582,
											"end": 24634,
											"name": "JUMPDEST"
										},
										{
											"begin": 24575,
											"end": 24634,
											"name": "SWAP2"
										},
										{
											"begin": 24575,
											"end": 24634,
											"name": "POP"
										},
										{
											"begin": 24575,
											"end": 24634,
											"name": "POP"
										},
										{
											"begin": 24575,
											"end": 24634,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24575,
											"end": 24634,
											"name": "JUMP"
										},
										{
											"begin": 24492,
											"end": 24645,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 24492,
											"end": 24645,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "DUP5"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "AND"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "SWAP1"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "DUP2"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "MSTORE"
										},
										{
											"begin": 24703,
											"end": 24714,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "SWAP1"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "DUP2"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "MSTORE"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "DUP1"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "DUP4"
										},
										{
											"begin": 24703,
											"end": 24723,
											"name": "KECCAK256"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "DUP4"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "DUP1"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "MSTORE"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "SWAP1"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "SWAP2"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "MSTORE"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "SWAP1"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "KECCAK256"
										},
										{
											"begin": 24703,
											"end": 24736,
											"name": "SLOAD"
										},
										{
											"begin": 24703,
											"end": 24726,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24703,
											"end": 24736,
											"name": "AND"
										},
										{
											"begin": 24703,
											"end": 24750,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24699,
											"end": 24785,
											"name": "ISZERO"
										},
										{
											"begin": 24699,
											"end": 24785,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 24699,
											"end": 24785,
											"name": "JUMPI"
										},
										{
											"begin": 24773,
											"end": 24774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24766,
											"end": 24774,
											"name": "SWAP2"
										},
										{
											"begin": 24766,
											"end": 24774,
											"name": "POP"
										},
										{
											"begin": 24766,
											"end": 24774,
											"name": "POP"
										},
										{
											"begin": 24766,
											"end": 24774,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24766,
											"end": 24774,
											"name": "JUMP"
										},
										{
											"begin": 24699,
											"end": 24785,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 24699,
											"end": 24785,
											"name": "JUMPDEST"
										},
										{
											"begin": 24795,
											"end": 24807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24836,
											"end": 24852,
											"name": "DUP3"
										},
										{
											"begin": 24836,
											"end": 24852,
											"name": "ADD"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "JUMPDEST"
										},
										{
											"begin": 24877,
											"end": 24882,
											"name": "DUP2"
										},
										{
											"begin": 24869,
											"end": 24882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24869,
											"end": 24882,
											"name": "AND"
										},
										{
											"begin": 24869,
											"end": 24874,
											"name": "DUP2"
										},
										{
											"begin": 24869,
											"end": 24882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24869,
											"end": 24882,
											"name": "AND"
										},
										{
											"begin": 24869,
											"end": 24882,
											"name": "GT"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "ISZERO"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "JUMPI"
										},
										{
											"begin": 24940,
											"end": 24941,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24923,
											"end": 24936,
											"name": "DUP3"
										},
										{
											"begin": 24923,
											"end": 24936,
											"name": "DUP3"
										},
										{
											"begin": 24923,
											"end": 24936,
											"name": "SUB"
										},
										{
											"begin": 24922,
											"end": 24941,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24922,
											"end": 24941,
											"name": "AND"
										},
										{
											"begin": 24922,
											"end": 24941,
											"name": "DIV"
										},
										{
											"begin": 24914,
											"end": 24941,
											"name": "DUP2"
										},
										{
											"begin": 24914,
											"end": 24941,
											"name": "SUB"
										},
										{
											"begin": 24982,
											"end": 25002,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 24982,
											"end": 25002,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 24982,
											"end": 25002,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24982,
											"end": 25002,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 24982,
											"end": 25002,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "DUP8"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "AND"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "SWAP1"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "DUP2"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "MSTORE"
										},
										{
											"begin": 25005,
											"end": 25016,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "SWAP1"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "DUP2"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "MSTORE"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "DUP1"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "DUP4"
										},
										{
											"begin": 25005,
											"end": 25025,
											"name": "KECCAK256"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "DUP1"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "DUP7"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "AND"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "DUP6"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "MSTORE"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "DUP4"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "MSTORE"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "SWAP3"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "DUP2"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 25005,
											"end": 25033,
											"name": "KECCAK256"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP2"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "MLOAD"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP4"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "ADD"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP3"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "MSTORE"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SLOAD"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP4"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "AND"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP3"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "MSTORE"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP4"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "ADD"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SLOAD"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP2"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "DUP2"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "ADD"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP2"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP2"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "MSTORE"
										},
										{
											"begin": 24982,
											"end": 25033,
											"name": "SWAP1"
										},
										{
											"begin": 25051,
											"end": 25078,
											"name": "DUP8"
										},
										{
											"begin": 25051,
											"end": 25078,
											"name": "EQ"
										},
										{
											"begin": 25047,
											"end": 25278,
											"name": "ISZERO"
										},
										{
											"begin": 25047,
											"end": 25278,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 25047,
											"end": 25278,
											"name": "JUMPI"
										},
										{
											"begin": 25105,
											"end": 25121,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 25112,
											"end": 25114,
											"name": "DUP2"
										},
										{
											"begin": 25112,
											"end": 25120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25112,
											"end": 25120,
											"name": "ADD"
										},
										{
											"begin": 25112,
											"end": 25120,
											"name": "MLOAD"
										},
										{
											"begin": 25105,
											"end": 25111,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 25105,
											"end": 25121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25105,
											"end": 25121,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 25105,
											"end": 25121,
											"name": "JUMPDEST"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "SWAP6"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "POP"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "POP"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "POP"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "POP"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "POP"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "POP"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 25098,
											"end": 25121,
											"name": "JUMP"
										},
										{
											"begin": 25047,
											"end": 25278,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 25047,
											"end": 25278,
											"name": "JUMPDEST"
										},
										{
											"begin": 25146,
											"end": 25158,
											"name": "DUP1"
										},
										{
											"begin": 25146,
											"end": 25158,
											"name": "MLOAD"
										},
										{
											"begin": 25146,
											"end": 25172,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25146,
											"end": 25172,
											"name": "AND"
										},
										{
											"begin": 25146,
											"end": 25172,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "ISZERO"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "JUMPI"
										},
										{
											"begin": 25200,
											"end": 25206,
											"name": "DUP2"
										},
										{
											"begin": 25192,
											"end": 25206,
											"name": "SWAP4"
										},
										{
											"begin": 25192,
											"end": 25206,
											"name": "POP"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "JUMP"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "JUMPDEST"
										},
										{
											"begin": 25262,
											"end": 25263,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25253,
											"end": 25259,
											"name": "DUP3"
										},
										{
											"begin": 25253,
											"end": 25263,
											"name": "SUB"
										},
										{
											"begin": 25245,
											"end": 25263,
											"name": "SWAP3"
										},
										{
											"begin": 25245,
											"end": 25263,
											"name": "POP"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 25142,
											"end": 25278,
											"name": "JUMPDEST"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "POP"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "POP"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "JUMP"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 24862,
											"end": 25288,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "DUP7"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "AND"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "SWAP1"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "DUP2"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "MSTORE"
										},
										{
											"begin": 25311,
											"end": 25322,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "SWAP1"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "DUP2"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "MSTORE"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "DUP1"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "DUP4"
										},
										{
											"begin": 25311,
											"end": 25331,
											"name": "KECCAK256"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "DUP7"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "AND"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "DUP5"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "MSTORE"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "SWAP1"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "SWAP2"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "MSTORE"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "SWAP1"
										},
										{
											"begin": 25311,
											"end": 25338,
											"name": "KECCAK256"
										},
										{
											"begin": 25311,
											"end": 25344,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25311,
											"end": 25344,
											"name": "ADD"
										},
										{
											"begin": 25311,
											"end": 25344,
											"name": "SLOAD"
										},
										{
											"begin": 25304,
											"end": 25345,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 25304,
											"end": 25345,
											"name": "SWAP1"
										},
										{
											"begin": 25304,
											"end": 25310,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 25304,
											"end": 25345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25304,
											"end": 25345,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 25304,
											"end": 25345,
											"name": "JUMPDEST"
										},
										{
											"begin": 25297,
											"end": 25345,
											"name": "SWAP7"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24160,
											"end": 25352,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "JUMPDEST"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "MSTORE"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "SWAP1"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "DUP2"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "MSTORE"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "SWAP1"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "KECCAK256"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "SLOAD"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "DUP2"
										},
										{
											"begin": 15102,
											"end": 15144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "JUMPDEST"
										},
										{
											"begin": 16309,
											"end": 16316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16335,
											"end": 16342,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 16335,
											"end": 16342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16335,
											"end": 16342,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 16335,
											"end": 16342,
											"name": "JUMPDEST"
										},
										{
											"begin": 16328,
											"end": 16342,
											"name": "SWAP1"
										},
										{
											"begin": 16328,
											"end": 16342,
											"name": "POP"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "SWAP1"
										},
										{
											"begin": 16266,
											"end": 16349,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7752,
											"end": 7759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "AND"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 16552,
											"end": 16639,
											"name": "JUMPDEST"
										},
										{
											"begin": 16625,
											"end": 16632,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SLOAD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MLOAD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP9"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "AND"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ISZERO"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MUL"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP6"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "AND"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP5"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP5"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DIV"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP4"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP5"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DIV"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MUL"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP3"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP3"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MSTORE"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP3"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MSTORE"
										},
										{
											"begin": 16593,
											"end": 16606,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16593,
											"end": 16606,
											"name": "SWAP4"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP3"
										},
										{
											"begin": 16625,
											"end": 16632,
											"name": "SWAP1"
										},
										{
											"begin": 16625,
											"end": 16632,
											"name": "SWAP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP4"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16625,
											"end": 16632,
											"name": "DUP3"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP3"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ISZERO"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "JUMPI"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "LT"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "JUMPI"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP1"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP4"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SLOAD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DIV"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MUL"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "DUP4"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "MSTORE"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "ADD"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "SWAP2"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16618,
											"end": 16632,
											"name": "JUMP"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 21192,
											"end": 21473,
											"name": "JUMPDEST"
										},
										{
											"begin": 21303,
											"end": 21307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 21319,
											"end": 21445,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 21328,
											"end": 21340,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 21328,
											"end": 21338,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21328,
											"end": 21340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21328,
											"end": 21340,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 21328,
											"end": 21340,
											"name": "JUMPDEST"
										},
										{
											"begin": 21342,
											"end": 21349,
											"name": "DUP5"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 21390,
											"end": 21405,
											"name": "DUP6"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "MLOAD"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "DUP1"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "ADD"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "MSTORE"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "DUP1"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "DUP2"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "MSTORE"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "ADD"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH data",
											"value": "42D9A8E134AF3312DAACAC2D2003D2E3A900F5F05EB0DE35B651F1E9CE1C4E5B"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "SWAP2"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "CODECOPY"
										},
										{
											"begin": 21351,
											"end": 21362,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21363,
											"end": 21375,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 21363,
											"end": 21373,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21363,
											"end": 21375,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21363,
											"end": 21375,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 21363,
											"end": 21375,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "SWAP1"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "DUP2"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "AND"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "DUP3"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "MSTORE"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "DUP1"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "DUP4"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "ADD"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "SWAP4"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "SWAP1"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "SWAP4"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "MSTORE"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "SWAP2"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "DUP3"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "SWAP1"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "DUP2"
										},
										{
											"begin": 21351,
											"end": 21376,
											"name": "KECCAK256"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "SWAP2"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "DUP14"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "AND"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "DUP2"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "MSTORE"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "SWAP3"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "MSTORE"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "SWAP1"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "KECCAK256"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "SLOAD"
										},
										{
											"begin": 21351,
											"end": 21385,
											"name": "SWAP2"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "SWAP1"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21351,
											"end": 21389,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "AND"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 17494,
											"end": 17677,
											"name": "JUMPDEST"
										},
										{
											"begin": 17591,
											"end": 17595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 17607,
											"end": 17649,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 17617,
											"end": 17629,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 17617,
											"end": 17627,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 17617,
											"end": 17629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17617,
											"end": 17629,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 17617,
											"end": 17629,
											"name": "JUMPDEST"
										},
										{
											"begin": 17631,
											"end": 17640,
											"name": "DUP5"
										},
										{
											"begin": 17642,
											"end": 17648,
											"name": "DUP5"
										},
										{
											"begin": 17607,
											"end": 17616,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 17607,
											"end": 17649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "DUP2"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "AND"
										},
										{
											"begin": 23576,
											"end": 23582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "SWAP1"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "DUP2"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "MSTORE"
										},
										{
											"begin": 23616,
											"end": 23630,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "MSTORE"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "DUP2"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "KECCAK256"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "SLOAD"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23616,
											"end": 23639,
											"name": "AND"
										},
										{
											"begin": 23656,
											"end": 23672,
											"name": "DUP1"
										},
										{
											"begin": 23656,
											"end": 23731,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 23656,
											"end": 23731,
											"name": "JUMPI"
										},
										{
											"begin": 23730,
											"end": 23731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23656,
											"end": 23731,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 23656,
											"end": 23731,
											"name": "JUMP"
										},
										{
											"begin": 23656,
											"end": 23731,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 23656,
											"end": 23731,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "DUP4"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "AND"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "SWAP1"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "DUP2"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "MSTORE"
										},
										{
											"begin": 23682,
											"end": 23693,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "SWAP1"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "DUP2"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "MSTORE"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "DUP1"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "DUP4"
										},
										{
											"begin": 23682,
											"end": 23702,
											"name": "KECCAK256"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23703,
											"end": 23719,
											"name": "DUP7"
										},
										{
											"begin": 23703,
											"end": 23719,
											"name": "ADD"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "AND"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "DUP5"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "MSTORE"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "SWAP1"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "SWAP2"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "MSTORE"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "SWAP1"
										},
										{
											"begin": 23682,
											"end": 23720,
											"name": "KECCAK256"
										},
										{
											"begin": 23718,
											"end": 23719,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23682,
											"end": 23726,
											"name": "ADD"
										},
										{
											"begin": 23682,
											"end": 23726,
											"name": "SLOAD"
										},
										{
											"begin": 23675,
											"end": 23727,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 23675,
											"end": 23727,
											"name": "SWAP1"
										},
										{
											"begin": 23675,
											"end": 23681,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 23675,
											"end": 23727,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23675,
											"end": 23727,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 23675,
											"end": 23727,
											"name": "JUMPDEST"
										},
										{
											"begin": 23649,
											"end": 23731,
											"name": "SWAP4"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23511,
											"end": 23738,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP2"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "AND"
										},
										{
											"begin": 13382,
											"end": 13387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP2"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP2"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "MSTORE"
										},
										{
											"begin": 13365,
											"end": 13374,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "MSTORE"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP1"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP3"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "KECCAK256"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "DUP1"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "AND"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SWAP1"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SSTORE"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "MLOAD"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "PUSH",
											"value": "687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "SWAP2"
										},
										{
											"begin": 13382,
											"end": 13387,
											"name": "SWAP1"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "LOG2"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "POP"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "JUMPDEST"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 22710,
											"end": 22733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "MLOAD"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "DUP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "DUP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP2"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "CODECOPY"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "ADD"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "POP"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "MLOAD"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "DUP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP2"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SUB"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "SWAP1"
										},
										{
											"begin": 14736,
											"end": 14816,
											"name": "KECCAK256"
										},
										{
											"begin": 22790,
											"end": 22795,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MLOAD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP3"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SLOAD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "AND"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "ISZERO"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MUL"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SUB"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "AND"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DIV"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "ISZERO"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMPI"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "LT"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMPI"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP4"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SLOAD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DIV"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MUL"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP4"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MSTORE"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP3"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "ADD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMP"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMPDEST"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP3"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "ADD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MSTORE"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "KECCAK256"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMPDEST"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SLOAD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MSTORE"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "ADD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "ADD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP4"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "GT"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMPI"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "JUMPDEST"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "POP"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "POP"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "POP"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "POP"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "MLOAD"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "DUP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP2"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SUB"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "SWAP1"
										},
										{
											"begin": 22774,
											"end": 22797,
											"name": "KECCAK256"
										},
										{
											"begin": 22799,
											"end": 22811,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 22799,
											"end": 22809,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 22799,
											"end": 22811,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22799,
											"end": 22811,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 22799,
											"end": 22811,
											"name": "JUMPDEST"
										},
										{
											"begin": 22821,
											"end": 22825,
											"name": "ADDRESS"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MLOAD"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "ADD"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP1"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP6"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP2"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MSTORE"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "ADD"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP5"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP2"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MSTORE"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "ADD"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP4"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP2"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MSTORE"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "ADD"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "AND"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "DUP2"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MSTORE"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "ADD"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "SWAP5"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "POP"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "POP"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "POP"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "POP"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "POP"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "SWAP1"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22746,
											"end": 22827,
											"name": "MSTORE"
										},
										{
											"begin": 22736,
											"end": 22828,
											"name": "DUP1"
										},
										{
											"begin": 22736,
											"end": 22828,
											"name": "MLOAD"
										},
										{
											"begin": 22736,
											"end": 22828,
											"name": "SWAP1"
										},
										{
											"begin": 22736,
											"end": 22828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22736,
											"end": 22828,
											"name": "ADD"
										},
										{
											"begin": 22736,
											"end": 22828,
											"name": "KECCAK256"
										},
										{
											"begin": 22710,
											"end": 22828,
											"name": "SWAP1"
										},
										{
											"begin": 22710,
											"end": 22828,
											"name": "POP"
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "MLOAD"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SWAP2"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "CODECOPY"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "MLOAD"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SWAP2"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP3"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SWAP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SUB"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "ADD"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP3"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "KECCAK256"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP1"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP5"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "ADD"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "SWAP2"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "SWAP1"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "SWAP2"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP13"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "AND"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP4"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP4"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "ADD"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "MSTORE"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP4"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "ADD"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP12"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "SWAP1"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "MSTORE"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP1"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP5"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "ADD"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP12"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "SWAP1"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "MSTORE"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP3"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP5"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "ADD"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "DUP4"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "MSTORE"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "DUP1"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "MLOAD"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "SWAP1"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "DUP3"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "ADD"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP6"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "ADD"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "MSTORE"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "PUSH",
											"value": "C2"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP5"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "ADD"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP8"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "SWAP1"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "MSTORE"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "PUSH",
											"value": "E2"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP1"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP6"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "ADD"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP3"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "SWAP1"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "MSTORE"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP4"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP6"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "ADD"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP1"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "DUP6"
										},
										{
											"begin": 22964,
											"end": 23021,
											"name": "MSTORE"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "DUP2"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "MLOAD"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "SWAP2"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "DUP5"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "ADD"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "SWAP2"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "SWAP1"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "SWAP2"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP2"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP3"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MSTORE"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP7"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP7"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MSTORE"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP2"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MSTORE"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP13"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "AND"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP8"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MSTORE"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP7"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP12"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MSTORE"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP7"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP11"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MSTORE"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP4"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MLOAD"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "SWAP2"
										},
										{
											"begin": 22859,
											"end": 22927,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "SWAP3"
										},
										{
											"begin": 22954,
											"end": 23022,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP3"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP4"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP4"
										},
										{
											"begin": 22869,
											"end": 22926,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP4"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP3"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP2"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SUB"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP2"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP1"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "DUP6"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "GAS"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "STATICCALL"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "ADD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "MLOAD"
										},
										{
											"begin": 23052,
											"end": 23078,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23096,
											"end": 23119,
											"name": "DUP2"
										},
										{
											"begin": 23096,
											"end": 23119,
											"name": "AND"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "JUMPI"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "DUP1"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "DUP2"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "MSTORE"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "DUP3"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "ADD"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "MSTORE"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "DUP3"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "ADD"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "496E76616C6964207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "DUP3"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "ADD"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "MSTORE"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "SWAP1"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "MLOAD"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "SWAP1"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "DUP2"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "SWAP1"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "SUB"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "ADD"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "SWAP1"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "REVERT"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 23088,
											"end": 23141,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "DUP2"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "AND"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "SWAP1"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "DUP2"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "MSTORE"
										},
										{
											"begin": 23168,
											"end": 23174,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "MSTORE"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "SWAP1"
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "KECCAK256"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "DUP1"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "SLOAD"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "DUP2"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "ADD"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "SWAP1"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "SWAP2"
										},
										{
											"begin": 23168,
											"end": 23187,
											"name": "SSTORE"
										},
										{
											"begin": 23159,
											"end": 23187,
											"name": "DUP10"
										},
										{
											"begin": 23159,
											"end": 23187,
											"name": "EQ"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "JUMPI"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "DUP1"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "DUP2"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "MSTORE"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "DUP3"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "ADD"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "MSTORE"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "DUP3"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "ADD"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "496E76616C6964206E6F6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "DUP3"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "ADD"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "MSTORE"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "SWAP1"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "MLOAD"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "SWAP1"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "DUP2"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "SWAP1"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "SUB"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "ADD"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "SWAP1"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "REVERT"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 23151,
											"end": 23205,
											"name": "JUMPDEST"
										},
										{
											"begin": 23230,
											"end": 23236,
											"name": "DUP8"
										},
										{
											"begin": 23223,
											"end": 23226,
											"name": "TIMESTAMP"
										},
										{
											"begin": 23223,
											"end": 23236,
											"name": "GT"
										},
										{
											"begin": 23223,
											"end": 23236,
											"name": "ISZERO"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "JUMPI"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "DUP1"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "DUP2"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "MSTORE"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "DUP3"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "ADD"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "MSTORE"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "DUP3"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "ADD"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151A19481CDA59DB985D1D5C9948195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "DUP3"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "ADD"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "MSTORE"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "SWAP1"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "MLOAD"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "SWAP1"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "DUP2"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "SWAP1"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "SUB"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "ADD"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "SWAP1"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "REVERT"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 23215,
											"end": 23262,
											"name": "JUMPDEST"
										},
										{
											"begin": 23279,
											"end": 23310,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 23289,
											"end": 23298,
											"name": "DUP2"
										},
										{
											"begin": 23300,
											"end": 23309,
											"name": "DUP12"
										},
										{
											"begin": 23279,
											"end": 23288,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 23279,
											"end": 23310,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23279,
											"end": 23310,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 23279,
											"end": 23310,
											"name": "JUMPDEST"
										},
										{
											"begin": 23272,
											"end": 23310,
											"name": "POP"
										},
										{
											"begin": 23272,
											"end": 23310,
											"name": "POP"
										},
										{
											"begin": 23272,
											"end": 23310,
											"name": "POP"
										},
										{
											"begin": 23272,
											"end": 23310,
											"name": "POP"
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "JUMPDEST"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "POP"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "POP"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "POP"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "POP"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "POP"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "POP"
										},
										{
											"begin": 22563,
											"end": 23317,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "JUMPDEST"
										},
										{
											"begin": 19053,
											"end": 19057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DUP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "SWAP1"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "DIV"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12036,
											"end": 12044,
											"name": "AND"
										},
										{
											"begin": 12036,
											"end": 12049,
											"name": "ISZERO"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPI"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP3"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MSTORE"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "MLOAD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "DUP2"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SUB"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "ADD"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "SWAP1"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "REVERT"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 12028,
											"end": 12069,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13130,
											"name": "CALLER"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "DUP2"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "MSTORE"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SWAP1"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "KECCAK256"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "SLOAD"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13110,
											"end": 13131,
											"name": "AND"
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ISZERO"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPI"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP3"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MSTORE"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "MLOAD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "DUP2"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SUB"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "ADD"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "SWAP1"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "REVERT"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 13101,
											"end": 13148,
											"name": "JUMPDEST"
										},
										{
											"begin": 19069,
											"end": 19108,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 19078,
											"end": 19090,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 19078,
											"end": 19088,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19078,
											"end": 19090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19078,
											"end": 19090,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 19078,
											"end": 19090,
											"name": "JUMPDEST"
										},
										{
											"begin": 19092,
											"end": 19099,
											"name": "DUP6"
										},
										{
											"begin": 19101,
											"end": 19107,
											"name": "DUP6"
										},
										{
											"begin": 19069,
											"end": 19077,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 19069,
											"end": 19108,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19069,
											"end": 19108,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 19069,
											"end": 19108,
											"name": "JUMPDEST"
										},
										{
											"begin": 19141,
											"end": 19148,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19165,
											"name": "AND"
										},
										{
											"begin": 19118,
											"end": 19165,
											"name": "PUSH",
											"value": "8F4FFCB1"
										},
										{
											"begin": 19166,
											"end": 19178,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 19166,
											"end": 19176,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19166,
											"end": 19178,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19166,
											"end": 19178,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 19166,
											"end": 19178,
											"name": "JUMPDEST"
										},
										{
											"begin": 19180,
											"end": 19186,
											"name": "DUP6"
										},
										{
											"begin": 19196,
											"end": 19200,
											"name": "ADDRESS"
										},
										{
											"begin": 19203,
											"end": 19207,
											"name": "DUP7"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MLOAD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP6"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SHL"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP5"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP3"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP3"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP4"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MLOAD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MLOAD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP4"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ISZERO"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "JUMPI"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP3"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MLOAD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP4"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "EXP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "NOT"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "AND"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MSTORE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ADD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "JUMPDEST"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SWAP6"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "MLOAD"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP4"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "SUB"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP2"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP8"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "DUP1"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "POP"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "GAS"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "CALL"
										},
										{
											"begin": 19118,
											"end": 19208,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19225,
											"end": 19229,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19225,
											"end": 19229,
											"name": "SWAP8"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18935,
											"end": 19236,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "AND"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "MSTORE"
										},
										{
											"begin": 13251,
											"end": 13255,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "MSTORE"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP1"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP4"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "KECCAK256"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "DUP1"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "AND"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP1"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP3"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "OR"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP1"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP2"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SSTORE"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "MLOAD"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "PUSH",
											"value": "169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "SWAP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "LOG2"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "POP"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "SWAP2"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "DUP3"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "AND"
										},
										{
											"begin": 18045,
											"end": 18052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "SWAP1"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "DUP2"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "MSTORE"
										},
										{
											"begin": 18071,
											"end": 18082,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "SWAP1"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "DUP2"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "MSTORE"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "DUP1"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "DUP4"
										},
										{
											"begin": 18071,
											"end": 18089,
											"name": "KECCAK256"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP4"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP5"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "AND"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "DUP3"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "MSTORE"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP2"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP2"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "MSTORE"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "KECCAK256"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SLOAD"
										},
										{
											"begin": 18071,
											"end": 18098,
											"name": "SWAP1"
										},
										{
											"begin": 17971,
											"end": 18105,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "JUMPDEST"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "MLOAD"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP3"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "CODECOPY"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "ADD"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SWAP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "POP"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "MLOAD"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "DUP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SWAP2"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SUB"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "SWAP1"
										},
										{
											"begin": 14953,
											"end": 15024,
											"name": "KECCAK256"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "DUP2"
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "JUMPDEST"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MSTORE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP3"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP4"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MSTORE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP5"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "KECCAK256"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MSTORE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP3"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "MSTORE"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "KECCAK256"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SLOAD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "ADD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SLOAD"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP2"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "AND"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "SWAP1"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "DUP3"
										},
										{
											"begin": 14439,
											"end": 14509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 8650,
											"end": 8658,
											"name": "DUP2"
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "JUMPDEST"
										},
										{
											"begin": 6534,
											"end": 6544,
											"name": "CALLER"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "SWAP1"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25924,
											"end": 26256,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 25924,
											"end": 26256,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26017,
											"end": 26036,
											"name": "DUP4"
										},
										{
											"begin": 26017,
											"end": 26036,
											"name": "AND"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "JUMPI"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP2"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "MSTORE"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "ADD"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP1"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP1"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "ADD"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP3"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP2"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "SUB"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP3"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "MSTORE"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP2"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "MSTORE"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "ADD"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP1"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH data",
											"value": "36CE88BA958E2B0D44CDA35791945F0A281D35D6E350D9C9F8EEDD2B2359D57D"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "SWAP2"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "CODECOPY"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "ADD"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "SWAP2"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "POP"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "POP"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "MLOAD"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "DUP1"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "SWAP2"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "SUB"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "SWAP1"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "REVERT"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 26009,
											"end": 26077,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26095,
											"end": 26116,
											"name": "DUP3"
										},
										{
											"begin": 26095,
											"end": 26116,
											"name": "AND"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "JUMPI"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP2"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "MSTORE"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "ADD"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP1"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP1"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "ADD"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP3"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP2"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "SUB"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP3"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "MSTORE"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP2"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "MSTORE"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "ADD"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP1"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH data",
											"value": "2CD250AFF92BA04A009213390107E53E83F14A04575E595AF9230B9654AFED9"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "SWAP2"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "CODECOPY"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "ADD"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "SWAP2"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "POP"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "POP"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "MLOAD"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "DUP1"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "SWAP2"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "SUB"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "SWAP1"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "REVERT"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 26087,
											"end": 26155,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP1"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP5"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "AND"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP2"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP2"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "MSTORE"
										},
										{
											"begin": 26166,
											"end": 26177,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "SWAP1"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP2"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "MSTORE"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP1"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "DUP4"
										},
										{
											"begin": 26166,
											"end": 26184,
											"name": "KECCAK256"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "SWAP5"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "DUP8"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "AND"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "DUP1"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "DUP5"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "MSTORE"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "SWAP5"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "DUP3"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "MSTORE"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "SWAP2"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "DUP3"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "SWAP1"
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "KECCAK256"
										},
										{
											"begin": 26166,
											"end": 26202,
											"name": "DUP6"
										},
										{
											"begin": 26166,
											"end": 26202,
											"name": "SWAP1"
										},
										{
											"begin": 26166,
											"end": 26202,
											"name": "SSTORE"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "DUP2"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "MLOAD"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "DUP6"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "DUP2"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "MSTORE"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SWAP2"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "MLOAD"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SWAP3"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "DUP2"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SWAP1"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SUB"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SWAP1"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SWAP2"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "ADD"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "SWAP1"
										},
										{
											"begin": 26217,
											"end": 26249,
											"name": "LOG3"
										},
										{
											"begin": 25924,
											"end": 26256,
											"name": "POP"
										},
										{
											"begin": 25924,
											"end": 26256,
											"name": "POP"
										},
										{
											"begin": 25924,
											"end": 26256,
											"name": "POP"
										},
										{
											"begin": 25924,
											"end": 26256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25358,
											"end": 25918,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 25358,
											"end": 25918,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25455,
											"end": 25475,
											"name": "DUP4"
										},
										{
											"begin": 25455,
											"end": 25475,
											"name": "AND"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "JUMPI"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP2"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "MSTORE"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "ADD"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP1"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP1"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "ADD"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP3"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP2"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "SUB"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP3"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "MSTORE"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP2"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "MSTORE"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "ADD"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP1"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH data",
											"value": "BD9517161462829BE5A3D25154AE5230E5AD2E2AAAB3C9BF15E6E48716B4A12E"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "SWAP2"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "CODECOPY"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "ADD"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "SWAP2"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "POP"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "POP"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "MLOAD"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "DUP1"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "SWAP2"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "SUB"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "SWAP1"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "REVERT"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 25447,
											"end": 25517,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25535,
											"end": 25558,
											"name": "DUP3"
										},
										{
											"begin": 25535,
											"end": 25558,
											"name": "AND"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "JUMPI"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP2"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "MSTORE"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "ADD"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP1"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP1"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "ADD"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP3"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP2"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "SUB"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP3"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "MSTORE"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP2"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "MSTORE"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "ADD"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP1"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH data",
											"value": "DEEA2FA463CDACA7BCC6C65F53B7AE24609806E88CA4FDB7ADE049DC06112288"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "SWAP2"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "CODECOPY"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "ADD"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "SWAP2"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "POP"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "POP"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "MLOAD"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "DUP1"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "SWAP2"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "SUB"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "SWAP1"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "REVERT"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 25527,
											"end": 25598,
											"name": "JUMPDEST"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 25651,
											"end": 25657,
											"name": "DUP2"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "MLOAD"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "DUP1"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "ADD"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "MSTORE"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "DUP1"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "DUP2"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "MSTORE"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "ADD"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH data",
											"value": "3FC916DC37CF2CF07A856AD1473AD93B10F9A58E0AD4DC3C2FF0CEABBA196973"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "SWAP2"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "DUP7"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "AND"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "SWAP1"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "DUP2"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "MSTORE"
										},
										{
											"begin": 25629,
											"end": 25638,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "MSTORE"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "SWAP1"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "KECCAK256"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "SLOAD"
										},
										{
											"begin": 25629,
											"end": 25646,
											"name": "SWAP2"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "SWAP1"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25629,
											"end": 25650,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "AND"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 25629,
											"end": 25697,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP1"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP6"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "AND"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "SWAP1"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP2"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "MSTORE"
										},
										{
											"begin": 25609,
											"end": 25618,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP2"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP2"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "MSTORE"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP1"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "DUP5"
										},
										{
											"begin": 25609,
											"end": 25626,
											"name": "KECCAK256"
										},
										{
											"begin": 25609,
											"end": 25697,
											"name": "SWAP6"
										},
										{
											"begin": 25609,
											"end": 25697,
											"name": "SWAP1"
										},
										{
											"begin": 25609,
											"end": 25697,
											"name": "SWAP6"
										},
										{
											"begin": 25609,
											"end": 25697,
											"name": "SSTORE"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP5"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "MLOAD"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP1"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP7"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "ADD"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP7"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "MSTORE"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP2"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5468652062616C616E6365206F766572666C6F7773"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP2"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "DUP4"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "ADD"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "MSTORE"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "SWAP4"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "DUP8"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "AND"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "DUP4"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "MSTORE"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "MSTORE"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "SWAP2"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "SWAP1"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "SWAP2"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "KECCAK256"
										},
										{
											"begin": 25730,
											"end": 25750,
											"name": "SLOAD"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "SWAP2"
										},
										{
											"begin": 25755,
											"end": 25761,
											"name": "DUP4"
										},
										{
											"begin": 25755,
											"end": 25761,
											"name": "SWAP1"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25730,
											"end": 25754,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "AND"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 25730,
											"end": 25787,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "DUP1"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "DUP5"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "AND"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "DUP2"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "DUP2"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "MSTORE"
										},
										{
											"begin": 25707,
											"end": 25716,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "SWAP1"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "DUP2"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "MSTORE"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "SWAP2"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "DUP3"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "SWAP1"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "KECCAK256"
										},
										{
											"begin": 25707,
											"end": 25787,
											"name": "SWAP5"
										},
										{
											"begin": 25707,
											"end": 25787,
											"name": "SWAP1"
										},
										{
											"begin": 25707,
											"end": 25787,
											"name": "SWAP5"
										},
										{
											"begin": 25707,
											"end": 25787,
											"name": "SSTORE"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "DUP1"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "MLOAD"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "DUP6"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "DUP2"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "MSTORE"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP1"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "MLOAD"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "SWAP2"
										},
										{
											"begin": 25707,
											"end": 25727,
											"name": "SWAP4"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP3"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "DUP8"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "AND"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP3"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP3"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP2"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "DUP3"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP1"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SUB"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "ADD"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "SWAP1"
										},
										{
											"begin": 25802,
											"end": 25837,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "DUP1"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "DUP5"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "AND"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "SWAP1"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "DUP2"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "MSTORE"
										},
										{
											"begin": 25863,
											"end": 25872,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "MSTORE"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "DUP1"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "DUP3"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "KECCAK256"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "SLOAD"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "DUP6"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "DUP5"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "AND"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "DUP4"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "MSTORE"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "SWAP2"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "KECCAK256"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "SLOAD"
										},
										{
											"begin": 25848,
											"end": 25911,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 25848,
											"end": 25911,
											"name": "SWAP3"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "SWAP2"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "DUP3"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "AND"
										},
										{
											"begin": 25863,
											"end": 25880,
											"name": "SWAP2"
										},
										{
											"begin": 25882,
											"end": 25902,
											"name": "AND"
										},
										{
											"begin": 25904,
											"end": 25910,
											"name": "DUP4"
										},
										{
											"begin": 25848,
											"end": 25862,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 25848,
											"end": 25911,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25848,
											"end": 25911,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 25848,
											"end": 25911,
											"name": "JUMPDEST"
										},
										{
											"begin": 25358,
											"end": 25918,
											"name": "POP"
										},
										{
											"begin": 25358,
											"end": 25918,
											"name": "POP"
										},
										{
											"begin": 25358,
											"end": 25918,
											"name": "POP"
										},
										{
											"begin": 25358,
											"end": 25918,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2657,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2484,
											"end": 2657,
											"name": "JUMPDEST"
										},
										{
											"begin": 2570,
											"end": 2577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP5"
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP5"
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "GT"
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPI"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MSTORE"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP3"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP3"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MSTORE"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP4"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MSTORE"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP4"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "AND"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ISZERO"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPI"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP3"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP4"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "EXP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "NOT"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "AND"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MSTORE"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPDEST"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP3"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "DUP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "REVERT"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2632,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2632,
											"end": 2637,
											"name": "SUB"
										},
										{
											"begin": 2632,
											"end": 2637,
											"name": "SWAP1"
										},
										{
											"begin": 2484,
											"end": 2657,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1675,
											"end": 1848,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 1675,
											"end": 1848,
											"name": "JUMPDEST"
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "DUP4"
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "DUP4"
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "ADD"
										},
										{
											"begin": 1815,
											"end": 1827,
											"name": "DUP3"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP6"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP3"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "LT"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "ISZERO"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "JUMPI"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP2"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "MSTORE"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP3"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "ADD"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP2"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP2"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "MSTORE"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP4"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "MLOAD"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP5"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "ADD"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "MSTORE"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP4"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "MLOAD"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP1"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP3"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP4"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP3"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP1"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP2"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "ADD"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP2"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP1"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP6"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "ADD"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "SWAP1"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP1"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP4"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "DUP4"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 1799,
											"end": 1828,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "SWAP5"
										},
										{
											"begin": 1675,
											"end": 1848,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1675,
											"end": 1848,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26262,
											"end": 26666,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 26262,
											"end": 26666,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26337,
											"end": 26358,
											"name": "DUP3"
										},
										{
											"begin": 26337,
											"end": 26358,
											"name": "AND"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "JUMPI"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP2"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "MSTORE"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "ADD"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP1"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP1"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "ADD"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP3"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP2"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "SUB"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP3"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "MSTORE"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP2"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "MSTORE"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "ADD"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP1"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH data",
											"value": "F5CEF2FE2A70CA222ED18C80624B418B6D950CFD5CB46A9F7C5AB6B4AB537CEE"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "SWAP2"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "CODECOPY"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "ADD"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "SWAP2"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "POP"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "POP"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "MLOAD"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "DUP1"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "SWAP2"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "SUB"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "SWAP1"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "REVERT"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 26329,
											"end": 26396,
											"name": "JUMPDEST"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP1"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "MLOAD"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP1"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP3"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "ADD"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP3"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "MSTORE"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP2"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "MSTORE"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "PUSH",
											"value": "546865206275726E20616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP1"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "DUP4"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "ADD"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "SWAP2"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "SWAP1"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "SWAP2"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "DUP6"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SWAP1"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "DUP2"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "MSTORE"
										},
										{
											"begin": 26428,
											"end": 26437,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SWAP1"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SWAP2"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "MSTORE"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SWAP2"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SWAP1"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SWAP2"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "KECCAK256"
										},
										{
											"begin": 26428,
											"end": 26446,
											"name": "SLOAD"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "SWAP2"
										},
										{
											"begin": 26451,
											"end": 26457,
											"name": "DUP4"
										},
										{
											"begin": 26451,
											"end": 26457,
											"name": "SWAP1"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26428,
											"end": 26450,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "AND"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 26428,
											"end": 26493,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "DUP4"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "AND"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "SWAP1"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "DUP2"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "MSTORE"
										},
										{
											"begin": 26407,
											"end": 26416,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "MSTORE"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "SWAP1"
										},
										{
											"begin": 26407,
											"end": 26425,
											"name": "KECCAK256"
										},
										{
											"begin": 26407,
											"end": 26493,
											"name": "SSTORE"
										},
										{
											"begin": 26518,
											"end": 26530,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26518,
											"end": 26530,
											"name": "SLOAD"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "SWAP1"
										},
										{
											"begin": 26535,
											"end": 26541,
											"name": "DUP3"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26518,
											"end": 26534,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "AND"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 26518,
											"end": 26542,
											"name": "JUMPDEST"
										},
										{
											"begin": 26503,
											"end": 26515,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26503,
											"end": 26542,
											"name": "SSTORE"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "DUP1"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "MLOAD"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "DUP3"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "DUP2"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "MSTORE"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "SWAP1"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "MLOAD"
										},
										{
											"begin": 26583,
											"end": 26584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26583,
											"end": 26584,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "DUP6"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "AND"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "SWAP2"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "SWAP2"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "DUP2"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "SWAP1"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "SUB"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "ADD"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "SWAP1"
										},
										{
											"begin": 26557,
											"end": 26594,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "DUP1"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "DUP4"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "AND"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "SWAP1"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "DUP2"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "MSTORE"
										},
										{
											"begin": 26620,
											"end": 26629,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "MSTORE"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "DUP2"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "KECCAK256"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "SLOAD"
										},
										{
											"begin": 26605,
											"end": 26659,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 26605,
											"end": 26659,
											"name": "SWAP3"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "AND"
										},
										{
											"begin": 26620,
											"end": 26638,
											"name": "SWAP1"
										},
										{
											"begin": 26652,
											"end": 26658,
											"name": "DUP4"
										},
										{
											"begin": 26605,
											"end": 26619,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 26605,
											"end": 26659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26605,
											"end": 26659,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 26605,
											"end": 26659,
											"name": "JUMPDEST"
										},
										{
											"begin": 26262,
											"end": 26666,
											"name": "POP"
										},
										{
											"begin": 26262,
											"end": 26666,
											"name": "POP"
										},
										{
											"begin": 26262,
											"end": 26666,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP1"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP4"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "AND"
										},
										{
											"begin": 26748,
											"end": 26771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP2"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP2"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "MSTORE"
										},
										{
											"begin": 26774,
											"end": 26783,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP2"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP2"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "MSTORE"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP1"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP5"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "KECCAK256"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP1"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SLOAD"
										},
										{
											"begin": 26831,
											"end": 26840,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "DUP5"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "MSTORE"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "DUP3"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "DUP7"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "KECCAK256"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "SLOAD"
										},
										{
											"begin": 26861,
											"end": 26881,
											"name": "SWAP5"
										},
										{
											"begin": 26861,
											"end": 26881,
											"name": "SWAP1"
										},
										{
											"begin": 26861,
											"end": 26881,
											"name": "SWAP4"
										},
										{
											"begin": 26861,
											"end": 26881,
											"name": "MSTORE"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "DUP8"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "DUP8"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "DUP5"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "AND"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "DUP2"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "OR"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "SWAP1"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "SWAP2"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "SSTORE"
										},
										{
											"begin": 26909,
											"end": 26963,
											"name": "SWAP1"
										},
										{
											"begin": 26909,
											"end": 26963,
											"name": "MLOAD"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SWAP2"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SWAP1"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SWAP6"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "AND"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SWAP5"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "SWAP2"
										},
										{
											"begin": 26831,
											"end": 26851,
											"name": "SWAP4"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "SWAP2"
										},
										{
											"begin": 26861,
											"end": 26893,
											"name": "SWAP3"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "DUP6"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SWAP3"
										},
										{
											"begin": 26774,
											"end": 26794,
											"name": "SWAP2"
										},
										{
											"begin": 26909,
											"end": 26963,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 26909,
											"end": 26963,
											"name": "SWAP2"
										},
										{
											"begin": 26748,
											"end": 26771,
											"name": "SWAP1"
										},
										{
											"begin": 26909,
											"end": 26963,
											"name": "LOG4"
										},
										{
											"begin": 26974,
											"end": 27034,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 26989,
											"end": 27004,
											"name": "DUP3"
										},
										{
											"begin": 27006,
											"end": 27015,
											"name": "DUP5"
										},
										{
											"begin": 27017,
											"end": 27033,
											"name": "DUP4"
										},
										{
											"begin": 26974,
											"end": 26988,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 26974,
											"end": 27034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26974,
											"end": 27034,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 26974,
											"end": 27034,
											"name": "JUMPDEST"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "POP"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "POP"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "POP"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "POP"
										},
										{
											"begin": 26672,
											"end": 27041,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28724,
											"end": 28882,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 28724,
											"end": 28882,
											"name": "JUMPDEST"
										},
										{
											"begin": 28774,
											"end": 28780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 28796,
											"end": 28797,
											"name": "DUP3"
										},
										{
											"begin": 28796,
											"end": 28806,
											"name": "LT"
										},
										{
											"begin": 28792,
											"end": 28850,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 28792,
											"end": 28850,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28822,
											"end": 28839,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 28822,
											"end": 28839,
											"name": "JUMP"
										},
										{
											"begin": 28792,
											"end": 28850,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 28792,
											"end": 28850,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28873,
											"end": 28874,
											"name": "SWAP1"
										},
										{
											"begin": 28724,
											"end": 28882,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28888,
											"end": 29040,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 28888,
											"end": 29040,
											"name": "JUMPDEST"
										},
										{
											"begin": 28999,
											"end": 29008,
											"name": "CHAINID"
										},
										{
											"begin": 28888,
											"end": 29040,
											"name": "SWAP1"
										},
										{
											"begin": 28888,
											"end": 29040,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8826,
											"end": 8848,
											"name": "DUP2"
										},
										{
											"begin": 8826,
											"end": 8848,
											"name": "AND"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "JUMPI"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP3"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SUB"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP3"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "CODECOPY"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MLOAD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SUB"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "REVERT"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "JUMPDEST"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "DUP1"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SLOAD"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "DUP6"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP4"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SWAP3"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "AND"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "LOG3"
										},
										{
											"begin": 8946,
											"end": 8952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "DUP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP3"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP3"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP2"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP2"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "OR"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SSTORE"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 27047,
											"end": 27941,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 27047,
											"end": 27941,
											"name": "JUMPDEST"
										},
										{
											"begin": 27152,
											"end": 27158,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27142,
											"end": 27158,
											"name": "AND"
										},
										{
											"begin": 27142,
											"end": 27148,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27142,
											"end": 27158,
											"name": "AND"
										},
										{
											"begin": 27142,
											"end": 27158,
											"name": "EQ"
										},
										{
											"begin": 27142,
											"end": 27158,
											"name": "ISZERO"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "DUP1"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "ISZERO"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "JUMPI"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "POP"
										},
										{
											"begin": 27171,
											"end": 27172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27162,
											"end": 27168,
											"name": "DUP2"
										},
										{
											"begin": 27162,
											"end": 27172,
											"name": "GT"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 27142,
											"end": 27172,
											"name": "JUMPDEST"
										},
										{
											"begin": 27138,
											"end": 27935,
											"name": "ISZERO"
										},
										{
											"begin": 27138,
											"end": 27935,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 27138,
											"end": 27935,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27192,
											"end": 27212,
											"name": "DUP4"
										},
										{
											"begin": 27192,
											"end": 27212,
											"name": "AND"
										},
										{
											"begin": 27192,
											"end": 27212,
											"name": "ISZERO"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "DUP4"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "AND"
										},
										{
											"begin": 27232,
											"end": 27248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "SWAP1"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "DUP2"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "MSTORE"
										},
										{
											"begin": 27251,
											"end": 27265,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "MSTORE"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "DUP2"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "KECCAK256"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "SLOAD"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "AND"
										},
										{
											"begin": 27251,
											"end": 27273,
											"name": "SWAP1"
										},
										{
											"begin": 27311,
											"end": 27324,
											"name": "DUP2"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "JUMPI"
										},
										{
											"begin": 27370,
											"end": 27371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "JUMP"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "DUP6"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "AND"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "SWAP1"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "DUP2"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "MSTORE"
										},
										{
											"begin": 27327,
											"end": 27338,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "SWAP1"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "DUP2"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "MSTORE"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "DUP1"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "DUP4"
										},
										{
											"begin": 27327,
											"end": 27346,
											"name": "KECCAK256"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 27347,
											"end": 27360,
											"name": "DUP8"
										},
										{
											"begin": 27347,
											"end": 27360,
											"name": "ADD"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "AND"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "DUP5"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "MSTORE"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "SWAP1"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "SWAP2"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "MSTORE"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "SWAP1"
										},
										{
											"begin": 27327,
											"end": 27361,
											"name": "KECCAK256"
										},
										{
											"begin": 27359,
											"end": 27360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27327,
											"end": 27367,
											"name": "ADD"
										},
										{
											"begin": 27327,
											"end": 27367,
											"name": "SLOAD"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 27311,
											"end": 27371,
											"name": "JUMPDEST"
										},
										{
											"begin": 27291,
											"end": 27371,
											"name": "SWAP1"
										},
										{
											"begin": 27291,
											"end": 27371,
											"name": "POP"
										},
										{
											"begin": 27389,
											"end": 27406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 27423,
											"end": 27429,
											"name": "DUP5"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "MLOAD"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "DUP1"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "ADD"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "MSTORE"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "DUP1"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "DUP2"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "MSTORE"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "ADD"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "54686520766F746520616D6F756E7420756E646572666C6F7773000000000000"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "DUP2"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "MSTORE"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "POP"
										},
										{
											"begin": 27409,
											"end": 27418,
											"name": "DUP5"
										},
										{
											"begin": 27409,
											"end": 27422,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 27409,
											"end": 27422,
											"name": "SWAP1"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "SWAP3"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "SWAP2"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "SWAP1"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "AND"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 27409,
											"end": 27460,
											"name": "JUMPDEST"
										},
										{
											"begin": 27389,
											"end": 27460,
											"name": "SWAP1"
										},
										{
											"begin": 27389,
											"end": 27460,
											"name": "POP"
										},
										{
											"begin": 27478,
											"end": 27535,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 27495,
											"end": 27501,
											"name": "DUP7"
										},
										{
											"begin": 27503,
											"end": 27512,
											"name": "DUP5"
										},
										{
											"begin": 27514,
											"end": 27523,
											"name": "DUP5"
										},
										{
											"begin": 27525,
											"end": 27534,
											"name": "DUP5"
										},
										{
											"begin": 27478,
											"end": 27494,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 27478,
											"end": 27535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27478,
											"end": 27535,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 27478,
											"end": 27535,
											"name": "JUMPDEST"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "POP"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "POP"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "POP"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 27188,
											"end": 27550,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "DUP3"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "AND"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "ISZERO"
										},
										{
											"begin": 27564,
											"end": 27925,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 27564,
											"end": 27925,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "DUP3"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "AND"
										},
										{
											"begin": 27608,
											"end": 27624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "SWAP1"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "DUP2"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "MSTORE"
										},
										{
											"begin": 27627,
											"end": 27641,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "MSTORE"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "DUP2"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "KECCAK256"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "SLOAD"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "AND"
										},
										{
											"begin": 27627,
											"end": 27649,
											"name": "SWAP1"
										},
										{
											"begin": 27687,
											"end": 27700,
											"name": "DUP2"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "JUMPI"
										},
										{
											"begin": 27746,
											"end": 27747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "JUMP"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "DUP5"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "AND"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "SWAP1"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "DUP2"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "MSTORE"
										},
										{
											"begin": 27703,
											"end": 27714,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "SWAP1"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "DUP2"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "MSTORE"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "DUP1"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "DUP4"
										},
										{
											"begin": 27703,
											"end": 27722,
											"name": "KECCAK256"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 27723,
											"end": 27736,
											"name": "DUP8"
										},
										{
											"begin": 27723,
											"end": 27736,
											"name": "ADD"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "AND"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "DUP5"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "MSTORE"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "SWAP1"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "SWAP2"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "MSTORE"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "SWAP1"
										},
										{
											"begin": 27703,
											"end": 27737,
											"name": "KECCAK256"
										},
										{
											"begin": 27735,
											"end": 27736,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27703,
											"end": 27743,
											"name": "ADD"
										},
										{
											"begin": 27703,
											"end": 27743,
											"name": "SLOAD"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 27687,
											"end": 27747,
											"name": "JUMPDEST"
										},
										{
											"begin": 27667,
											"end": 27747,
											"name": "SWAP1"
										},
										{
											"begin": 27667,
											"end": 27747,
											"name": "POP"
										},
										{
											"begin": 27765,
											"end": 27782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 27799,
											"end": 27805,
											"name": "DUP5"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "MLOAD"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "DUP1"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "ADD"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "MSTORE"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "DUP1"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "DUP2"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "MSTORE"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "ADD"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "54686520766F746520616D6F756E74206F766572666C6F777300000000000000"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "DUP2"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "MSTORE"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "POP"
										},
										{
											"begin": 27785,
											"end": 27794,
											"name": "DUP5"
										},
										{
											"begin": 27785,
											"end": 27798,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 27785,
											"end": 27798,
											"name": "SWAP1"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "SWAP3"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "SWAP2"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "SWAP1"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "AND"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 27785,
											"end": 27835,
											"name": "JUMPDEST"
										},
										{
											"begin": 27765,
											"end": 27835,
											"name": "SWAP1"
										},
										{
											"begin": 27765,
											"end": 27835,
											"name": "POP"
										},
										{
											"begin": 27853,
											"end": 27910,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 27870,
											"end": 27876,
											"name": "DUP6"
										},
										{
											"begin": 27878,
											"end": 27887,
											"name": "DUP5"
										},
										{
											"begin": 27889,
											"end": 27898,
											"name": "DUP5"
										},
										{
											"begin": 27900,
											"end": 27909,
											"name": "DUP5"
										},
										{
											"begin": 27853,
											"end": 27869,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 27853,
											"end": 27910,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2220,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 2092,
											"end": 2220,
											"name": "JUMPDEST"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "DUP4"
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "DUP4"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "MLOAD"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "DUP1"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "DUP1"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "POP"
										},
										{
											"begin": 2172,
											"end": 2175,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2172,
											"end": 2215,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "JUMPDEST"
										},
										{
											"begin": 28066,
											"end": 28084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 28094,
											"end": 28106,
											"name": "NUMBER"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "MLOAD"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "DUP1"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "ADD"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "MSTORE"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "DUP1"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "DUP2"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "MSTORE"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "ADD"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "PUSH",
											"value": "54686520626C6F636B206E756D62657220657863656564732033322062697473"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "DUP2"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "MSTORE"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "POP"
										},
										{
											"begin": 28087,
											"end": 28093,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 28087,
											"end": 28143,
											"name": "JUMPDEST"
										},
										{
											"begin": 28066,
											"end": 28143,
											"name": "SWAP1"
										},
										{
											"begin": 28066,
											"end": 28143,
											"name": "POP"
										},
										{
											"begin": 28171,
											"end": 28172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28156,
											"end": 28168,
											"name": "DUP5"
										},
										{
											"begin": 28156,
											"end": 28172,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28156,
											"end": 28172,
											"name": "AND"
										},
										{
											"begin": 28156,
											"end": 28172,
											"name": "GT"
										},
										{
											"begin": 28156,
											"end": 28241,
											"name": "DUP1"
										},
										{
											"begin": 28156,
											"end": 28241,
											"name": "ISZERO"
										},
										{
											"begin": 28156,
											"end": 28241,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 28156,
											"end": 28241,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "DUP6"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "AND"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "SWAP1"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "DUP2"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "MSTORE"
										},
										{
											"begin": 28176,
											"end": 28187,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "SWAP1"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "DUP2"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "MSTORE"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "DUP1"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "DUP4"
										},
										{
											"begin": 28176,
											"end": 28198,
											"name": "KECCAK256"
										},
										{
											"begin": 28176,
											"end": 28241,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28199,
											"end": 28215,
											"name": "DUP10"
										},
										{
											"begin": 28199,
											"end": 28215,
											"name": "ADD"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "DUP2"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "AND"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "DUP6"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "MSTORE"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "SWAP3"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "MSTORE"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "SWAP1"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "SWAP2"
										},
										{
											"begin": 28176,
											"end": 28216,
											"name": "KECCAK256"
										},
										{
											"begin": 28176,
											"end": 28226,
											"name": "SLOAD"
										},
										{
											"begin": 28176,
											"end": 28241,
											"name": "DUP3"
										},
										{
											"begin": 28176,
											"end": 28241,
											"name": "DUP3"
										},
										{
											"begin": 28176,
											"end": 28241,
											"name": "AND"
										},
										{
											"begin": 28176,
											"end": 28226,
											"name": "SWAP2"
										},
										{
											"begin": 28176,
											"end": 28226,
											"name": "AND"
										},
										{
											"begin": 28176,
											"end": 28241,
											"name": "EQ"
										},
										{
											"begin": 28156,
											"end": 28241,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 28156,
											"end": 28241,
											"name": "JUMPDEST"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "ISZERO"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "DUP6"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "AND"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "SWAP1"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "DUP2"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "MSTORE"
										},
										{
											"begin": 28255,
											"end": 28266,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "SWAP1"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "DUP2"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "MSTORE"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "DUP1"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "DUP4"
										},
										{
											"begin": 28255,
											"end": 28277,
											"name": "KECCAK256"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28278,
											"end": 28294,
											"name": "DUP10"
										},
										{
											"begin": 28278,
											"end": 28294,
											"name": "ADD"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "AND"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "DUP5"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "MSTORE"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "SWAP1"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "SWAP2"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "MSTORE"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "SWAP1"
										},
										{
											"begin": 28255,
											"end": 28295,
											"name": "KECCAK256"
										},
										{
											"begin": 28293,
											"end": 28294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28255,
											"end": 28301,
											"name": "ADD"
										},
										{
											"begin": 28255,
											"end": 28312,
											"name": "DUP3"
										},
										{
											"begin": 28255,
											"end": 28312,
											"name": "SWAP1"
										},
										{
											"begin": 28255,
											"end": 28312,
											"name": "SSTORE"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "JUMP"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "JUMPDEST"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP1"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "MLOAD"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP1"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP3"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "ADD"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP3"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "MSTORE"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP1"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP5"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "AND"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP3"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "MSTORE"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP1"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP4"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "ADD"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP7"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "DUP2"
										},
										{
											"begin": 28378,
											"end": 28411,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "DUP11"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "DUP2"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "DUP2"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "MSTORE"
										},
										{
											"begin": 28339,
											"end": 28350,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "DUP5"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "MSTORE"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "DUP7"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "DUP2"
										},
										{
											"begin": 28339,
											"end": 28361,
											"name": "KECCAK256"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "DUP12"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "DUP7"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "AND"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "DUP3"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "MSTORE"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "DUP5"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "MSTORE"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "DUP7"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "DUP2"
										},
										{
											"begin": 28339,
											"end": 28375,
											"name": "KECCAK256"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SWAP6"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "MLOAD"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "DUP7"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SLOAD"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SWAP1"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "DUP7"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SWAP2"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "DUP3"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "AND"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "OR"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "DUP8"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SSTORE"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SWAP3"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "MLOAD"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SWAP7"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "DUP8"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "ADD"
										},
										{
											"begin": 28339,
											"end": 28411,
											"name": "SSTORE"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "SWAP1"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "DUP2"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "MSTORE"
										},
										{
											"begin": 28423,
											"end": 28437,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "SWAP1"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "SWAP3"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "MSTORE"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "SWAP4"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "SWAP1"
										},
										{
											"begin": 28423,
											"end": 28448,
											"name": "KECCAK256"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "DUP1"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SLOAD"
										},
										{
											"begin": 28451,
											"end": 28467,
											"name": "SWAP3"
										},
										{
											"begin": 28451,
											"end": 28467,
											"name": "DUP9"
										},
										{
											"begin": 28451,
											"end": 28467,
											"name": "ADD"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SWAP1"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SWAP2"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "AND"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SWAP2"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SWAP1"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SWAP3"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "AND"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "OR"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SWAP1"
										},
										{
											"begin": 28423,
											"end": 28467,
											"name": "SSTORE"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 28152,
											"end": 28476,
											"name": "JUMPDEST"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP1"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "MLOAD"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP5"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP2"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "MSTORE"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP2"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "ADD"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP5"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "SWAP1"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "MSTORE"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP2"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP9"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "AND"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "SWAP3"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "SWAP3"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "DUP3"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "SWAP1"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "SUB"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "ADD"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "SWAP1"
										},
										{
											"begin": 28489,
											"end": 28540,
											"name": "LOG2"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "POP"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "POP"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "POP"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "POP"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "POP"
										},
										{
											"begin": 27947,
											"end": 28547,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28557,
											"end": 28718,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 28557,
											"end": 28718,
											"name": "JUMPDEST"
										},
										{
											"begin": 28635,
											"end": 28641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28672,
											"end": 28684,
											"name": "DUP2"
										},
										{
											"begin": 28665,
											"end": 28670,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 28661,
											"end": 28670,
											"name": "DUP5"
										},
										{
											"begin": 28661,
											"end": 28670,
											"name": "LT"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "JUMPI"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP2"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "MSTORE"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP3"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "ADD"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP2"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP2"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "MSTORE"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP4"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "MLOAD"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP5"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "ADD"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "MSTORE"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP4"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "MLOAD"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP1"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP3"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP4"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP3"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP1"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP2"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "ADD"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP2"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP1"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP6"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "ADD"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "SWAP1"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP1"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP4"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "DUP4"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 28653,
											"end": 28685,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28709,
											"end": 28710,
											"name": "SWAP2"
										},
										{
											"begin": 28709,
											"end": 28710,
											"name": "SWAP3"
										},
										{
											"begin": 28557,
											"end": 28718,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28557,
											"end": 28718,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "MLOAD"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "ADD"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "SWAP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "SWAP2"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "MSTORE"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "DUP3"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "ADD"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "MSTORE"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "SWAP1"
										},
										{
											"begin": 13437,
											"end": 29042,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2CD250AFF92BA04A009213390107E53E83F14A04575E595AF9230B9654AFED9": "43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373",
										"36CE88BA958E2B0D44CDA35791945F0A281D35D6E350D9C9F8EEDD2B2359D57D": "43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373",
										"3FC916DC37CF2CF07A856AD1473AD93B10F9A58E0AD4DC3C2FF0CEABBA196973": "546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"42D9A8E134AF3312DAACAC2D2003D2E3A900F5F05EB0DE35B651F1E9CE1C4E5B": "5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"5E83471B3A3D1FE92BFF19912BAB84DCC2C92190AF741E7C33D886D7EC91F5D1": "546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"AC444B4635A35929A68A5C8FA43076F8FD9D5DD9C52546538D69B2042F34C77": "54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773",
										"BD9517161462829BE5A3D25154AE5230E5AD2E2AAAB3C9BF15E6E48716B4A12E": "43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEEA2FA463CDACA7BCC6C65F53B7AE24609806E88CA4FDB7ADE049DC06112288": "43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
										"E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
										"F5CEF2FE2A70CA222ED18C80624B418B6D950CFD5CB46A9F7C5AB6B4AB537CEE": "43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"freeze()": "62a5af3b",
							"getCurrentVotes(address)": "b4b5ea57",
							"getOwner()": "893d20e8",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"lockUser(address)": "d7972580",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze()": "6a28f000",
							"unlockUser(address)": "bd1870a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"LockUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"UnlockUser\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`\",\"params\":{\"amount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"receiveApproval(...) is executed.\",\"params\":{\"amount\":\"The number of tokens that are approved\",\"data\":\"The data to pass to receiveApproval(...)\"},\"return\":\"true\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"burn(uint256)\":{\"details\":\"The amount must be greater than balance, total supply.\",\"params\":{\"amount\":\"The number of tokens that are burnt\"},\"return\":\"true\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.\",\"params\":{\"spender\":\"The address of the account which may transfer tokens\",\"subtractedValue\":\"The subtractional number of tokens to allow which may be spent\"},\"return\":\"Whether or not the approval succeeded\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"increaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.\",\"params\":{\"addedValue\":\"The additional number of tokens to allow which may be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the total supply.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"recipient\":\"The address of the destination account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"recipient\":\"The address of the destination account\",\"sender\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Approve the spender to transferFrom(...) with the amount.\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"burn(uint256)\":{\"notice\":\"Destroy the amount of tokens from the sender, reducing the total supply.\"},\"constructor\":\"Construct a new GTFX Testnet token\",\"decreaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"GTFX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "isLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 487,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "blacklist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 558,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 564,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 566,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 568,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 570,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 572,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_name",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 576,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "delegates",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 587,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "checkpoints",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)581_storage))"
							},
							{
								"astId": 591,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 605,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "nonces",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)581_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)581_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)581_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct GTFX.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)581_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)581_storage": {
								"encoding": "inplace",
								"label": "struct GTFX.Checkpoint",
								"members": [
									{
										"astId": 578,
										"contract": "contracts/4_SmartGTFX.sol:GTFX",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 580,
										"contract": "contracts/4_SmartGTFX.sol:GTFX",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"approveAndCall(address,uint256,bytes)": {
								"notice": "Approve the spender to transferFrom(...) with the amount."
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"burn(uint256)": {
								"notice": "Destroy the amount of tokens from the sender, reducing the total supply."
							},
							"constructor": "Construct a new GTFX Testnet token",
							"decreaseAllowance(address,uint256)": {
								"notice": "Atomically increases the allowance granted to `spender` by the caller"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"increaseAllowance(address,uint256)": {
								"notice": "Atomically increases the allowance granted to `spender` by the caller"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":1061:5755  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":1061:5755  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158209f327ff2680b1d2d701dc3df7a475667e08c2f1c01a66631d909f393bcbb9b2c64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209f327ff2680b1d2d701dc3df7a475667e08c2f1c01a66631d909f393bcbb9b2c64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP16 ORIGIN PUSH32 0xF2680B1D2D701DC3DF7A475667E08C2F1C01A66631D909F393BCBB9B2C64736F PUSH13 0x63430005110032000000000000 ",
							"sourceMap": "1061:4694:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209f327ff2680b1d2d701dc3df7a475667e08c2f1c01a66631d909f393bcbb9b2c64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP16 ORIGIN PUSH32 0xF2680B1D2D701DC3DF7A475667E08C2F1C01A66631D909F393BCBB9B2C64736F PUSH13 0x63430005110032000000000000 ",
							"sourceMap": "1061:4694:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"add(uint256,uint256,string memory)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1061,
									"end": 5755,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1061,
									"end": 5755,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209f327ff2680b1d2d701dc3df7a475667e08c2f1c01a66631d909f393bcbb9b2c64736f6c63430005110032",
									".code": [
										{
											"begin": 1061,
											"end": 5755,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "ADDRESS"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "EQ"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "MSTORE"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "DUP1"
										},
										{
											"begin": 1061,
											"end": 5755,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Tokenlock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "Freezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "UnFreezed",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":11848:12303  contract Tokenlock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":11946:11947  0 */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":11929:11947  uint8 isLocked = 0 */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7551:7563  _msgSender() */\n  tag_5\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7551:7561  _msgSender */\n  tag_6\n    /* \"contracts/4_SmartGTFX.sol\":7551:7563  _msgSender() */\n  and\n  jump\t// in\ntag_5:\n    /* \"contracts/4_SmartGTFX.sol\":7569:7575  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7569:7587  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7569:7587  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7569:7575  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":7501:7646  constructor () internal {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":11848:12303  contract Tokenlock is Ownable {... */\n  jump(tag_7)\n    /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/4_SmartGTFX.sol\":6534:6544  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":11848:12303  contract Tokenlock is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":11848:12303  contract Tokenlock is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":11848:12303  contract Tokenlock is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62a5af3b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6a28f000\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":12097:12194  function freeze() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":12200:12301  function unfreeze() public onlyOwner {... */\n    tag_4:\n      tag_8\n      tag_11\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_8\n      tag_13\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":12097:12194  function freeze() public onlyOwner {... */\n    tag_9:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_20\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_22\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/4_SmartGTFX.sol\":12142:12150  isLocked */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12142:12154  isLocked = 1 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12178:12187  Freezed() */\n      mload(0x40)\n      0x962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12142:12150  isLocked */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12178:12187  Freezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12097:12194  function freeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12200:12301  function unfreeze() public onlyOwner {... */\n    tag_11:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_25\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/4_SmartGTFX.sol\":12258:12259  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12247:12259  isLocked = 0 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12283:12294  UnFreezed() */\n      mload(0x40)\n      0xf0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12258:12259  0 */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12283:12294  UnFreezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12200:12301  function unfreeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n    tag_13:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_29\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_29:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_30\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_30:\n        /* \"contracts/4_SmartGTFX.sol\":8391:8392  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8375:8381  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8375:8381  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8391:8392  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8417:8418  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8400:8419  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n    tag_15:\n        /* \"contracts/4_SmartGTFX.sol\":7752:7759  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7774:7780  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_34\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_34:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_35\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/4_SmartGTFX.sol\":8631:8659  _transferOwnership(newOwner) */\n      tag_37\n        /* \"contracts/4_SmartGTFX.sol\":8650:8658  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8631:8649  _transferOwnership */\n      tag_38\n        /* \"contracts/4_SmartGTFX.sol\":8631:8659  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n    tag_21:\n        /* \"contracts/4_SmartGTFX.sol\":6534:6544  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8757:8968  function _transferOwnership(address newOwner) internal {... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8826:8848  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8818:8891  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/4_SmartGTFX.sol\":8923:8929  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8902:8940  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8923:8929  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8902:8940  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8946:8952  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8946:8963  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8757:8968  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa265627a7a723158202f254dc9cf9ba862090bc8a936bcc9d1518b4b6b72cd1745c0a171e2e2d5d7ea64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b191681556100226001600160e01b0361007116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610075565b3390565b610416806100846000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806362a5af3b1461005c5780636a28f00014610066578063715018a61461006e5780638da5cb5b14610076578063f2fde38b1461009a575b600080fd5b6100646100c0565b005b610064610154565b6100646101e2565b61007e610284565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100b057600080fd5b50356001600160a01b0316610293565b6100c86102f7565b6000546001600160a01b03908116911614610118576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b61015c6102f7565b6000546001600160a01b039081169116146101ac576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b6101ea6102f7565b6000546001600160a01b0390811691161461023a576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029b6102f7565b6000546001600160a01b039081169116146102eb576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6102f4816102fb565b50565b3390565b6001600160a01b0381166103405760405162461bcd60e51b815260040180806020018281038252602681526020018061039c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158202f254dc9cf9ba862090bc8a936bcc9d1518b4b6b72cd1745c0a171e2e2d5d7ea64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH2 0x22 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x71 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x75 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x416 DUP1 PUSH2 0x84 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A723158202F254D 0xC9 0xCF SWAP12 0xA8 PUSH3 0x90BC8 0xA9 CALLDATASIZE 0xBC 0xC9 0xD1 MLOAD DUP12 0x4B PUSH12 0x72CD1745C0A171E2E2D5D7EA PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "11848:455:0:-;;;11946:1;11929:18;;-1:-1:-1;;;;11929:18:0;;;7551:12;-1:-1:-1;;;;;7551:10:0;:12;:::i;:::-;7569:6;:18;;-1:-1:-1;;;;;;7569:18:0;-1:-1:-1;;;;;7569:18:0;;;;;;;7598:43;;7569:18;;-1:-1:-1;7569:18:0;7598:43;;7569:6;;7598:43;7501:145;11848:455;;6459:90;6534:10;6459:90;:::o;11848:455::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806362a5af3b1461005c5780636a28f00014610066578063715018a61461006e5780638da5cb5b14610076578063f2fde38b1461009a575b600080fd5b6100646100c0565b005b610064610154565b6100646101e2565b61007e610284565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100b057600080fd5b50356001600160a01b0316610293565b6100c86102f7565b6000546001600160a01b03908116911614610118576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b61015c6102f7565b6000546001600160a01b039081169116146101ac576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b6101ea6102f7565b6000546001600160a01b0390811691161461023a576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029b6102f7565b6000546001600160a01b039081169116146102eb576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6102f4816102fb565b50565b3390565b6001600160a01b0381166103405760405162461bcd60e51b815260040180806020018281038252602681526020018061039c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158202f254dc9cf9ba862090bc8a936bcc9d1518b4b6b72cd1745c0a171e2e2d5d7ea64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A723158202F254D 0xC9 0xCF SWAP12 0xA8 PUSH3 0x90BC8 0xA9 CALLDATASIZE 0xBC 0xC9 0xD1 MLOAD DUP12 0x4B PUSH12 0x72CD1745C0A171E2E2D5D7EA PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "11848:455:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11848:455:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12097:97;;;:::i;:::-;;12200:101;;;:::i;8297:127::-;;;:::i;7714:71::-;;;:::i;:::-;;;;-1:-1:-1;;;;;7714:71:0;;;;;;;;;;;;;;8563:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8563:101:0;-1:-1:-1;;;;;8563:101:0;;:::i;12097:97::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;12142:8;:12;;-1:-1:-1;;;;12142:12:0;-1:-1:-1;;;12142:12:0;;;12178:9;;;;12142:8;12178:9;12097:97::o;12200:101::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;12258:1;12247:12;;-1:-1:-1;;;;12247:12:0;;;12283:11;;;;12258:1;12283:11;12200:101::o;8297:127::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;8391:1;8375:6;;8354:40;;-1:-1:-1;;;;;8375:6:0;;;;8354:40;;8391:1;;8354:40;8417:1;8400:19;;-1:-1:-1;;;;;;8400:19:0;;;8297:127::o;7714:71::-;7752:7;7774:6;-1:-1:-1;;;;;7774:6:0;7714:71;:::o;8563:101::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;8631:28;8650:8;8631:18;:28::i;:::-;8563:101;:::o;6459:90::-;6534:10;6459:90;:::o;8757:211::-;-1:-1:-1;;;;;8826:22:0;;8818:73;;;;-1:-1:-1;;;8818:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8923:6;;;8902:38;;-1:-1:-1;;;;;8902:38:0;;;;8923:6;;;8902:38;;;8946:6;:17;;-1:-1:-1;;;;;;8946:17:0;-1:-1:-1;;;;;8946:17:0;;;;;;;;;;8757:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"freeze()": "infinite",
								"owner()": "1081",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreeze()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "MSTORE"
								},
								{
									"begin": 11946,
									"end": 11947,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "DUP1"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "AND"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "DUP2"
								},
								{
									"begin": 11929,
									"end": 11947,
									"name": "SSTORE"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "AND"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "JUMPDEST"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP1"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP4"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "AND"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP1"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP2"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "OR"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP3"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SSTORE"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "MLOAD"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP3"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP2"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "SWAP1"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "DUP3"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "SWAP1"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "LOG3"
								},
								{
									"begin": 7501,
									"end": 7646,
									"name": "POP"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "JUMP"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMPDEST"
								},
								{
									"begin": 6534,
									"end": 6544,
									"name": "CALLER"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "SWAP1"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "JUMPDEST"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "DUP1"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "CODECOPY"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11848,
									"end": 12303,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202f254dc9cf9ba862090bc8a936bcc9d1518b4b6b72cd1745c0a171e2e2d5d7ea64736f6c63430005110032",
									".code": [
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "MSTORE"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "POP"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "LT"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPI"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "SHR"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "62A5AF3B"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "EQ"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPI"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "EQ"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPI"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "EQ"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPI"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "EQ"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPI"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "EQ"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPI"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "JUMPDEST"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 11848,
											"end": 12303,
											"name": "REVERT"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "STOP"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMPDEST"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "DUP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP3"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "AND"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "DUP3"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "MSTORE"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "MLOAD"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "DUP2"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SUB"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "ADD"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "RETURN"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMPDEST"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "DUP1"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "AND"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 12142,
											"end": 12150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "DUP1"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "OR"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "DUP2"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "SSTORE"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "MLOAD"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "PUSH",
											"value": "962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "SWAP2"
										},
										{
											"begin": 12142,
											"end": 12150,
											"name": "SWAP1"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "LOG1"
										},
										{
											"begin": 12097,
											"end": 12194,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 12258,
											"end": 12259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "AND"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "DUP2"
										},
										{
											"begin": 12247,
											"end": 12259,
											"name": "SSTORE"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "MLOAD"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "PUSH",
											"value": "F0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "SWAP2"
										},
										{
											"begin": 12258,
											"end": 12259,
											"name": "SWAP1"
										},
										{
											"begin": 12283,
											"end": 12294,
											"name": "LOG1"
										},
										{
											"begin": 12200,
											"end": 12301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "DUP1"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SLOAD"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP2"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "AND"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "SWAP1"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "DUP4"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "SWAP1"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "LOG3"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "DUP1"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "AND"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SSTORE"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7752,
											"end": 7759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "AND"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8650,
											"end": 8658,
											"name": "DUP2"
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "JUMPDEST"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "POP"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "JUMPDEST"
										},
										{
											"begin": 6534,
											"end": 6544,
											"name": "CALLER"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "SWAP1"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8826,
											"end": 8848,
											"name": "DUP2"
										},
										{
											"begin": 8826,
											"end": 8848,
											"name": "AND"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "JUMPI"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP3"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SUB"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP3"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "CODECOPY"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MLOAD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SUB"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "REVERT"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "JUMPDEST"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "DUP1"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SLOAD"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "DUP6"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP4"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SWAP3"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "AND"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "LOG3"
										},
										{
											"begin": 8946,
											"end": 8952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "DUP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP3"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP3"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP2"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP2"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "OR"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SSTORE"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"freeze()": "62a5af3b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze()": "6a28f000"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Tokenlock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:Tokenlock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "contracts/4_SmartGTFX.sol:Tokenlock",
								"label": "isLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"UserLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "LockUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "UnlockUser",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "lockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "unlockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":12897:13435  contract UserLock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":7531:7548  address msgSender */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7551:7563  _msgSender() */\n  tag_5\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7551:7561  _msgSender */\n  tag_6\n    /* \"contracts/4_SmartGTFX.sol\":7551:7563  _msgSender() */\n  and\n  jump\t// in\ntag_5:\n    /* \"contracts/4_SmartGTFX.sol\":7569:7575  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7569:7587  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7569:7587  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7569:7575  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7598:7641  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":7501:7646  constructor () internal {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":12897:13435  contract UserLock is Ownable {... */\n  jump(tag_7)\n    /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/4_SmartGTFX.sol\":6534:6544  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":12897:13435  contract UserLock is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":12897:13435  contract UserLock is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":12897:13435  contract UserLock is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbd1870a3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd7972580\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n    tag_5:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_14\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n    tag_6:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_17\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n    tag_9:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_22\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_24\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_24:\n        /* \"contracts/4_SmartGTFX.sol\":8391:8392  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8375:8381  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8375:8381  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8391:8392  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8354:8394  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8417:8418  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8400:8419  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8297:8424  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n    tag_11:\n        /* \"contracts/4_SmartGTFX.sol\":7752:7759  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7774:7780  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7714:7785  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n    tag_14:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_28\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_29\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13365:13379  blacklist[who] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13382:13387  false */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":13365:13379  blacklist[who] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13365:13374  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13365:13379  blacklist[who] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13365:13387  blacklist[who] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13411:13426  UnlockUser(who) */\n      mload\n      0x687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13382:13387  false */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13411:13426  UnlockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13305:13433  function unlockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n    tag_17:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_32\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_33\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13234:13248  blacklist[who] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13251:13255  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13234:13248  blacklist[who] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13234:13255  blacklist[who] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13279:13292  LockUser(who) */\n      mload\n      0x169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13234:13248  blacklist[who] */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13279:13292  LockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13176:13299  function lockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      tag_36\n        /* \"contracts/4_SmartGTFX.sol\":7910:7920  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7910:7922  _msgSender() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/4_SmartGTFX.sol\":7900:7906  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7900:7922  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7892:7959  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_37\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/4_SmartGTFX.sol\":8631:8659  _transferOwnership(newOwner) */\n      tag_39\n        /* \"contracts/4_SmartGTFX.sol\":8650:8658  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8631:8649  _transferOwnership */\n      tag_40\n        /* \"contracts/4_SmartGTFX.sol\":8631:8659  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/4_SmartGTFX.sol\":8563:8664  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n    tag_23:\n        /* \"contracts/4_SmartGTFX.sol\":6534:6544  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6459:6549  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8757:8968  function _transferOwnership(address newOwner) internal {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8826:8848  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8818:8891  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/4_SmartGTFX.sol\":8923:8929  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8902:8940  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8923:8929  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8902:8940  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8946:8952  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8946:8963  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8757:8968  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa265627a7a7231582071f508fe38c19a7270e9dd8b1e289a2e8abcfb878b707ea14909b837d17c727a64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b610478806100796000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063bd1870a31461008a578063d7972580146100b0578063f2fde38b146100d6575b600080fd5b6100646100fc565b005b61006e61019e565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100a057600080fd5b50356001600160a01b03166101ad565b610064600480360360208110156100c657600080fd5b50356001600160a01b031661024e565b610064600480360360208110156100ec57600080fd5b50356001600160a01b03166102f5565b610104610359565b6000546001600160a01b03908116911614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101b5610359565b6000546001600160a01b03908116911614610205576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b610256610359565b6000546001600160a01b039081169116146102a6576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6102fd610359565b6000546001600160a01b0390811691161461034d576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6103568161035d565b50565b3390565b6001600160a01b0381166103a25760405162461bcd60e51b81526004018080602001828103825260268152602001806103fe6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a7231582071f508fe38c19a7270e9dd8b1e289a2e8abcfb878b707ea14909b837d17c727a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x17 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x66 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x478 DUP1 PUSH2 0x79 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24E JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x205 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x34D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x35D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A7231582071F508 INVALID CODESIZE 0xC1 SWAP11 PUSH19 0x70E9DD8B1E289A2E8ABCFB878B707EA14909B8 CALLDATACOPY 0xD1 PUSH29 0x727A64736F6C6343000511003200000000000000000000000000000000 ",
							"sourceMap": "12897:538:0:-;;;7531:17;7551:12;-1:-1:-1;;;;;7551:10:0;:12;:::i;:::-;7569:6;:18;;-1:-1:-1;;;;;;7569:18:0;-1:-1:-1;;;;;7569:18:0;;;;;;;7598:43;;7569:18;;-1:-1:-1;7569:18:0;7598:43;;7569:6;;7598:43;7501:145;12897:538;;6459:90;6534:10;6459:90;:::o;12897:538::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063bd1870a31461008a578063d7972580146100b0578063f2fde38b146100d6575b600080fd5b6100646100fc565b005b61006e61019e565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100a057600080fd5b50356001600160a01b03166101ad565b610064600480360360208110156100c657600080fd5b50356001600160a01b031661024e565b610064600480360360208110156100ec57600080fd5b50356001600160a01b03166102f5565b610104610359565b6000546001600160a01b03908116911614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101b5610359565b6000546001600160a01b03908116911614610205576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b610256610359565b6000546001600160a01b039081169116146102a6576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6102fd610359565b6000546001600160a01b0390811691161461034d576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6103568161035d565b50565b3390565b6001600160a01b0381166103a25760405162461bcd60e51b81526004018080602001828103825260268152602001806103fe6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a7231582071f508fe38c19a7270e9dd8b1e289a2e8abcfb878b707ea14909b837d17c727a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24E JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x205 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x34D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x35D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A7231582071F508 INVALID CODESIZE 0xC1 SWAP11 PUSH19 0x70E9DD8B1E289A2E8ABCFB878B707EA14909B8 CALLDATACOPY 0xD1 PUSH29 0x727A64736F6C6343000511003200000000000000000000000000000000 ",
							"sourceMap": "12897:538:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12897:538:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8297:127;;;:::i;:::-;;7714:71;;;:::i;:::-;;;;-1:-1:-1;;;;;7714:71:0;;;;;;;;;;;;;;13305:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13305:128:0;-1:-1:-1;;;;;13305:128:0;;:::i;13176:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13176:123:0;-1:-1:-1;;;;;13176:123:0;;:::i;8563:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8563:101:0;-1:-1:-1;;;;;8563:101:0;;:::i;8297:127::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;8391:1;8375:6;;8354:40;;-1:-1:-1;;;;;8375:6:0;;;;8354:40;;8391:1;;8354:40;8417:1;8400:19;;-1:-1:-1;;;;;;8400:19:0;;;8297:127::o;7714:71::-;7752:7;7774:6;-1:-1:-1;;;;;7774:6:0;7714:71;:::o;13305:128::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13365:14:0;;13382:5;13365:14;;;:9;:14;;;;;;:22;;-1:-1:-1;;13365:22:0;;;13411:15;;;13382:5;13411:15;13305:128;:::o;13176:123::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13234:14:0;;;;;;13251:4;13234:14;;;;;;;;:21;;-1:-1:-1;;13234:21:0;;;;;;;13279:13;;;13234:14;13279:13;13176:123;:::o;8563:101::-;7910:12;:10;:12::i;:::-;7900:6;;-1:-1:-1;;;;;7900:6:0;;;:22;;;7892:67;;;;;-1:-1:-1;;;7892:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7892:67:0;;;;;;;;;;;;;;;8631:28;8650:8;8631:18;:28::i;:::-;8563:101;:::o;6459:90::-;6534:10;6459:90;:::o;8757:211::-;-1:-1:-1;;;;;8826:22:0;;8818:73;;;;-1:-1:-1;;;8818:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8923:6;;;8902:38;;-1:-1:-1;;;;;8902:38:0;;;;8923:6;;;8902:38;;;8946:6;:17;;-1:-1:-1;;;;;;8946:17:0;-1:-1:-1;;;;;8946:17:0;;;;;;;;;;8757:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "228800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"lockUser(address)": "infinite",
								"owner()": "1037",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockUser(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "MSTORE"
								},
								{
									"begin": 7531,
									"end": 7548,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "AND"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7551,
									"end": 7563,
									"name": "JUMPDEST"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP1"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP4"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "AND"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP1"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP2"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "OR"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "DUP3"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SSTORE"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "MLOAD"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP3"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7569,
									"end": 7587,
									"name": "SWAP2"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "SWAP1"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "DUP3"
								},
								{
									"begin": 7569,
									"end": 7575,
									"name": "SWAP1"
								},
								{
									"begin": 7598,
									"end": 7641,
									"name": "LOG3"
								},
								{
									"begin": 7501,
									"end": 7646,
									"name": "POP"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "JUMP"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMPDEST"
								},
								{
									"begin": 6534,
									"end": 6544,
									"name": "CALLER"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "SWAP1"
								},
								{
									"begin": 6459,
									"end": 6549,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "JUMPDEST"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "DUP1"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "CODECOPY"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12897,
									"end": 13435,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582071f508fe38c19a7270e9dd8b1e289a2e8abcfb878b707ea14909b837d17c727a64736f6c63430005110032",
									".code": [
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "MSTORE"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "POP"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "LT"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPI"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "SHR"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "DUP1"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "EQ"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPI"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "DUP1"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "EQ"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPI"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "DUP1"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "EQ"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPI"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "DUP1"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "D7972580"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "EQ"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPI"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "DUP1"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "EQ"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPI"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "JUMPDEST"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "DUP1"
										},
										{
											"begin": 12897,
											"end": 13435,
											"name": "REVERT"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "STOP"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "DUP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP3"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "AND"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "DUP3"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "MSTORE"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "MLOAD"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "DUP2"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SUB"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "ADD"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "RETURN"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMPDEST"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "DUP1"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "AND"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMPDEST"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "DUP1"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "AND"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMPDEST"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "DUP1"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "AND"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "DUP1"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SLOAD"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP2"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "AND"
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "SWAP1"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "DUP4"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "SWAP1"
										},
										{
											"begin": 8354,
											"end": 8394,
											"name": "LOG3"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "DUP1"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "AND"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8400,
											"end": 8419,
											"name": "SSTORE"
										},
										{
											"begin": 8297,
											"end": 8424,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMPDEST"
										},
										{
											"begin": 7752,
											"end": 7759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "AND"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "SWAP1"
										},
										{
											"begin": 7714,
											"end": 7785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP2"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "AND"
										},
										{
											"begin": 13382,
											"end": 13387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP2"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP2"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "MSTORE"
										},
										{
											"begin": 13365,
											"end": 13374,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "MSTORE"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP1"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "DUP3"
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "KECCAK256"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "DUP1"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "AND"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SWAP1"
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SSTORE"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "MLOAD"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "PUSH",
											"value": "687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "SWAP2"
										},
										{
											"begin": 13382,
											"end": 13387,
											"name": "SWAP1"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "LOG2"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "POP"
										},
										{
											"begin": 13305,
											"end": 13433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "AND"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "MSTORE"
										},
										{
											"begin": 13251,
											"end": 13255,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "MSTORE"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP1"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "DUP4"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "KECCAK256"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "DUP1"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "AND"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP1"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP3"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "OR"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP1"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SWAP2"
										},
										{
											"begin": 13234,
											"end": 13255,
											"name": "SSTORE"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "MLOAD"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "PUSH",
											"value": "169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "SWAP2"
										},
										{
											"begin": 13234,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "LOG2"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "POP"
										},
										{
											"begin": 13176,
											"end": 13299,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7910,
											"end": 7920,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7910,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "SWAP1"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP2"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP2"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "AND"
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "EQ"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPI"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP3"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MSTORE"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "MLOAD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "DUP2"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SUB"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "ADD"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "SWAP1"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "REVERT"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8650,
											"end": 8658,
											"name": "DUP2"
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8631,
											"end": 8659,
											"name": "JUMPDEST"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "POP"
										},
										{
											"begin": 8563,
											"end": 8664,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "JUMPDEST"
										},
										{
											"begin": 6534,
											"end": 6544,
											"name": "CALLER"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "SWAP1"
										},
										{
											"begin": 6459,
											"end": 6549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8826,
											"end": 8848,
											"name": "DUP2"
										},
										{
											"begin": 8826,
											"end": 8848,
											"name": "AND"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "JUMPI"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP3"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SUB"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP3"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MSTORE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "CODECOPY"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "POP"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "MLOAD"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "DUP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP2"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SUB"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "SWAP1"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "REVERT"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8818,
											"end": 8891,
											"name": "JUMPDEST"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "DUP1"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SLOAD"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "DUP6"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP4"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SWAP3"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "AND"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "LOG3"
										},
										{
											"begin": 8946,
											"end": 8952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "DUP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP3"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP3"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP2"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP2"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "OR"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "SSTORE"
										},
										{
											"begin": 8757,
											"end": 8968,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"lockUser(address)": "d7972580",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unlockUser(address)": "bd1870a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"LockUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"UnlockUser\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"UserLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x89dd5fbc17bba65eb4a6e94d79794fb460ba27b768d9b756d3a4777dd8a34134\",\"urls\":[\"bzz-raw://a82a0047bebc2b7f75a75923ce2f171a737037e9ecca05ad175fc971457ac7b8\",\"dweb:/ipfs/QmdEcxFqn1AEBuLEY1TWsSfjhyuLVSKwU4PZVQJvKtvGsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:UserLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 487,
								"contract": "contracts/4_SmartGTFX.sol:UserLock",
								"label": "blacklist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/4_SmartGTFX.sol": {
				"ast": {
					"absolutePath": "contracts/4_SmartGTFX.sol",
					"exportedSymbols": {
						"ApproveAndCallFallBack": [
							481
						],
						"BEP20Interface": [
							422
						],
						"Context": [
							229
						],
						"GTFX": [
							1692
						],
						"Ownable": [
							335
						],
						"SafeMath": [
							204
						],
						"Tokenlock": [
							469
						],
						"UserLock": [
							545
						]
					},
					"id": 1693,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1353:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 11,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 12,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 10,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															17,
															44
														],
														"referencedDeclaration": 44,
														"src": "1366:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1359:47:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1299:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1298:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1343:9:0"
									},
									"scope": 204,
									"src": "1286:125:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1770:78:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "1776:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1788:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1776:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1812:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1815:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "1799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1799:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1799:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 27,
												"id": 42,
												"nodeType": "Return",
												"src": "1835:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1688:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1699:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1710:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1687:50:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1761:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1760:9:0"
									},
									"scope": 204,
									"src": "1675:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2159:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 54,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2176:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 55,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2179:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 53,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															60,
															87
														],
														"referencedDeclaration": 87,
														"src": "2172:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "2165:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2105:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2116:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2104:22:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2150:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2149:9:0"
									},
									"scope": 204,
									"src": "2092:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2579:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 72,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "2593:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2598:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 75,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2601:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "2585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2585:29:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "2620:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 78,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2632:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2636:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2632:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2620:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 79,
													"src": "2651:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 70,
												"id": 85,
												"nodeType": "Return",
												"src": "2644:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2497:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2508:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2519:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 65,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2519:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2496:50:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2570:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2569:9:0"
									},
									"scope": 204,
									"src": "2484:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2944:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 96,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3160:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3165:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3160:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 102,
												"nodeType": "IfStatement",
												"src": "3156:35:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "3168:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3183:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 95,
															"id": 100,
															"nodeType": "Return",
															"src": "3176:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 120,
														"src": "3197:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 105,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3209:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 106,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3213:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3197:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "3228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "3232:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3228:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3228:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3240:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "3220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3220:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "3220:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 104,
													"src": "3290:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 119,
												"nodeType": "Return",
												"src": "3283:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2890:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2901:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2889:22:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2935:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2934:9:0"
									},
									"scope": 204,
									"src": "2877:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3794:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 131,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3811:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 132,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3814:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3817:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 130,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															164
														],
														"referencedDeclaration": 164,
														"src": "3807:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 135,
												"nodeType": "Return",
												"src": "3800:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3751:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3739:22:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3784:9:0"
									},
									"scope": 204,
									"src": "3727:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4397:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "4473:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4477:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 152,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "4480:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "4465:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4465:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "4465:28:0"
											},
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "4499:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4511:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4499:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "4612:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 162,
												"nodeType": "Return",
												"src": "4605:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4315:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4326:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4337:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4314:50:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4388:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4387:9:0"
									},
									"scope": 204,
									"src": "4302:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "5105:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 174,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5122:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5125:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5128:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 173,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															180,
															203
														],
														"referencedDeclaration": 203,
														"src": "5118:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5118:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 178,
												"nodeType": "Return",
												"src": "5111:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5051:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5062:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5050:22:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5096:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5095:9:0"
									},
									"scope": 204,
									"src": "5038:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5695:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "5709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5714:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5717:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "5701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5701:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "5743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "5747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5743:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "5736:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5624:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5635:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5612:50:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5686:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5685:9:0"
									},
									"scope": 204,
									"src": "5600:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "1061:4694:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6452:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6440:2:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6452:0:0"
									},
									"scope": 229,
									"src": "6428:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "6521:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 213,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6534:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6534:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 212,
												"id": 215,
												"nodeType": "Return",
												"src": "6527:17:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6478:2:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6504:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6503:17:0"
									},
									"scope": 229,
									"src": "6459:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6610:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1723,
													"src": "6616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$229",
														"typeString": "contract Context"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6616:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 224,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6752:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6752:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 221,
												"id": 226,
												"nodeType": "Return",
												"src": "6745:15:0"
											}
										]
									},
									"documentation": null,
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6570:2:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6596:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6596:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6595:14:0"
									},
									"scope": 229,
									"src": "6553:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "6257:510:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 230,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 229,
										"src": "7284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$229",
											"typeString": "contract Context"
										}
									},
									"id": 231,
									"nodeType": "InheritanceSpecifier",
									"src": "7284:7:0"
								}
							],
							"contractDependencies": [
								229
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								229
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 233,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "7296:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 232,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7296:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 239,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7350:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7381:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7349:57:0"
									},
									"src": "7323:84:0"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "7525:121:0",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "7531:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 242,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7531:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 244,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "7551:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7551:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7531:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 247,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7569:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 248,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "7578:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7569:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "7569:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7627:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7619:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 255,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7631:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 251,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "7598:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7598:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "EmitStatement",
												"src": "7593:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 259,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7513:2:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7525:0:0"
									},
									"scope": 335,
									"src": "7501:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7761:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 233,
													"src": "7774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "7767:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7728:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7751:9:0"
									},
									"scope": 335,
									"src": "7714:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "7886:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7900:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 271,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7910:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7910:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7900:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7924:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "7892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "7892:67:0"
											},
											{
												"id": 277,
												"nodeType": "PlaceholderStatement",
												"src": "7965:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 279,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7883:2:0"
									},
									"src": "7865:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "8343:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8391:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8383:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8383:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 284,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8354:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8354:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "EmitStatement",
												"src": "8349:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 291,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "8400:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8417:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8409:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8400:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "8400:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 282,
											"modifierName": {
												"argumentTypes": null,
												"id": 281,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "8333:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8333:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8323:2:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8343:0:0"
									},
									"scope": 335,
									"src": "8297:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8625:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 306,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8650:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 305,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "8631:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8631:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "8631:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 303,
											"modifierName": {
												"argumentTypes": null,
												"id": 302,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "8615:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8615:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8590:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8589:18:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8625:0:0"
									},
									"scope": 335,
									"src": "8563:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "8812:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "8826:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8846:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8838:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8826:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8850:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "8818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8818:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "8818:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 325,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 326,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8931:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 324,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8902:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8902:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "EmitStatement",
												"src": "8897:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 329,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "8946:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "8955:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8946:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8946:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "8785:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8784:18:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8812:0:0"
									},
									"scope": 335,
									"src": "8757:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "7264:1706:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 422,
							"linearizedBaseContracts": [
								422
							],
							"name": "BEP20Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9086:2:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9112:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9111:9:0"
									},
									"scope": 422,
									"src": "9066:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9192:2:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "9218:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9217:7:0"
									},
									"scope": 422,
									"src": "9175:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9292:2:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "9318:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9318:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9317:15:0"
									},
									"scope": 422,
									"src": "9277:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9394:2:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9420:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9419:15:0"
									},
									"scope": 422,
									"src": "9381:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9507:2:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9532:9:0"
									},
									"scope": 422,
									"src": "9490:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9636:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9635:17:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9676:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9675:9:0"
									},
									"scope": 422,
									"src": "9617:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9907:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9926:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9906:35:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9960:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9959:6:0"
									},
									"scope": 422,
									"src": "9889:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10260:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10243:33:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10300:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10299:9:0"
									},
									"scope": 422,
									"src": "10225:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10966:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10948:33:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "11000:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11000:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10999:6:0"
									},
									"scope": 422,
									"src": "10932:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11315:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11331:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11350:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11314:51:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11384:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11383:6:0"
									},
									"scope": 422,
									"src": "11293:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 413,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11560:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11582:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11602:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11559:57:0"
									},
									"src": "11545:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 421,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11781:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11804:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11780:63:0"
									},
									"src": "11766:78:0"
								}
							],
							"scope": 1693,
							"src": "8972:2874:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 423,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "11870:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$335",
											"typeString": "contract Ownable"
										}
									},
									"id": 424,
									"nodeType": "InheritanceSpecifier",
									"src": "11870:7:0"
								}
							],
							"contractDependencies": [
								229,
								335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469,
								335,
								229
							],
							"name": "Tokenlock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 427,
									"name": "isLocked",
									"nodeType": "VariableDeclaration",
									"scope": 469,
									"src": "11929:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 425,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11929:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11946:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 429,
									"name": "Freezed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11967:2:0"
									},
									"src": "11954:16:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 431,
									"name": "UnFreezed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11990:2:0"
									},
									"src": "11975:18:0"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12018:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "isLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "12036:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12048:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12036:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e206973206c6f636b6564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12051:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc",
																"typeString": "literal_string \"Token is locked\""
															},
															"value": "Token is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc",
																"typeString": "literal_string \"Token is locked\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "12028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12028:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "12028:41:0"
											},
											{
												"id": 440,
												"nodeType": "PlaceholderStatement",
												"src": "12079:1:0"
											}
										]
									},
									"documentation": null,
									"id": 442,
									"name": "validLock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12018:0:0"
									},
									"src": "11999:88:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "12132:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "isLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12142:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12153:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12142:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "12142:12:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "Freezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "12178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12178:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "12173:14:0"
											}
										]
									},
									"documentation": null,
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 445,
											"modifierName": {
												"argumentTypes": null,
												"id": 444,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12122:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12122:9:0"
										}
									],
									"name": "freeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12112:2:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12132:0:0"
									},
									"scope": 469,
									"src": "12097:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "12237:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "isLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12247:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12258:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12247:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12247:12:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "UnFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "12283:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12283:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "EmitStatement",
												"src": "12278:16:0"
											}
										]
									},
									"documentation": null,
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 458,
											"modifierName": {
												"argumentTypes": null,
												"id": 457,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12227:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12227:9:0"
										}
									],
									"name": "unfreeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12217:2:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12237:0:0"
									},
									"scope": 469,
									"src": "12200:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "11848:455:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 481,
							"linearizedBaseContracts": [
								481
							],
							"name": "ApproveAndCallFallBack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12664:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12679:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12679:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12633:64:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12704:0:0"
									},
									"scope": 481,
									"src": "12609:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "12571:136:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 482,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "12918:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$335",
											"typeString": "contract Ownable"
										}
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "12918:7:0"
								}
							],
							"contractDependencies": [
								229,
								335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545,
								335,
								229
							],
							"name": "UserLock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 487,
									"name": "blacklist",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "12932:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 486,
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12940:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12932:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 485,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "12951:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 491,
									"name": "LockUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "12996:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12995:21:0"
									},
									"src": "12981:36:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 495,
									"name": "UnlockUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "13039:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13038:21:0"
									},
									"src": "13022:38:0"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "13091:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "13109:22:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 498,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "13110:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "13120:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13120:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13110:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426c6f636b65642075736572",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13133:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bdb92a57ecffe6ca16cf18b3af53652b4050f8c932a93a989fb44d81102ba57",
																"typeString": "literal_string \"Blocked user\""
															},
															"value": "Blocked user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bdb92a57ecffe6ca16cf18b3af53652b4050f8c932a93a989fb44d81102ba57",
																"typeString": "literal_string \"Blocked user\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "13101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13101:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "13101:47:0"
											},
											{
												"id": 506,
												"nodeType": "PlaceholderStatement",
												"src": "13158:1:0"
											}
										]
									},
									"documentation": null,
									"id": 508,
									"name": "permissionCheck",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13091:0:0"
									},
									"src": "13066:100:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "13224:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "13234:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "13244:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13234:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13251:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13234:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "13234:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 522,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "13288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 521,
														"name": "LockUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "13279:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13279:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "13274:18:0"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 513,
											"modifierName": {
												"argumentTypes": null,
												"id": 512,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "13214:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13214:9:0"
										}
									],
									"name": "lockUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "13194:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13193:13:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13224:0:0"
									},
									"scope": 545,
									"src": "13176:123:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "13355:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 533,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "13365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 535,
														"indexExpression": {
															"argumentTypes": null,
															"id": 534,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13375:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13365:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13382:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13365:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "13365:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 540,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13422:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "UnlockUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "13411:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13411:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "13406:20:0"
											}
										]
									},
									"documentation": null,
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 531,
											"modifierName": {
												"argumentTypes": null,
												"id": 530,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "13345:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13345:9:0"
										}
									],
									"name": "unlockUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "13325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13324:13:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13355:0:0"
									},
									"scope": 545,
									"src": "13305:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "12897:538:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 546,
										"name": "BEP20Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 422,
										"src": "13454:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BEP20Interface_$422",
											"typeString": "contract BEP20Interface"
										}
									},
									"id": 547,
									"nodeType": "InheritanceSpecifier",
									"src": "13454:14:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 548,
										"name": "Tokenlock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 469,
										"src": "13470:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Tokenlock_$469",
											"typeString": "contract Tokenlock"
										}
									},
									"id": 549,
									"nodeType": "InheritanceSpecifier",
									"src": "13470:9:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 550,
										"name": "UserLock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 545,
										"src": "13481:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UserLock_$545",
											"typeString": "contract UserLock"
										}
									},
									"id": 551,
									"nodeType": "InheritanceSpecifier",
									"src": "13481:8:0"
								}
							],
							"contractDependencies": [
								229,
								335,
								422,
								469,
								545
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								545,
								469,
								335,
								229,
								422
							],
							"name": "GTFX",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 554,
									"libraryName": {
										"contractScope": null,
										"id": 552,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 204,
										"src": "13502:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$204",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "13496:27:0",
									"typeName": {
										"id": 553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13515:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 558,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13596:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 557,
										"keyType": {
											"id": 555,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13605:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13596:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 556,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13616:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 564,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13703:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 563,
										"keyType": {
											"id": 559,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13712:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13703:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 562,
											"keyType": {
												"id": 560,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13732:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "13723:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 561,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13743:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 566,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13833:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13833:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 568,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13921:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 567,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "13921:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 570,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14002:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 569,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14002:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 572,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14080:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 571,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14080:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 576,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14158:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 575,
										"keyType": {
											"id": 573,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14167:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14158:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 574,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14178:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "GTFX.Checkpoint",
									"id": 581,
									"members": [
										{
											"constant": false,
											"id": 578,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 581,
											"src": "14314:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 577,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "14314:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 580,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 581,
											"src": "14340:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 579,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "14340:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1692,
									"src": "14286:74:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 587,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14439:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))"
									},
									"typeName": {
										"id": 586,
										"keyType": {
											"id": 582,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14448:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14439:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))"
										},
										"valueType": {
											"id": 585,
											"keyType": {
												"id": 583,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "14468:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "14459:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
												"typeString": "mapping(uint32 => struct GTFX.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 584,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 581,
												"src": "14478:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$581_storage_ptr",
													"typeString": "struct GTFX.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 591,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14575:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 590,
										"keyType": {
											"id": 588,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14584:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14575:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 589,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "14595:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 596,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14694:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 592,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 594,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14746:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 593,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1701,
											"src": "14736:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 595,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14736:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 601,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14907:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 597,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14907:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 599,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14963:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 598,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1701,
											"src": "14953:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 600,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14953:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 605,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "15102:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 604,
										"keyType": {
											"id": 602,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15102:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 603,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 613,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15249:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15276:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15306:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15248:85:0"
									},
									"src": "15227:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 621,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15453:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15479:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15504:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15452:71:0"
									},
									"src": "15426:98:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard BEP-20 transfer event",
									"id": 629,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15596:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15618:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15638:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15595:58:0"
									},
									"src": "15581:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard BEP-20 approval event",
									"id": 637,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15726:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15749:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15774:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15725:64:0"
									},
									"src": "15711:79:0"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "15964:240:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 642,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15974:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "47697473686f636b2046696e616e636520546573746e6574",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15982:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3c84f5804bd650ef7c490921c6272b0e7a9fad9cb5919875bc9a07b9897ed799",
															"typeString": "literal_string \"Gitshock Finance Testnet\""
														},
														"value": "Gitshock Finance Testnet"
													},
													"src": "15974:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "15974:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 646,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "16018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "7447544658",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16028:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_39134a984f253f4a6a9831dbbe46d173e22941e3158f0d6292450d2d23b0765c",
															"typeString": "literal_string \"tGTFX\""
														},
														"value": "tGTFX"
													},
													"src": "16018:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "16018:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 650,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "16045:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16057:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "16045:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "16045:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 654,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "16069:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3530303030303030653138",
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16084:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
															"typeString": "int_const 50000000000000000000000000"
														},
														"value": "50000000e18"
													},
													"src": "16069:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "16069:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 658,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "16105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 660,
														"indexExpression": {
															"argumentTypes": null,
															"id": 659,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "16115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16105:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 661,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "16126:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16105:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "16105:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16171:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16163:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "16175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 669,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "16184:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "16154:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16154:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "EmitStatement",
												"src": "16149:48:0"
											}
										]
									},
									"documentation": "@notice Construct a new GTFX Testnet token\n@param account The initial account to grant all the tokens",
									"id": 673,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "15940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15939:17:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15964:0:0"
									},
									"scope": 1692,
									"src": "15928:276:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16318:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 678,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "16335:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 677,
												"id": 680,
												"nodeType": "Return",
												"src": "16328:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16283:2:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16309:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16308:9:0"
									},
									"scope": 1692,
									"src": "16266:83:0",
									"stateMutability": "view",
									"superFunction": 360,
									"visibility": "external"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "16460:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 687,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "16477:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 686,
												"id": 688,
												"nodeType": "Return",
												"src": "16470:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16427:2:0"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "16453:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16452:7:0"
									},
									"scope": 1692,
									"src": "16410:83:0",
									"stateMutability": "view",
									"superFunction": 345,
									"visibility": "external"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "16608:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 695,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 570,
													"src": "16625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 694,
												"id": 696,
												"nodeType": "Return",
												"src": "16618:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16567:2:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "16593:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 692,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16592:15:0"
									},
									"scope": 1692,
									"src": "16552:87:0",
									"stateMutability": "view",
									"superFunction": 350,
									"visibility": "external"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "16750:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 703,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 572,
													"src": "16767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "16760:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16709:2:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "16735:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16735:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16734:15:0"
									},
									"scope": 1692,
									"src": "16696:83:0",
									"stateMutability": "view",
									"superFunction": 355,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "16893:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 711,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 566,
													"src": "16910:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 712,
												"nodeType": "Return",
												"src": "16903:19:0"
											}
										]
									},
									"documentation": "@dev Returns the total supply.",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16858:2:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "16884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16883:9:0"
									},
									"scope": 1692,
									"src": "16838:91:0",
									"stateMutability": "view",
									"superFunction": 340,
									"visibility": "external"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "17193:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 721,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "17210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 723,
													"indexExpression": {
														"argumentTypes": null,
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "17220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17210:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 724,
												"nodeType": "Return",
												"src": "17203:25:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "17144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17143:17:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "17184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17183:9:0"
									},
									"scope": 1692,
									"src": "17125:110:0",
									"stateMutability": "view",
									"superFunction": 367,
									"visibility": "external"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "17597:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 740,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "17617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17617:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 742,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "17631:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17642:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "17607:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17607:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "17607:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17666:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 738,
												"id": 747,
												"nodeType": "Return",
												"src": "17659:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param recipient The address of the destination account\n@param amount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 733,
											"modifierName": {
												"argumentTypes": null,
												"id": 732,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "17556:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17556:9:0"
										},
										{
											"arguments": null,
											"id": 735,
											"modifierName": {
												"argumentTypes": null,
												"id": 734,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "17566:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17566:15:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17512:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17531:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17511:35:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17590:6:0"
									},
									"scope": 1692,
									"src": "17494:183:0",
									"stateMutability": "nonpayable",
									"superFunction": 376,
									"visibility": "external"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "18054:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "18071:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "18083:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18071:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"argumentTypes": null,
														"id": 761,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "18090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18071:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "18064:34:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param owner The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "17990:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "18005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17989:32:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "18045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18044:9:0"
									},
									"scope": 1692,
									"src": "17971:134:0",
									"stateMutability": "view",
									"superFunction": 385,
									"visibility": "external"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "18577:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 779,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "18596:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18596:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 781,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "18610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "18619:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "18587:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18587:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "18587:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18643:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 777,
												"id": 786,
												"nodeType": "Return",
												"src": "18636:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n@param spender The address of the account which may transfer tokens\n@param amount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 772,
											"modifierName": {
												"argumentTypes": null,
												"id": 771,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "18536:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18536:9:0"
										},
										{
											"arguments": null,
											"id": 774,
											"modifierName": {
												"argumentTypes": null,
												"id": 773,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "18546:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18546:15:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18494:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18493:33:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18571:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18570:6:0"
									},
									"scope": 1692,
									"src": "18477:177:0",
									"stateMutability": "nonpayable",
									"superFunction": 394,
									"visibility": "external"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "19059:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 804,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "19078:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19078:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 806,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "19092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "19101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 803,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "19069:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19069:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "19069:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 814,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "19166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19166:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "19180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "19196:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GTFX_$1692",
																		"typeString": "contract GTFX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GTFX_$1692",
																		"typeString": "contract GTFX"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19188:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19188:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 820,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "19203:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 811,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "19141:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 810,
																"name": "ApproveAndCallFallBack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "19118:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ApproveAndCallFallBack_$481_$",
																	"typeString": "type(contract ApproveAndCallFallBack)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19118:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ApproveAndCallFallBack_$481",
																"typeString": "contract ApproveAndCallFallBack"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "receiveApproval",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "19118:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,address,bytes memory) external"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19118:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "19118:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19225:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 802,
												"id": 824,
												"nodeType": "Return",
												"src": "19218:11:0"
											}
										]
									},
									"documentation": "@notice Approve the spender to transferFrom(...) with the amount.\n@dev receiveApproval(...) is executed.\n@param amount The number of tokens that are approved\n@param data The data to pass to receiveApproval(...)\n@return true",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 797,
											"modifierName": {
												"argumentTypes": null,
												"id": 796,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "19018:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19018:9:0"
										},
										{
											"arguments": null,
											"id": 799,
											"modifierName": {
												"argumentTypes": null,
												"id": 798,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "19028:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19028:15:0"
										}
									],
									"name": "approveAndCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18976:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18992:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18958:52:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19052:6:0"
									},
									"scope": 1692,
									"src": "18935:301:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "19666:346:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 842,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "19686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "19694:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 844,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "19705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "19676:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19676:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "19676:36:0"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "19722:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 847,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19722:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 849,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "19740:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19740:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19722:30:0"
											},
											{
												"assignments": [
													853
												],
												"declarations": [
													{
														"constant": false,
														"id": 853,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "19762:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19762:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 854,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "19789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 856,
														"indexExpression": {
															"argumentTypes": null,
															"id": 855,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "19801:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19789:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 858,
													"indexExpression": {
														"argumentTypes": null,
														"id": 857,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "19809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19789:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19762:55:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 860,
														"name": "spenderAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "19831:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "19859:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19860:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19851:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19831:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 877,
												"nodeType": "IfStatement",
												"src": "19827:158:0",
												"trueBody": {
													"id": 876,
													"nodeType": "Block",
													"src": "19864:121:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "19887:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "19895:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 871,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "19925:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19933:39:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1",
																					"typeString": "literal_string \"The transfer amount exceeds allowance\""
																				},
																				"value": "The transfer amount exceeds allowance"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1",
																					"typeString": "literal_string \"The transfer amount exceeds allowance\""
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 869,
																				"name": "spenderAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "19904:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 87,
																			"src": "19904:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19904:69:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 866,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "19878:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19878:96:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 875,
															"nodeType": "ExpressionStatement",
															"src": "19878:96:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20001:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 879,
												"nodeType": "Return",
												"src": "19994:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param sender The address of the source account\n@param recipient The address of the destination account\n@param amount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 835,
											"modifierName": {
												"argumentTypes": null,
												"id": 834,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "19625:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19625:9:0"
										},
										{
											"arguments": null,
											"id": 837,
											"modifierName": {
												"argumentTypes": null,
												"id": 836,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "19635:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19635:15:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19565:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19581:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19564:51:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19660:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19659:6:0"
									},
									"scope": 1692,
									"src": "19543:469:0",
									"stateMutability": "nonpayable",
									"superFunction": 405,
									"visibility": "external"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "20575:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "20594:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20594:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 897,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "20608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 905,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "20656:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20668:35:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77",
																		"typeString": "literal_string \"The increased allowance overflows\""
																	},
																	"value": "The increased allowance overflows"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77",
																		"typeString": "literal_string \"The increased allowance overflows\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 898,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "20617:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 901,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 899,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "20629:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20629:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20617:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 903,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 902,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "20643:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20617:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "20617:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20617:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "20585:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20585:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "20585:120:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20722:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 893,
												"id": 911,
												"nodeType": "Return",
												"src": "20715:11:0"
											}
										]
									},
									"documentation": "@notice Atomically increases the allowance granted to `spender` by the caller\n@dev This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n@param spender The address of the account which may transfer tokens\n@param addedValue The additional number of tokens to allow which may be spent\n@return Whether or not the approval succeeded",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 888,
											"modifierName": {
												"argumentTypes": null,
												"id": 887,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "20534:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20534:9:0"
										},
										{
											"arguments": null,
											"id": 890,
											"modifierName": {
												"argumentTypes": null,
												"id": 889,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "20544:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20544:15:0"
										}
									],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20489:37:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20569:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20568:6:0"
									},
									"scope": 1692,
									"src": "20463:270:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "21309:164:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 927,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "21328:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21328:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 929,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "21342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 937,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "21390:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21407:36:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b",
																		"typeString": "literal_string \"The decreased allowance below zero\""
																	},
																	"value": "The decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b",
																		"typeString": "literal_string \"The decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 930,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "21351:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 933,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 931,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "21363:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21363:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21351:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 935,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 934,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "21377:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21351:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 87,
																"src": "21351:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21351:93:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "21319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21319:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "21319:126:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21462:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 925,
												"id": 943,
												"nodeType": "Return",
												"src": "21455:11:0"
											}
										]
									},
									"documentation": "@notice Atomically increases the allowance granted to `spender` by the caller\n@dev This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n@param spender The address of the account which may transfer tokens\n@param subtractedValue The subtractional number of tokens to allow which may be spent\n@return Whether or not the approval succeeded",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 920,
											"modifierName": {
												"argumentTypes": null,
												"id": 919,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "21268:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21268:9:0"
										},
										{
											"arguments": null,
											"id": 922,
											"modifierName": {
												"argumentTypes": null,
												"id": 921,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "21278:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21278:15:0"
										}
									],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21236:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21218:42:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21303:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21303:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21302:6:0"
									},
									"scope": 1692,
									"src": "21192:281:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "21805:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 957,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "21821:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21821:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 959,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "21835:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "21815:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21815:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "21815:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21859:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 955,
												"id": 963,
												"nodeType": "Return",
												"src": "21852:11:0"
											}
										]
									},
									"documentation": "@notice Destroy the amount of tokens from the sender, reducing the total supply.\n@dev The amount must be greater than balance, total supply.\n@param amount The number of tokens that are burnt\n@return true",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 950,
											"modifierName": {
												"argumentTypes": null,
												"id": 949,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "21764:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21764:9:0"
										},
										{
											"arguments": null,
											"id": 952,
											"modifierName": {
												"argumentTypes": null,
												"id": 951,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "21774:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21774:15:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "21741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21740:16:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "21799:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21799:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21798:6:0"
									},
									"scope": 1692,
									"src": "21727:143:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "22082:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 975,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "22109:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22109:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 977,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "22123:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 974,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "22099:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22099:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 973,
												"id": 979,
												"nodeType": "Return",
												"src": "22092:41:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 970,
											"modifierName": {
												"argumentTypes": null,
												"id": 969,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "22056:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22056:9:0"
										},
										{
											"arguments": null,
											"id": 972,
											"modifierName": {
												"argumentTypes": null,
												"id": 971,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "22066:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22066:15:0"
										}
									],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "22030:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22029:19:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22082:0:0"
									},
									"scope": 1692,
									"src": "22012:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "22700:617:0",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22710:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1005,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "22757:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1008,
																					"name": "_name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 572,
																					"src": "22790:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22784:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22784:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 1006,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "22774:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22774:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1011,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "22799:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22799:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1014,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "22821:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GTFX_$1692",
																				"typeString": "contract GTFX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GTFX_$1692",
																				"typeString": "contract GTFX"
																			}
																		],
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22813:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22813:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1003,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22746:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22746:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22746:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1002,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22736:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22736:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22710:118:0"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22838:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1019,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "22880:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "22901:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "22912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "22919:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1022,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22869:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22869:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22869:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1021,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22859:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22859:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22838:89:0"
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22937:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1031,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22981:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1037,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "22993:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1038,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "23010:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1034,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22964:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22964:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22964:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1033,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22954:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22954:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22937:85:0"
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "23032:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1042,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23032:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1045,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "23062:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1046,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "23070:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "23073:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "23076:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1044,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "23052:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23052:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23032:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1052,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "23096:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23117:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23109:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23109:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23096:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23121:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23088:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "23088:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1061,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "23159:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "23168:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1062,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "23168:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1064,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1063,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "23175:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23168:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23159:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964206e6f6e6365",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23189:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															},
															"value": "Invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23151:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "23151:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1071,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "23223:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1072,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "23230:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23223:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546865207369676e61747572652065787069726564",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23238:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1d9a76268658ade1712ae55619bc1c81b967bd0e64856fe24b40acc468a5cb5",
																"typeString": "literal_string \"The signature expired\""
															},
															"value": "The signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1d9a76268658ade1712ae55619bc1c81b967bd0e64856fe24b40acc468a5cb5",
																"typeString": "literal_string \"The signature expired\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23215:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "23215:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1078,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "23289:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "23300:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1077,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "23279:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23279:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 999,
												"id": 1081,
												"nodeType": "Return",
												"src": "23272:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 996,
											"modifierName": {
												"argumentTypes": null,
												"id": 995,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "22674:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22674:9:0"
										},
										{
											"arguments": null,
											"id": 998,
											"modifierName": {
												"argumentTypes": null,
												"id": 997,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "22684:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22684:15:0"
										}
									],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22586:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22605:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22636:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 988,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22645:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22585:81:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22700:0:0"
									},
									"scope": 1692,
									"src": "22563:754:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "23584:154:0",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "23594:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1090,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "23594:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1092,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "23616:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1094,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1093,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "23631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23616:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23594:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1096,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "23656:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23671:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23656:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23730:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "23656:75:0",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1100,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "23682:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																			}
																		},
																		"id": 1102,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1101,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "23694:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23682:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																			"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																		}
																	},
																	"id": 1106,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1103,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "23703:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23718:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23703:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23682:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																		"typeString": "struct GTFX.Checkpoint storage ref"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 580,
																"src": "23682:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1099,
															"name": "ceil96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "23675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																"typeString": "function (uint256) pure returns (uint96)"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23675:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1111,
												"nodeType": "Return",
												"src": "23649:82:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "23536:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23535:17:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "23576:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1087,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23576:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23575:8:0"
									},
									"scope": 1692,
									"src": "23511:227:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "24250:1102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1123,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "24268:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1124,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "24282:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "24282:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24268:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f742064657465726d696e656420796574",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24296:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94bcc40f99be07541a5d79a2a91efe41b164b4c8c044ddc355f1854a6163b3ee",
																"typeString": "literal_string \"Not determined yet\""
															},
															"value": "Not determined yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94bcc40f99be07541a5d79a2a91efe41b164b4c8c044ddc355f1854a6163b3ee",
																"typeString": "literal_string \"Not determined yet\""
															}
														],
														"id": 1122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "24260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24260:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "24260:57:0"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24328:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1130,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24328:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1132,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "24350:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1134,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1133,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "24365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24350:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24328:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1136,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "24387:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24403:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24387:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "24383:56:0",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "24406:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24427:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1140,
															"nodeType": "Return",
															"src": "24420:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1143,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "24496:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																	}
																},
																"id": 1145,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1144,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24508:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24496:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																	"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																}
															},
															"id": 1149,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1146,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "24517:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24532:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24517:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24496:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																"typeString": "struct GTFX.Checkpoint storage ref"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "24496:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "24548:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24496:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "24492:153:0",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "24561:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1154,
																					"name": "checkpoints",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "24589:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																						"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																					}
																				},
																				"id": 1156,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1155,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "24601:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "24589:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																					"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1157,
																					"name": "nCheckpoints",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "24610:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24625:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24610:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24589:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																				"typeString": "struct GTFX.Checkpoint storage ref"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "votes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "24589:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1153,
																	"name": "ceil96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "24582:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																		"typeString": "function (uint256) pure returns (uint96)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24582:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1121,
															"id": 1163,
															"nodeType": "Return",
															"src": "24575:59:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1166,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "24703:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																	}
																},
																"id": 1168,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1167,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24715:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24703:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																	"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																}
															},
															"id": 1170,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24724:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24703:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																"typeString": "struct GTFX.Checkpoint storage ref"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "24703:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1172,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "24739:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24703:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "24699:86:0",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "24752:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24773:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1175,
															"nodeType": "Return",
															"src": "24766:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24795:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1178,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24810:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24795:16:0"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24821:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1182,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1184,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "24836:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24851:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "24836:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24821:31:0"
											},
											{
												"body": {
													"id": 1238,
													"nodeType": "Block",
													"src": "24884:404:0",
													"statements": [
														{
															"assignments": [
																1192
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1192,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "24898:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1191,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "24898:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1201,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "24914:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1194,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "24923:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1195,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "24931:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "24923:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "24922:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24940:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "24922:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "24914:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24898:43:0"
														},
														{
															"assignments": [
																1203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1203,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "24982:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																		"typeString": "struct GTFX.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1202,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 581,
																		"src": "24982:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_storage_ptr",
																			"typeString": "struct GTFX.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1209,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1204,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "25005:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1206,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1205,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "25017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25005:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1208,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "25026:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25005:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24982:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1210,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "25051:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																			"typeString": "struct GTFX.Checkpoint memory"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "25051:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1212,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "25067:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25051:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1220,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "25146:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																				"typeString": "struct GTFX.Checkpoint memory"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 578,
																		"src": "25146:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1222,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "25161:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25146:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1235,
																	"nodeType": "Block",
																	"src": "25227:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1229,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "25245:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1230,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "25253:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25262:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "25253:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "25245:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1234,
																			"nodeType": "ExpressionStatement",
																			"src": "25245:18:0"
																		}
																	]
																},
																"id": 1236,
																"nodeType": "IfStatement",
																"src": "25142:136:0",
																"trueBody": {
																	"id": 1228,
																	"nodeType": "Block",
																	"src": "25174:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1224,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "25192:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1225,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "25200:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "25192:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1227,
																			"nodeType": "ExpressionStatement",
																			"src": "25192:14:0"
																		}
																	]
																}
															},
															"id": 1237,
															"nodeType": "IfStatement",
															"src": "25047:231:0",
															"trueBody": {
																"id": 1219,
																"nodeType": "Block",
																"src": "25080:56:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1215,
																						"name": "cp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1203,
																						"src": "25112:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																							"typeString": "struct GTFX.Checkpoint memory"
																						}
																					},
																					"id": 1216,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "votes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 580,
																					"src": "25112:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1214,
																				"name": "ceil96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1679,
																				"src": "25105:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																					"typeString": "function (uint256) pure returns (uint96)"
																				}
																			},
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25105:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 1121,
																		"id": 1218,
																		"nodeType": "Return",
																		"src": "25098:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1188,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "24869:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1189,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "24877:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "24869:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "WhileStatement",
												"src": "24862:426:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1241,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "25311:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "25323:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25311:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1245,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "lower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "25332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25311:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 580,
															"src": "25311:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"name": "ceil96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "25304:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
															"typeString": "function (uint256) pure returns (uint96)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25304:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1248,
												"nodeType": "Return",
												"src": "25297:48:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24200:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24182:38:0"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24242:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1119,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24242:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24241:8:0"
									},
									"scope": 1692,
									"src": "24160:1192:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "25437:481:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1260,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "25455:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25473:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25465:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25455:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25477:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e",
																"typeString": "literal_string \"Cannot transfer from the zero address\""
															},
															"value": "Cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e",
																"typeString": "literal_string \"Cannot transfer from the zero address\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25447:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "25447:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1269,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "25535:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25556:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25548:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25535:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25560:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288",
																"typeString": "literal_string \"Cannot transfer to the zero address\""
															},
															"value": "Cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288",
																"typeString": "literal_string \"Cannot transfer to the zero address\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25527:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "25527:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1277,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "25609:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1279,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1278,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "25619:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25609:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1284,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "25651:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25659:37:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973",
																	"typeString": "literal_string \"The transfer amount exceeds balance\""
																},
																"value": "The transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973",
																	"typeString": "literal_string \"The transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1280,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "25629:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1282,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1281,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "25639:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25629:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "25629:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25629:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25609:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "25609:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1289,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "25707:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1290,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "25717:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25707:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1296,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "25755:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "5468652062616c616e6365206f766572666c6f7773",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25763:23:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e23656289b2eecf3e78812941d89fa3002f128c9e67944734781eb836c5cdbbc",
																	"typeString": "literal_string \"The balance overflows\""
																},
																"value": "The balance overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_e23656289b2eecf3e78812941d89fa3002f128c9e67944734781eb836c5cdbbc",
																	"typeString": "literal_string \"The balance overflows\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1292,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "25730:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1294,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1293,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "25740:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25730:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "25730:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25730:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25707:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "25707:80:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1302,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "25811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1303,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "25819:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1304,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "25830:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "25802:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25802:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "EmitStatement",
												"src": "25797:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1308,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "25863:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1310,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "25873:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25863:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1311,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "25882:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1313,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1312,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "25892:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25882:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "25904:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "25848:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25848:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "25848:63:0"
											}
										]
									},
									"documentation": null,
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25377:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25393:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25412:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25376:51:0"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25437:0:0"
									},
									"scope": 1692,
									"src": "25358:560:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "25999:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1328,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "26017:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26034:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26026:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26026:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26017:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26038:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d",
																"typeString": "literal_string \"Cannot approve from the zero address\""
															},
															"value": "Cannot approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d",
																"typeString": "literal_string \"Cannot approve from the zero address\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26009:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "26009:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1337,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "26095:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26114:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26106:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26106:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26095:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26118:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9",
																"typeString": "literal_string \"Cannot approve to the zero address\""
															},
															"value": "Cannot approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9",
																"typeString": "literal_string \"Cannot approve to the zero address\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26087:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26087:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "26087:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1345,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "26166:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1348,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1346,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "26178:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26166:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1349,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1347,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "26185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26166:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "26196:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26166:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "26166:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1354,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "26226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1355,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "26233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "26242:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1353,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															637
														],
														"referencedDeclaration": 637,
														"src": "26217:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26217:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "26212:37:0"
											}
										]
									},
									"documentation": null,
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25942:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25941:48:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25999:0:0"
									},
									"scope": 1692,
									"src": "25924:332:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "26319:347:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1368,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "26337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26356:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26348:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26348:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26337:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26360:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee",
																"typeString": "literal_string \"Cannot burn from the zero address\""
															},
															"value": "Cannot burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee",
																"typeString": "literal_string \"Cannot burn from the zero address\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26329:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "26329:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1376,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "26407:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26407:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1383,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "26451:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "546865206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26459:33:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1436b54442dad08301b59754c3ac41db1c7a4ad42f2d6ba2cd9d1cde8999d74f",
																	"typeString": "literal_string \"The burn amount exceeds balance\""
																},
																"value": "The burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_1436b54442dad08301b59754c3ac41db1c7a4ad42f2d6ba2cd9d1cde8999d74f",
																	"typeString": "literal_string \"The burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1379,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "26428:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1381,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1380,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "26438:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26428:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "26428:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26428:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26407:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "26407:86:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1388,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "26503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "26535:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1389,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "26518:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "26518:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26518:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26503:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "26503:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26566:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26583:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26575:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26575:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "26587:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "26557:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26557:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "EmitStatement",
												"src": "26552:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1404,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "26620:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1406,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "26630:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26620:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26648:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26640:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26640:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "26652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "26605:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26605:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "26605:54:0"
											}
										]
									},
									"documentation": null,
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "26277:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "26294:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26276:33:0"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26319:0:0"
									},
									"scope": 1692,
									"src": "26262:404:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "26738:303:0",
										"statements": [
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "26748:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1421,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26748:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1423,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "26774:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1425,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1424,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "26784:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26774:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26748:46:0"
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "26804:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1429,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "26831:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1431,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1430,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "26841:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26831:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26804:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1433,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "26861:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1435,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1434,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "26871:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26861:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1436,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "26884:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26861:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "26861:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1440,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "26925:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1441,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26936:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1442,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "26953:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1439,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "26909:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26909:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "EmitStatement",
												"src": "26904:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1446,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26989:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1447,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "27006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1448,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "27017:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "26974:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26974:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "26974:60:0"
											}
										]
									},
									"documentation": null,
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "26691:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "26710:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26690:38:0"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26738:0:0"
									},
									"scope": 1692,
									"src": "26672:369:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "27128:813:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "27142:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1462,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "27152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "27142:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1464,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "27162:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27171:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27162:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27142:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "27138:797:0",
												"trueBody": {
													"id": 1556,
													"nodeType": "Block",
													"src": "27174:761:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1468,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "27192:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27210:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27202:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27202:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27192:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1511,
															"nodeType": "IfStatement",
															"src": "27188:362:0",
															"trueBody": {
																"id": 1510,
																"nodeType": "Block",
																"src": "27214:336:0",
																"statements": [
																	{
																		"assignments": [
																			1474
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1474,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27232:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1473,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "27232:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1478,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1475,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "27251:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1477,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1476,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "27266:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27251:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27232:41:0"
																	},
																	{
																		"assignments": [
																			1480
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1480,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27291:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1479,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27291:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1494,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1481,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "27311:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27323:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "27311:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27370:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "27311:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1484,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "27327:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																							}
																						},
																						"id": 1486,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1485,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1454,
																							"src": "27339:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "27327:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																							"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																						}
																					},
																					"id": 1490,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1487,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1474,
																							"src": "27347:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27359:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "27347:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27327:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																						"typeString": "struct GTFX.Checkpoint storage ref"
																					}
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "27327:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27291:80:0"
																	},
																	{
																		"assignments": [
																			1496
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1496,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27389:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1495,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27389:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1502,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1499,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "27423:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "54686520766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 1500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27431:28:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3febcc9d75a89ca64329c84ad05c5c32a433f1ccbf52201013f067d187d2f481",
																						"typeString": "literal_string \"The vote amount underflows\""
																					},
																					"value": "The vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3febcc9d75a89ca64329c84ad05c5c32a433f1ccbf52201013f067d187d2f481",
																						"typeString": "literal_string \"The vote amount underflows\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1497,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "27409:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 87,
																				"src": "27409:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27409:51:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27389:71:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1504,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "27495:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1505,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "27503:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1506,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "27514:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1507,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1496,
																					"src": "27525:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1503,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "27478:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27478:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1509,
																		"nodeType": "ExpressionStatement",
																		"src": "27478:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "27568:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27586:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27578:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27578:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27568:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1555,
															"nodeType": "IfStatement",
															"src": "27564:361:0",
															"trueBody": {
																"id": 1554,
																"nodeType": "Block",
																"src": "27590:335:0",
																"statements": [
																	{
																		"assignments": [
																			1518
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1518,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27608:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1517,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "27608:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1522,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1519,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "27627:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1521,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1520,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "27642:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27627:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27608:41:0"
																	},
																	{
																		"assignments": [
																			1524
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1524,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27667:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1523,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27667:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1538,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1525,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "27687:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27699:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "27687:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27746:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "27687:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1528,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "27703:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																							}
																						},
																						"id": 1530,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1529,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1456,
																							"src": "27715:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "27703:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																							"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																						}
																					},
																					"id": 1534,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1531,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1518,
																							"src": "27723:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27735:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "27723:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27703:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																						"typeString": "struct GTFX.Checkpoint storage ref"
																					}
																				},
																				"id": 1535,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "27703:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27667:80:0"
																	},
																	{
																		"assignments": [
																			1540
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1540,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27765:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1539,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27765:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1546,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1543,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "27799:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "54686520766f746520616d6f756e74206f766572666c6f7773",
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27807:27:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_6281e829f7ec7f2cccd2aea5aead2c19a968d78b08a401d6fbbbcbceebdf1198",
																						"typeString": "literal_string \"The vote amount overflows\""
																					},
																					"value": "The vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_6281e829f7ec7f2cccd2aea5aead2c19a968d78b08a401d6fbbbcbceebdf1198",
																						"typeString": "literal_string \"The vote amount overflows\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1541,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "27785:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "27785:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																				}
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27785:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27765:70:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1548,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1456,
																					"src": "27870:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1549,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "27878:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1550,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "27889:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1551,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1540,
																					"src": "27900:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1547,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "27853:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27853:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1553,
																		"nodeType": "ExpressionStatement",
																		"src": "27853:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27071:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27087:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27070:48:0"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27128:0:0"
									},
									"scope": 1692,
									"src": "27047:894:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "28058:489:0",
										"statements": [
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "28066:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1570,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "28066:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1573,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "28094:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28094:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "54686520626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28108:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e113c43e880116d52c7f2636a37c913ac2cc14ba7aeb716cc0279d52a01cefb6",
																"typeString": "literal_string \"The block number exceeds 32 bits\""
															},
															"value": "The block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_e113c43e880116d52c7f2636a37c913ac2cc14ba7aeb716cc0279d52a01cefb6",
																"typeString": "literal_string \"The block number exceeds 32 bits\""
															}
														],
														"id": 1572,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "28087:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28087:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28066:77:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1578,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "28156:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28171:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "28156:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1581,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "28176:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1583,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1582,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "28188:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28176:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1587,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1584,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28199:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28214:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28199:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28176:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 578,
															"src": "28176:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1589,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "28230:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "28176:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28156:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "28327:149:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1604,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "28339:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																			}
																		},
																		"id": 1607,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1605,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "28351:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28339:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																			"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																		}
																	},
																	"id": 1608,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1606,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28362:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28339:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																		"typeString": "struct GTFX.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1610,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1571,
																			"src": "28389:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1611,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "28402:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1609,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "28378:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$581_storage_ptr_$",
																			"typeString": "type(struct GTFX.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28378:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_memory",
																		"typeString": "struct GTFX.Checkpoint memory"
																	}
																},
																"src": "28339:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "28339:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1615,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "28423:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1617,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1616,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "28438:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28423:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1618,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28451:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28466:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28451:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "28423:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1622,
															"nodeType": "ExpressionStatement",
															"src": "28423:44:0"
														}
													]
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "28152:324:0",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "28243:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1592,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "28255:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																				}
																			},
																			"id": 1597,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1593,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "28267:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28255:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																				"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																			}
																		},
																		"id": 1598,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1594,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "28278:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28293:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28278:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28255:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																			"typeString": "struct GTFX.Checkpoint storage ref"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 580,
																	"src": "28255:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1600,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "28304:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28255:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1602,
															"nodeType": "ExpressionStatement",
															"src": "28255:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1626,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "28510:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1627,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "28521:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1628,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "28531:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "28489:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28489:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "EmitStatement",
												"src": "28484:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27973:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27992:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1562,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "27992:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "28013:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "28031:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27972:76:0"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28058:0:0"
									},
									"scope": 1692,
									"src": "27947:600:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "28643:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1642,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "28661:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28665:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28668:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28665:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "28661:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1647,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "28672:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "28653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28653:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "28653:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1651,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "28709:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28702:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28702:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1653,
												"nodeType": "Return",
												"src": "28695:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28573:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28584:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28584:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28572:39:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28635:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1638,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28634:8:0"
									},
									"scope": 1692,
									"src": "28557:161:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "28782:100:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1662,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "28796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
															"typeString": "int_const 79228162514264337593543950336"
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28801:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3936",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28804:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_96_by_1",
																"typeString": "int_const 96"
															},
															"value": "96"
														},
														"src": "28801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
															"typeString": "int_const 79228162514264337593543950336"
														}
													},
													"src": "28796:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1673,
												"nodeType": "IfStatement",
												"src": "28792:58:0",
												"trueBody": {
													"id": 1672,
													"nodeType": "Block",
													"src": "28808:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "28836:2:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28837:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28829:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": "uint96"
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1661,
															"id": 1671,
															"nodeType": "Return",
															"src": "28822:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1675,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "28873:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28866:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28866:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1677,
												"nodeType": "Return",
												"src": "28859:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "28740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28739:11:0"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "28774:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1659,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "28774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28773:8:0"
									},
									"scope": 1692,
									"src": "28724:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "28942:98:0",
										"statements": [
											{
												"assignments": [
													1685
												],
												"declarations": [
													{
														"constant": false,
														"id": 1685,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "28952:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "28952:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 1685,
															"isOffset": false,
															"isSlot": false,
															"src": "28988:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 1687,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "28977:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1688,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1685,
													"src": "29026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1689,
												"nodeType": "Return",
												"src": "29019:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28907:2:0"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "28933:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28932:9:0"
									},
									"scope": 1692,
									"src": "28888:152:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "13437:15605:0"
						}
					],
					"src": "32:29011:0"
				},
				"id": 0
			}
		}
	}
}