{
	"id": "1aa593e7b9425fcee790edc8feefd482",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/4_SmartGTFX.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.16;\n\n// ----------------------------------------------------------------------------\n// 'GTFX' 'Gitshock Finance Testnet' BEP20 token contract\n//\n// Symbol      : tGTFX\n// Name        : Gitshock Finance Testnet\n// Total supply: 50,000,000.000000000000000000\n// Decimals    : 18\n// Website     : https://gitshock.com\n//\n// ----------------------------------------------------------------------------\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    return add(a, b, \"SafeMath: addition overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, errorMessage);\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ninterface BEP20Interface {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Tokenlock is Ownable {\n    /// @notice Indicates if token is locked\n    uint8 isLocked = 0;\n\n    event Freezed();\n    event UnFreezed();\n\n    modifier validLock {\n        require(isLocked == 0, \"Token is locked\");\n        _;\n    }\n    \n    function freeze() public onlyOwner {\n        isLocked = 1;\n        \n        emit Freezed();\n    }\n\n    function unfreeze() public onlyOwner {\n        isLocked = 0;\n        \n        emit UnFreezed();\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n//\n// Borrowed from MiniMeToken\n// ----------------------------------------------------------------------------\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n}\n\n// ----------------------------------------------------------------------------\n// Limit users in blacklist\n// ----------------------------------------------------------------------------\ncontract UserLock is Ownable {\n    mapping(address => bool) blacklist;\n        \n    event LockUser(address indexed who);\n    event UnlockUser(address indexed who);\n\n    modifier permissionCheck {\n        require(!blacklist[msg.sender], \"Blocked user\");\n        _;\n    }\n    \n    function lockUser(address who) public onlyOwner {\n        blacklist[who] = true;\n        \n        emit LockUser(who);\n    }\n\n    function unlockUser(address who) public onlyOwner {\n        blacklist[who] = false;\n        \n        emit UnlockUser(who);\n    }\n}\n\ncontract GTFX is BEP20Interface, Tokenlock, UserLock {\n    using SafeMath for uint256;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint256) private _balances;\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    /// @notice Total number of tokens in circulation\n    uint256 private _totalSupply;\n\n    /// @notice BEP-20 token decimals for this token\n    uint8 private _decimals;\n\n    /// @notice BEP-20 token symbol for this token\n    string private _symbol;\n\n    /// @notice BEP-20 token name for this token\n    string private _name;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint256) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /// @notice The standard BEP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard BEP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new GTFX Testnet token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        _name = \"Gitshock Finance Testnet\";\n        _symbol = \"tGT\";\n        _decimals = 18;\n        _totalSupply = 50000000e18;\n        _balances[account] = _totalSupply;\n\n        emit Transfer(address(0), account, _totalSupply);\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n    */\n    function getOwner() external view returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token decimals.\n    */\n    function decimals() external view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n    */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the token name.\n    */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the total supply.\n    */\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param recipient The address of the destination account\n     * @param amount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param owner The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address owner, address spender) external view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     * @param spender The address of the account which may transfer tokens\n     * @param amount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Approve the spender to transferFrom(...) with the amount.\n     * @dev receiveApproval(...) is executed.\n     * @param amount The number of tokens that are approved\n     * @param data The data to pass to receiveApproval(...)\n     * @return true\n     */\n    function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param sender The address of the source account\n     * @param recipient The address of the destination account\n     * @param amount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {\n        _transfer(sender, recipient, amount);\n        address spender = _msgSender();\n        uint256 spenderAllowance = _allowances[sender][spender];\n        if (spenderAllowance != uint256(-1)) {\n            _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\"));\n        }\n        return true;\n    }\n\n    /**\n     * @notice Atomically increases the allowance granted to `spender` by the caller\n     * @dev This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     * @param spender The address of the account which may transfer tokens\n     * @param addedValue The additional number of tokens to allow which may be spent\n     * @return Whether or not the approval succeeded\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\"));\n        return true;\n    }\n\n    /**\n     * @notice Atomically increases the allowance granted to `spender` by the caller\n     * @dev This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     * @param spender The address of the account which may transfer tokens\n     * @param subtractedValue The subtractional number of tokens to allow which may be spent\n     * @return Whether or not the approval succeeded\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @notice Destroy the amount of tokens from the sender, reducing the total supply.\n     * @dev The amount must be greater than balance, total supply.\n     * @param amount The number of tokens that are burnt\n     * @return true\n     */\n    function burn(uint256 amount) public validLock permissionCheck returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public validLock permissionCheck {\n        return _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Invalid signature\");\n        require(nonce == nonces[signatory]++, \"Invalid nonce\");\n        require(now <= expiry, \"The signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Not determined yet\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return ceil96(checkpoints[account][nCheckpoints - 1].votes);\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return ceil96(cp.votes);\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return ceil96(checkpoints[account][lower].votes);\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"Cannot transfer from the zero address\");\n        require(recipient != address(0), \"Cannot transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"The transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount, \"The balance overflows\");\n        emit Transfer(sender, recipient, amount);\n\n        _moveDelegates(delegates[sender], delegates[recipient], amount);\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"Cannot approve from the zero address\");\n        require(spender != address(0), \"Cannot approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"Cannot burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"The burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n\n        _moveDelegates(delegates[account], address(0), amount);\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint256 delegatorBalance = _balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount, \"The vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount, \"The vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"The block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n    \n    function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function ceil96(uint256 n) internal pure returns (uint96) {\n        if (n >= 2**96) {\n            return uint96(-1);\n        }\n        return uint96(n);\n    }\n\n    function getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/4_SmartGTFX.sol": {
				"ApproveAndCallFallBack": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "receiveApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"ApproveAndCallFallBack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"BEP20Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"BEP20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"GTFX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Freezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "LockUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "UnFreezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "UnlockUser",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "lockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "unlockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender`",
								"params": {
									"amount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "receiveApproval(...) is executed.",
								"params": {
									"amount": "The number of tokens that are approved",
									"data": "The data to pass to receiveApproval(...)"
								},
								"return": "true"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"burn(uint256)": {
								"details": "The amount must be greater than balance, total supply.",
								"params": {
									"amount": "The number of tokens that are burnt"
								},
								"return": "true"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.",
								"params": {
									"spender": "The address of the account which may transfer tokens",
									"subtractedValue": "The subtractional number of tokens to allow which may be spent"
								},
								"return": "Whether or not the approval succeeded"
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"increaseAllowance(address,uint256)": {
								"details": "This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.",
								"params": {
									"addedValue": "The additional number of tokens to allow which may be spent",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the total supply."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to transfer",
									"recipient": "The address of the destination account"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The number of tokens to transfer",
									"recipient": "The address of the destination account",
									"sender": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":13393:28996  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":11902:11903  0 */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":11885:11903  uint8 isLocked = 0 */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":15884:16158  constructor(address account) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/4_SmartGTFX.sol\":15884:16158  constructor(address account) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15884:16158  constructor(address account) public {... */\n  mload\n    /* \"contracts/4_SmartGTFX.sol\":7487:7504  address msgSender */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7507:7519  _msgSender() */\n  tag_8\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7507:7517  _msgSender */\n  tag_9\n    /* \"contracts/4_SmartGTFX.sol\":7507:7519  _msgSender() */\n  and\n  jump\t// in\ntag_8:\n    /* \"contracts/4_SmartGTFX.sol\":7525:7531  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7525:7543  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7525:7543  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7525:7531  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15930:15964  _name = \"Gitshock Finance Testnet\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x18\n  dup1\n  dup3\n  mstore\n  0x47697473686f636b2046696e616e636520546573746e65740000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_11\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15930:15935  _name */\n  0x07\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15930:15964  _name = \"Gitshock Finance Testnet\" */\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15974:15989  _symbol = \"tGT\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x03\n  dup1\n  dup3\n  mstore\n  shl(0xea, 0x1d11d5)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_13\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15974:15981  _symbol */\n  0x06\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15974:15989  _symbol = \"tGT\" */\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15999:16008  _decimals */\n  0x05\n    /* \"contracts/4_SmartGTFX.sol\":15999:16013  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/4_SmartGTFX.sol\":16011:16013  18 */\n  0x12\n    /* \"contracts/4_SmartGTFX.sol\":15999:16013  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":16038:16049  50000000e18 */\n  0x295be96e64066972000000\n    /* \"contracts/4_SmartGTFX.sol\":16023:16035  _totalSupply */\n  0x04\n    /* \"contracts/4_SmartGTFX.sol\":16023:16049  _totalSupply = 50000000e18 */\n  dup2\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":16059:16077  _balances[account] */\n  dup3\n  and\n    /* \"contracts/4_SmartGTFX.sol\":15999:16008  _decimals */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":16059:16077  _balances[account] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/4_SmartGTFX.sol\":16059:16068  _balances */\n  0x02\n    /* \"contracts/4_SmartGTFX.sol\":16059:16077  _balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/4_SmartGTFX.sol\":16059:16092  _balances[account] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":16108:16151  Transfer(address(0), account, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/4_SmartGTFX.sol\":16059:16077  _balances[account] */\n  swap3\n  swap4\n    /* \"contracts/4_SmartGTFX.sol\":15999:16008  _decimals */\n  swap2\n  swap3\n    /* \"contracts/4_SmartGTFX.sol\":16108:16151  Transfer(address(0), account, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":15884:16158  constructor(address account) public {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":13393:28996  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n  jump(tag_14)\n    /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\ntag_9:\n    /* \"contracts/4_SmartGTFX.sol\":6490:6500  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\ntag_15:\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":13393:28996  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\ntag_12:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\n  tag_15\n  swap2\n  swap1\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_23)\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":13393:28996  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":13393:28996  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x782d6fe1\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xbd1870a3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xbd1870a3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd7972580\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x782d6fe1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x42966c68\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x6a28f000\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x6a28f000\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x62a5af3b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x20606b70\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":16650:16733  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_43:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_43)\n    tag_45:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16650:16733  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_46:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":18431:18608  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_4:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18431:18608  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":16792:16883  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":14650:14772  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_50\n      tag_53\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":19497:19966  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19497:19966  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_56\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16364:16447  function decimals() external view returns (uint8) {... */\n    tag_8:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":20417:20687  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":20417:20687  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21681:21824  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21681:21824  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14114:14159  mapping (address => address) public delegates */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14114:14159  mapping (address => address) public delegates */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":21966:22094  function delegate(address delegatee) public validLock permissionCheck {... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21966:22094  function delegate(address delegatee) public validLock permissionCheck {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":12053:12150  function freeze() public onlyOwner {... */\n    tag_13:\n      tag_68\n      tag_72\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":12156:12257  function unfreeze() public onlyOwner {... */\n    tag_14:\n      tag_68\n      tag_74\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14531:14580  mapping (address => uint32) public numCheckpoints */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14531:14580  mapping (address => uint32) public numCheckpoints */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n    tag_75:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":17079:17189  function balanceOf(address account) external view returns (uint256) {... */\n    tag_16:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":17079:17189  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_80\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n    tag_17:\n      tag_68\n      tag_82\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":24114:25306  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24114:25306  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_85\n      jump\t// in\n    tag_83:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":15058:15100  mapping (address => uint256) public nonces */\n    tag_19:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":15058:15100  mapping (address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_88\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16220:16303  function getOwner() external view returns (address) {... */\n    tag_20:\n      tag_65\n      tag_90\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n    tag_21:\n      tag_65\n      tag_92\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16506:16593  function symbol() external view returns (string memory) {... */\n    tag_22:\n      tag_41\n      tag_94\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21146:21427  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n    tag_23:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_100:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":21146:21427  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_101\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17448:17631  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_24:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17448:17631  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_104\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":23465:23692  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_25:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":23465:23692  function getCurrentVotes(address account) external view returns (uint96) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n    tag_26:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_110\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":22517:23271  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n    tag_27:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_112:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":22517:23271  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x60\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xa0\n      add\n      calldataload\n      tag_113\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n    tag_28:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup3\n      calldataload\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_117:\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_118:\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap3\n      swap6\n      pop\n      tag_119\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n    tag_29:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_122\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17925:18059  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_30:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17925:18059  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_125\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14863:14980  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_31:\n      tag_50\n      tag_127\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14395:14465  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_32:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14395:14465  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_130\n      jump\t// in\n    tag_128:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_33:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_133\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16650:16733  function name() external view returns (string memory) {... */\n    tag_42:\n        /* \"contracts/4_SmartGTFX.sol\":16721:16726  _name */\n      0x07\n        /* \"contracts/4_SmartGTFX.sol\":16714:16726  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":16689:16702  string memory */\n      0x60\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":16714:16726  return _name */\n      swap1\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":16721:16726  _name */\n      swap1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":16714:16726  return _name */\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":16721:16726  _name */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":16714:16726  return _name */\n      dup3\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16650:16733  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":18431:18608  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_49:\n        /* \"contracts/4_SmartGTFX.sol\":18525:18529  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_139\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_141\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/4_SmartGTFX.sol\":18541:18580  _approve(_msgSender(), spender, amount) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":18550:18562  _msgSender() */\n      tag_144\n        /* \"contracts/4_SmartGTFX.sol\":18550:18560  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":18550:18562  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/4_SmartGTFX.sol\":18564:18571  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":18573:18579  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":18541:18549  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":18541:18580  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":18597:18601  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13114:13115  _ */\n    tag_142:\n        /* \"contracts/4_SmartGTFX.sol\":18431:18608  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16792:16883  function totalSupply() external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/4_SmartGTFX.sol\":16864:16876  _totalSupply */\n      sload(0x04)\n        /* \"contracts/4_SmartGTFX.sol\":16792:16883  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14650:14772  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_53:\n        /* \"contracts/4_SmartGTFX.sol\":14692:14772  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      0x43\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      dup3\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":14650:14772  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":19497:19966  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_56:\n        /* \"contracts/4_SmartGTFX.sol\":19614:19618  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_149\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_151\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/4_SmartGTFX.sol\":19630:19666  _transfer(sender, recipient, amount) */\n      tag_153\n        /* \"contracts/4_SmartGTFX.sol\":19640:19646  sender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19648:19657  recipient */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19659:19665  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19630:19639  _transfer */\n      tag_154\n        /* \"contracts/4_SmartGTFX.sol\":19630:19666  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/4_SmartGTFX.sol\":19676:19691  address spender */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":19694:19706  _msgSender() */\n      tag_155\n        /* \"contracts/4_SmartGTFX.sol\":19694:19704  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19694:19706  _msgSender() */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19743:19762  _allowances[sender] */\n      dup1\n      dup8\n      and\n        /* \"contracts/4_SmartGTFX.sol\":19716:19740  uint256 spenderAllowance */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":19743:19762  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":19743:19754  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":19743:19762  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":19743:19771  _allowances[sender][spender] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":19676:19706  address spender = _msgSender() */\n      swap1\n      swap2\n      pop\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":19785:19816  spenderAllowance != uint256(-1) */\n      dup2\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":19781:19939  if (spenderAllowance != uint256(-1)) {... */\n      tag_157\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":19832:19928  _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\")) */\n      tag_157\n        /* \"contracts/4_SmartGTFX.sol\":19841:19847  sender */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":19849:19856  spender */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":19858:19927  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":19879:19885  amount */\n      dup8\n        /* \"contracts/4_SmartGTFX.sol\":19858:19927  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":19858:19874  spenderAllowance */\n      dup7\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":19858:19927  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":19858:19878  spenderAllowance.sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":19858:19927  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_158:\n        /* \"contracts/4_SmartGTFX.sol\":19832:19840  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":19832:19928  _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19955:19959  true */\n      0x01\n      swap6\n        /* \"contracts/4_SmartGTFX.sol\":19497:19966  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16364:16447  function decimals() external view returns (uint8) {... */\n    tag_58:\n        /* \"contracts/4_SmartGTFX.sol\":16431:16440  _decimals */\n      and(0xff, sload(0x05))\n        /* \"contracts/4_SmartGTFX.sol\":16364:16447  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":20417:20687  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n    tag_61:\n        /* \"contracts/4_SmartGTFX.sol\":20523:20527  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_162\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_164\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/4_SmartGTFX.sol\":20539:20659  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\")) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":20548:20560  _msgSender() */\n      tag_167\n        /* \"contracts/4_SmartGTFX.sol\":20548:20558  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":20548:20560  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/4_SmartGTFX.sol\":20562:20569  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":20571:20658  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":20610:20620  addedValue */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":20571:20658  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      data_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77\n      0x21\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":20571:20582  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":20571:20596  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":20583:20595  _msgSender() */\n      tag_169\n        /* \"contracts/4_SmartGTFX.sol\":20583:20593  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":20583:20595  _msgSender() */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":20571:20596  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":20571:20605  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":20571:20658  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":20571:20609  _allowances[_msgSender()][spender].add */\n      tag_170\n        /* \"contracts/4_SmartGTFX.sol\":20571:20658  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      and\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21681:21824  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n    tag_64:\n        /* \"contracts/4_SmartGTFX.sol\":21753:21757  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_174\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/4_SmartGTFX.sol\":21769:21796  _burn(_msgSender(), amount) */\n      tag_176\n        /* \"contracts/4_SmartGTFX.sol\":21775:21787  _msgSender() */\n      tag_177\n        /* \"contracts/4_SmartGTFX.sol\":21775:21785  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21775:21787  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/4_SmartGTFX.sol\":21789:21795  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":21769:21774  _burn */\n      tag_178\n        /* \"contracts/4_SmartGTFX.sol\":21769:21796  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21813:21817  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13114:13115  _ */\n    tag_175:\n        /* \"contracts/4_SmartGTFX.sol\":21681:21824  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14114:14159  mapping (address => address) public delegates */\n    tag_67:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":21966:22094  function delegate(address delegatee) public validLock permissionCheck {... */\n    tag_70:\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_180\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_182\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/4_SmartGTFX.sol\":22053:22087  _delegate(_msgSender(), delegatee) */\n      tag_184\n        /* \"contracts/4_SmartGTFX.sol\":22063:22075  _msgSender() */\n      tag_185\n        /* \"contracts/4_SmartGTFX.sol\":22063:22073  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":22063:22075  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/4_SmartGTFX.sol\":22077:22086  delegatee */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":22053:22062  _delegate */\n      tag_186\n        /* \"contracts/4_SmartGTFX.sol\":22053:22087  _delegate(_msgSender(), delegatee) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/4_SmartGTFX.sol\":21966:22094  function delegate(address delegatee) public validLock permissionCheck {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12053:12150  function freeze() public onlyOwner {... */\n    tag_72:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_188\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/4_SmartGTFX.sol\":12098:12106  isLocked */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12098:12110  isLocked = 1 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12134:12143  Freezed() */\n      mload(0x40)\n      0x962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12098:12106  isLocked */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12134:12143  Freezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12053:12150  function freeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12156:12257  function unfreeze() public onlyOwner {... */\n    tag_74:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_192\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_193\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/4_SmartGTFX.sol\":12214:12215  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12203:12215  isLocked = 0 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12239:12250  UnFreezed() */\n      mload(0x40)\n      0xf0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12214:12215  0 */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12239:12250  UnFreezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12156:12257  function unfreeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14531:14580  mapping (address => uint32) public numCheckpoints */\n    tag_77:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":17079:17189  function balanceOf(address account) external view returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17164:17182  _balances[account] */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":17138:17145  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":17164:17182  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":17164:17173  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":17164:17182  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":17079:17189  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n    tag_82:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_197\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/4_SmartGTFX.sol\":8347:8348  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8331:8337  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8331:8337  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8347:8348  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8373:8374  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8356:8375  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":24114:25306  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n    tag_85:\n        /* \"contracts/4_SmartGTFX.sol\":24196:24202  uint96 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24236:24248  block.number */\n      number\n        /* \"contracts/4_SmartGTFX.sol\":24222:24233  blockNumber */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":24222:24248  blockNumber < block.number */\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24214:24271  require(blockNumber < block.number, \"Not determined yet\") */\n      tag_201\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x139bdd0819195d195c9b5a5b9959081e595d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24304:24327  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24282:24301  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24304:24327  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24304:24318  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":24304:24327  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24341:24358  nCheckpoints == 0 */\n      dup1\n        /* \"contracts/4_SmartGTFX.sol\":24337:24393  if (nCheckpoints == 0) {... */\n      tag_202\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24381:24382  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24374:24382  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24337:24393  if (nCheckpoints == 0) {... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24450:24470  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24450:24461  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24450:24470  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24450:24488  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24471:24487  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24450:24488  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24450:24498  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24450:24513  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24446:24599  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_203\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24543:24563  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24543:24554  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24543:24563  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24543:24581  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24564:24580  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24543:24581  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24579:24580  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":24543:24587  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":24536:24588  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      tag_204\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":24536:24542  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":24536:24588  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/4_SmartGTFX.sol\":24529:24588  return ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24446:24599  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24657:24677  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24657:24668  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24657:24677  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24657:24680  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24657:24690  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":24657:24680  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":24657:24690  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24657:24704  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24653:24739  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24727:24728  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24720:24728  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24653:24739  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_206:\n        /* \"contracts/4_SmartGTFX.sol\":24749:24761  uint32 lower */\n      0x00\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24790:24806  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24816:25242  while (upper > lower) {... */\n    tag_207:\n        /* \"contracts/4_SmartGTFX.sol\":24831:24836  lower */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":24823:24836  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24823:24828  upper */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":24823:24836  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":24816:25242  while (upper > lower) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24894:24895  2 */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":24877:24890  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":24876:24895  (upper - lower) / 2 */\n      0xffffffff\n      and\n      div\n        /* \"contracts/4_SmartGTFX.sol\":24868:24895  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":24936:24956  Checkpoint memory cp */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24959:24979  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24959:24970  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24959:24979  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24959:24987  checkpoints[account][center] */\n      0xffffffff\n      dup1\n      dup7\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24936:24987  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup1\n      dup3\n      mstore\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25005:25032  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":25001:25232  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":25059:25075  ceil96(cp.votes) */\n      tag_213\n        /* \"contracts/4_SmartGTFX.sol\":25066:25068  cp */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25066:25074  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25059:25065  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":25059:25075  ceil96(cp.votes) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/4_SmartGTFX.sol\":25052:25075  return ceil96(cp.votes) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":25001:25232  if (cp.fromBlock == blockNumber) {... */\n    tag_212:\n        /* \"contracts/4_SmartGTFX.sol\":25100:25112  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25100:25126  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":25096:25232  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":25154:25160  center */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25146:25160  lower = center */\n      swap4\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":25096:25232  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_216)\n    tag_215:\n        /* \"contracts/4_SmartGTFX.sol\":25216:25217  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":25207:25213  center */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":25207:25217  center - 1 */\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":25199:25217  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":25096:25232  if (cp.fromBlock < blockNumber) {... */\n    tag_216:\n        /* \"contracts/4_SmartGTFX.sol\":24816:25242  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_207)\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25265:25285  checkpoints[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25265:25276  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":25265:25285  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25265:25292  checkpoints[account][lower] */\n      0xffffffff\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25265:25298  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25258:25299  ceil96(checkpoints[account][lower].votes) */\n      tag_217\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25258:25264  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":25258:25299  ceil96(checkpoints[account][lower].votes) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/4_SmartGTFX.sol\":25251:25299  return ceil96(checkpoints[account][lower].votes) */\n      swap7\n        /* \"contracts/4_SmartGTFX.sol\":24114:25306  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":15058:15100  mapping (address => uint256) public nonces */\n    tag_88:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16220:16303  function getOwner() external view returns (address) {... */\n    tag_90:\n        /* \"contracts/4_SmartGTFX.sol\":16263:16270  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":16289:16296  owner() */\n      tag_219\n        /* \"contracts/4_SmartGTFX.sol\":16289:16294  owner */\n      tag_92\n        /* \"contracts/4_SmartGTFX.sol\":16289:16296  owner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/4_SmartGTFX.sol\":16282:16296  return owner() */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16220:16303  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n    tag_92:\n        /* \"contracts/4_SmartGTFX.sol\":7708:7715  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7730:7736  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16506:16593  function symbol() external view returns (string memory) {... */\n    tag_94:\n        /* \"contracts/4_SmartGTFX.sol\":16579:16586  _symbol */\n      0x06\n        /* \"contracts/4_SmartGTFX.sol\":16572:16586  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":16547:16560  string memory */\n      0x60\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":16572:16586  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":16579:16586  _symbol */\n      swap1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":16572:16586  return _symbol */\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":16579:16586  _symbol */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":16572:16586  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n        /* \"contracts/4_SmartGTFX.sol\":21146:21427  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n    tag_101:\n        /* \"contracts/4_SmartGTFX.sol\":21257:21261  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_226\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_228\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/4_SmartGTFX.sol\":21273:21399  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\")) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":21282:21294  _msgSender() */\n      tag_231\n        /* \"contracts/4_SmartGTFX.sol\":21282:21292  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21282:21294  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/4_SmartGTFX.sol\":21296:21303  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":21305:21398  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":21344:21359  subtractedValue */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":21305:21398  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":21305:21316  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":21305:21330  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":21317:21329  _msgSender() */\n      tag_233\n        /* \"contracts/4_SmartGTFX.sol\":21317:21327  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21317:21329  _msgSender() */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":21305:21330  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":21305:21339  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":21305:21398  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":21305:21343  _allowances[_msgSender()][spender].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":21305:21398  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17448:17631  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_104:\n        /* \"contracts/4_SmartGTFX.sol\":17545:17549  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_235\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_237\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/4_SmartGTFX.sol\":17561:17603  _transfer(_msgSender(), recipient, amount) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":17571:17583  _msgSender() */\n      tag_240\n        /* \"contracts/4_SmartGTFX.sol\":17571:17581  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":17571:17583  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/4_SmartGTFX.sol\":17585:17594  recipient */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":17596:17602  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":17561:17570  _transfer */\n      tag_154\n        /* \"contracts/4_SmartGTFX.sol\":17561:17603  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":23465:23692  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23570:23593  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23530:23536  uint96 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23570:23593  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23570:23584  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":23570:23593  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23610:23626  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/4_SmartGTFX.sol\":23610:23685  nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      tag_242\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":23684:23685  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23610:23685  nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      jump(tag_244)\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23636:23656  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23636:23647  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":23636:23656  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23636:23674  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":23657:23673  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":23636:23674  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23672:23673  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":23636:23680  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":23629:23681  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      tag_244\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":23629:23635  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":23629:23681  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/4_SmartGTFX.sol\":23603:23685  return nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":23465:23692  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_246\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_247\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13321:13335  blacklist[who] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13338:13343  false */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":13321:13335  blacklist[who] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13321:13330  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13321:13335  blacklist[who] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13321:13343  blacklist[who] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13367:13382  UnlockUser(who) */\n      mload\n      0x687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13338:13343  false */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13367:13382  UnlockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":22517:23271  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n    tag_113:\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_250\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_252\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_252:\n        /* \"contracts/4_SmartGTFX.sol\":22664:22687  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":14692:14772  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22744:22749  _name */\n      0x07\n        /* \"contracts/4_SmartGTFX.sol\":22728:22751  keccak256(bytes(_name)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_255\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      dup3\n      add\n      swap2\n      jump(tag_254)\n    tag_255:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_256:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_256\n      jumpi\n    tag_254:\n      pop\n      pop\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22753:22765  getChainId() */\n      tag_257\n        /* \"contracts/4_SmartGTFX.sol\":22753:22763  getChainId */\n      tag_258\n        /* \"contracts/4_SmartGTFX.sol\":22753:22765  getChainId() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/4_SmartGTFX.sol\":22775:22779  this */\n      address\n        /* \"contracts/4_SmartGTFX.sol\":22700:22781  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22700:22781  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22690:22782  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22664:22782  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22792:22810  bytes32 structHash */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":14909:14980  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x3a\n      add\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22823:22880  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      dup4\n      dup4\n      add\n      mstore\n      0x60\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0x80\n      dup1\n      dup5\n      add\n      dup12\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22823:22880  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xa0\n      dup5\n      add\n      dup4\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22813:22881  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      dup3\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/4_SmartGTFX.sol\":22918:22975  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0xc0\n      dup6\n      add\n      mstore\n      0xc2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      0xe2\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22918:22975  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0102\n      dup6\n      add\n      dup1\n      dup6\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22908:22976  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup2\n      mload\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23006:23032  ecrecover(digest, v, r, s) */\n      swap2\n      dup3\n      swap1\n      mstore\n      0x0122\n      dup7\n      add\n      dup1\n      dup7\n      mstore\n      dup2\n      swap1\n      mstore\n      0xff\n      dup13\n      and\n      0x0142\n      dup8\n      add\n      mstore\n      0x0162\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n      0x0182\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      swap4\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":22813:22881  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap2\n      swap7\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22908:22976  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap3\n      swap5\n      pop\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":23006:23032  ecrecover(digest, v, r, s) */\n      0x01\n      swap3\n      0x01a2\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":22823:22880  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap3\n      not(0x1f)\n        /* \"contracts/4_SmartGTFX.sol\":23006:23032  ecrecover(digest, v, r, s) */\n      dup4\n      add\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":23006:23032  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23050:23073  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23042:23095  require(signatory != address(0), \"Invalid signature\") */\n      tag_260\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e76616c6964207369676e6174757265)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23122:23139  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23122:23128  nonces */\n      0x0b\n        /* \"contracts/4_SmartGTFX.sol\":23122:23139  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23122:23141  nonces[signatory]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":23113:23141  nonce == nonces[signatory]++ */\n      dup10\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":23105:23159  require(nonce == nonces[signatory]++, \"Invalid nonce\") */\n      tag_261\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x496e76616c6964206e6f6e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/4_SmartGTFX.sol\":23184:23190  expiry */\n      dup8\n        /* \"contracts/4_SmartGTFX.sol\":23177:23180  now */\n      timestamp\n        /* \"contracts/4_SmartGTFX.sol\":23177:23190  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":23169:23216  require(now <= expiry, \"The signature expired\") */\n      tag_262\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x151a19481cda59db985d1d5c9948195e1c1a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/4_SmartGTFX.sol\":23233:23264  _delegate(signatory, delegatee) */\n      tag_263\n        /* \"contracts/4_SmartGTFX.sol\":23243:23252  signatory */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":23254:23263  delegatee */\n      dup12\n        /* \"contracts/4_SmartGTFX.sol\":23233:23242  _delegate */\n      tag_186\n        /* \"contracts/4_SmartGTFX.sol\":23233:23264  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/4_SmartGTFX.sol\":23226:23264  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13114:13115  _ */\n    tag_253:\n        /* \"contracts/4_SmartGTFX.sol\":22517:23271  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n    tag_119:\n        /* \"contracts/4_SmartGTFX.sol\":19007:19011  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":11992:12000  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":11992:12005  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":11984:12025  require(isLocked == 0, \"Token is locked\") */\n      tag_265\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/4_SmartGTFX.sol\":13076:13086  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13066:13075  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13066:13087  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13065:13087  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13057:13104  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_267\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/4_SmartGTFX.sol\":19023:19062  _approve(_msgSender(), spender, amount) */\n      tag_269\n        /* \"contracts/4_SmartGTFX.sol\":19032:19044  _msgSender() */\n      tag_270\n        /* \"contracts/4_SmartGTFX.sol\":19032:19042  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19032:19044  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/4_SmartGTFX.sol\":19046:19053  spender */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19055:19061  amount */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19023:19031  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":19023:19062  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/4_SmartGTFX.sol\":19095:19102  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19072:19119  ApproveAndCallFallBack(spender).receiveApproval */\n      and\n      0x8f4ffcb1\n        /* \"contracts/4_SmartGTFX.sol\":19120:19132  _msgSender() */\n      tag_271\n        /* \"contracts/4_SmartGTFX.sol\":19120:19130  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19120:19132  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/4_SmartGTFX.sol\":19134:19140  amount */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19150:19154  this */\n      address\n        /* \"contracts/4_SmartGTFX.sol\":19157:19161  data */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":19072:19162  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_272:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_274\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_272)\n    tag_274:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19072:19162  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_275\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_275:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_276\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_276:\n        /* \"contracts/4_SmartGTFX.sol\":19072:19162  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_277\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_277:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19179:19183  true */\n      0x01\n      swap8\n        /* \"contracts/4_SmartGTFX.sol\":18889:19190  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n    tag_122:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_279\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13190:13204  blacklist[who] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13207:13211  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13190:13204  blacklist[who] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13190:13211  blacklist[who] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13235:13248  LockUser(who) */\n      mload\n      0x169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13190:13204  blacklist[who] */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13235:13248  LockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":17925:18059  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18025:18043  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":17999:18006  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":18025:18043  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":18025:18036  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":18025:18043  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":18025:18052  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":17925:18059  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14863:14980  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_127:\n        /* \"contracts/4_SmartGTFX.sol\":14909:14980  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      0x3a\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      dup3\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":14863:14980  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14395:14465  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_130:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      0xffffffff\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_133:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_284\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/4_SmartGTFX.sol\":8587:8615  _transferOwnership(newOwner) */\n      tag_184\n        /* \"contracts/4_SmartGTFX.sol\":8606:8614  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8587:8605  _transferOwnership */\n      tag_288\n        /* \"contracts/4_SmartGTFX.sol\":8587:8615  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n    tag_145:\n        /* \"contracts/4_SmartGTFX.sol\":6490:6500  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":25878:26210  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25971:25990  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25963:26031  require(owner != address(0), \"Cannot approve from the zero address\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26049:26070  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26041:26109  require(spender != address(0), \"Cannot approve to the zero address\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26120:26138  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26120:26131  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":26120:26138  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26120:26147  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26120:26156  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26171:26203  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":25878:26210  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":25312:25872  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25409:25429  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25401:25471  require(sender != address(0), \"Cannot transfer from the zero address\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25489:25512  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25481:25552  require(recipient != address(0), \"Cannot transfer to the zero address\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/4_SmartGTFX.sol\":25583:25651  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      tag_296\n        /* \"contracts/4_SmartGTFX.sol\":25605:25611  amount */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25583:25651  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973\n      0x23\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25583:25600  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25583:25592  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25583:25600  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25583:25651  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":25583:25604  _balances[sender].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":25583:25651  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25563:25580  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25563:25572  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25563:25580  _balances[sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25563:25651  _balances[sender] = _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":25684:25741  _balances[recipient].add(amount, \"The balance overflows\") */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n      0x15\n      dup2\n      mstore\n      shl(0x58, 0x5468652062616c616e6365206f766572666c6f7773)\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25684:25704  _balances[recipient] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25684:25741  _balances[recipient].add(amount, \"The balance overflows\") */\n      tag_297\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25709:25715  amount */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25684:25741  _balances[recipient].add(amount, \"The balance overflows\") */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":25684:25708  _balances[recipient].add */\n      tag_170\n        /* \"contracts/4_SmartGTFX.sol\":25684:25741  _balances[recipient].add(amount, \"The balance overflows\") */\n      and\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25661:25681  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25661:25670  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25661:25681  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25661:25741  _balances[recipient] = _balances[recipient].add(amount, \"The balance overflows\") */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":25756:25791  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25661:25681  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":25756:25791  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25817:25834  delegates[sender] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25817:25826  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":25817:25834  delegates[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25836:25856  delegates[recipient] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25802:25865  _moveDelegates(delegates[sender], delegates[recipient], amount) */\n      tag_298\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":25817:25834  delegates[sender] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25836:25856  delegates[recipient] */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25858:25864  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":25802:25816  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":25802:25865  _moveDelegates(delegates[sender], delegates[recipient], amount) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/4_SmartGTFX.sol\":25312:25872  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":2440:2613  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_159:\n        /* \"contracts/4_SmartGTFX.sol\":2526:2533  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":2557:2569  errorMessage */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":2549:2555  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":2541:2570  require(b <= a, errorMessage) */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_302:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n    tag_304:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2541:2570  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_305\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_305:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n      pop\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2588:2593  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":2440:2613  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":1631:1804  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"contracts/4_SmartGTFX.sol\":1717:1724  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":1744:1749  a + b */\n      dup4\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":1771:1783  errorMessage */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":1763:1769  c >= a */\n      dup6\n      dup3\n      lt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":1755:1784  require(c >= a, errorMessage) */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n        /* \"contracts/4_SmartGTFX.sol\":1755:1784  require(c >= a, errorMessage) */\n    tag_307:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":1798:1799  c */\n      swap5\n        /* \"contracts/4_SmartGTFX.sol\":1631:1804  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":26216:26620  function _burn(address account, uint256 amount) internal {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26291:26312  account != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26283:26350  require(account != address(0), \"Cannot burn from the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/4_SmartGTFX.sol\":26382:26447  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x546865206275726e20616d6f756e7420657863656564732062616c616e636500\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26382:26400  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26382:26391  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26382:26400  _balances[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26382:26447  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      tag_314\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26405:26411  amount */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26382:26447  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":26382:26404  _balances[account].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":26382:26447  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26361:26379  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26361:26370  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26361:26379  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26361:26447  _balances[account] = _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26472:26484  _totalSupply */\n      sload(0x04)\n        /* \"contracts/4_SmartGTFX.sol\":26472:26496  _totalSupply.sub(amount) */\n      tag_315\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26489:26495  amount */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":26472:26496  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":26472:26488  _totalSupply.sub */\n      tag_316\n        /* \"contracts/4_SmartGTFX.sol\":26472:26496  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/4_SmartGTFX.sol\":26457:26469  _totalSupply */\n      0x04\n        /* \"contracts/4_SmartGTFX.sol\":26457:26496  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26511:26548  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":26537:26538  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26511:26548  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26574:26592  delegates[account] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26574:26583  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":26574:26592  delegates[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26559:26613  _moveDelegates(delegates[account], address(0), amount) */\n      tag_317\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":26574:26592  delegates[account] */\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26606:26612  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":26559:26573  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":26559:26613  _moveDelegates(delegates[account], address(0), amount) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/4_SmartGTFX.sol\":26216:26620  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":26626:26995  function _delegate(address delegator, address delegatee) internal {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26728:26748  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26702:26725  address currentDelegate */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":26728:26748  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26728:26737  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":26728:26748  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26785:26794  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26785:26805  _balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26815:26835  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26815:26847  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26863:26917  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":26728:26748  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"contracts/4_SmartGTFX.sol\":26785:26805  _balances[delegator] */\n      swap2\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":26815:26847  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":26728:26748  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26863:26917  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26702:26725  address currentDelegate */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26863:26917  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/4_SmartGTFX.sol\":26928:26988  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_319\n        /* \"contracts/4_SmartGTFX.sol\":26943:26958  currentDelegate */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":26960:26969  delegatee */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":26971:26987  delegatorBalance */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":26928:26942  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":26928:26988  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/4_SmartGTFX.sol\":26626:26995  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28678:28836  function ceil96(uint256 n) internal pure returns (uint96) {... */\n    tag_205:\n        /* \"contracts/4_SmartGTFX.sol\":28728:28734  uint96 */\n      0x00\n      shl(0x60, 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28750:28751  n */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":28750:28760  n >= 2**96 */\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":28746:28804  if (n >= 2**96) {... */\n      tag_321\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28776:28793  return uint96(-1) */\n      jump(tag_175)\n        /* \"contracts/4_SmartGTFX.sol\":28746:28804  if (n >= 2**96) {... */\n    tag_321:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28827:28828  n */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":28678:28836  function ceil96(uint256 n) internal pure returns (uint96) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28842:28994  function getChainId() internal pure returns (uint256) {... */\n    tag_258:\n        /* \"contracts/4_SmartGTFX.sol\":28953:28962  chainid() */\n      chainid\n        /* \"contracts/4_SmartGTFX.sol\":28842:28994  function getChainId() internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8713:8924  function _transferOwnership(address newOwner) internal {... */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8782:8804  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8774:8847  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/4_SmartGTFX.sol\":8879:8885  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8858:8896  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8879:8885  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8858:8896  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8902:8908  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8902:8919  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8713:8924  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":27001:27895  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n    tag_299:\n        /* \"contracts/4_SmartGTFX.sol\":27106:27112  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27096:27112  srcRep != dstRep */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27096:27102  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27096:27112  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27096:27126  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_326\n      jumpi\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27125:27126  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27116:27122  amount */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27116:27126  amount > 0 */\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":27096:27126  srcRep != dstRep && amount > 0 */\n    tag_326:\n        /* \"contracts/4_SmartGTFX.sol\":27092:27889  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27146:27166  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27142:27504  if (srcRep != address(0)) {... */\n      tag_328\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27205:27227  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27186:27202  uint32 srcRepNum */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27205:27227  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27205:27219  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":27205:27227  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27265:27278  srcRepNum > 0 */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27265:27325  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_329\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":27324:27325  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27265:27325  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_330)\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27281:27300  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27281:27292  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":27281:27300  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27281:27315  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":27301:27314  srcRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/4_SmartGTFX.sol\":27281:27315  checkpoints[srcRep][srcRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27313:27314  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":27281:27321  checkpoints[srcRep][srcRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":27265:27325  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_330:\n        /* \"contracts/4_SmartGTFX.sol\":27245:27325  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27343:27360  uint256 srcRepNew */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27363:27414  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      tag_331\n        /* \"contracts/4_SmartGTFX.sol\":27377:27383  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27363:27414  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520766f746520616d6f756e7420756e646572666c6f7773000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27363:27372  srcRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27363:27376  srcRepOld.sub */\n      tag_159\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27363:27414  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"contracts/4_SmartGTFX.sol\":27343:27414  uint256 srcRepNew = srcRepOld.sub(amount, \"The vote amount underflows\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27432:27489  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_332\n        /* \"contracts/4_SmartGTFX.sol\":27449:27455  srcRep */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":27457:27466  srcRepNum */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27468:27477  srcRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27479:27488  srcRepNew */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27432:27448  _writeCheckpoint */\n      tag_333\n        /* \"contracts/4_SmartGTFX.sol\":27432:27489  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/4_SmartGTFX.sol\":27142:27504  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27522:27542  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27518:27879  if (dstRep != address(0)) {... */\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27581:27603  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27562:27578  uint32 dstRepNum */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27581:27603  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27581:27595  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":27581:27603  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27641:27654  dstRepNum > 0 */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27641:27701  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_335\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":27700:27701  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27641:27701  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_336)\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27657:27676  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27657:27668  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":27657:27676  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27657:27691  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":27677:27690  dstRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/4_SmartGTFX.sol\":27657:27691  checkpoints[dstRep][dstRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27689:27690  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":27657:27697  checkpoints[dstRep][dstRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":27641:27701  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_336:\n        /* \"contracts/4_SmartGTFX.sol\":27621:27701  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27719:27736  uint256 dstRepNew */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27739:27789  dstRepOld.add(amount, \"The vote amount overflows\") */\n      tag_337\n        /* \"contracts/4_SmartGTFX.sol\":27753:27759  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27739:27789  dstRepOld.add(amount, \"The vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520766f746520616d6f756e74206f766572666c6f777300000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27739:27748  dstRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27739:27752  dstRepOld.add */\n      tag_170\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27739:27789  dstRepOld.add(amount, \"The vote amount overflows\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/4_SmartGTFX.sol\":27719:27789  uint256 dstRepNew = dstRepOld.add(amount, \"The vote amount overflows\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27807:27864  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_253\n        /* \"contracts/4_SmartGTFX.sol\":27824:27830  dstRep */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":27832:27841  dstRepNum */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27843:27852  dstRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27854:27863  dstRepNew */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27807:27823  _writeCheckpoint */\n      tag_333\n        /* \"contracts/4_SmartGTFX.sol\":27807:27864  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":2048:2176  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n        /* \"contracts/4_SmartGTFX.sol\":2106:2113  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":2128:2171  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_244\n        /* \"contracts/4_SmartGTFX.sol\":2132:2133  a */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":2135:2136  b */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":2128:2171  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2128:2131  sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":2128:2171  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":27901:28501  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {... */\n    tag_333:\n        /* \"contracts/4_SmartGTFX.sol\":28020:28038  uint32 blockNumber */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28041:28097  safe32(block.number, \"The block number exceeds 32 bits\") */\n      tag_342\n        /* \"contracts/4_SmartGTFX.sol\":28048:28060  block.number */\n      number\n        /* \"contracts/4_SmartGTFX.sol\":28041:28097  safe32(block.number, \"The block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520626c6f636b206e756d62657220657863656564732033322062697473\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28041:28047  safe32 */\n      tag_343\n        /* \"contracts/4_SmartGTFX.sol\":28041:28097  safe32(block.number, \"The block number exceeds 32 bits\") */\n      jump\t// in\n    tag_342:\n        /* \"contracts/4_SmartGTFX.sol\":28020:28097  uint32 blockNumber = safe32(block.number, \"The block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28125:28126  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28110:28122  nCheckpoints */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":28110:28126  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":28110:28195  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_344\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28130:28152  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28130:28141  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28130:28152  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28130:28195  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28153:28169  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28130:28170  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28130:28180  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":28130:28195  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup3\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":28130:28180  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      swap2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":28130:28195  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":28110:28195  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_344:\n        /* \"contracts/4_SmartGTFX.sol\":28106:28430  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_345\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28209:28231  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28209:28220  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28209:28231  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28209:28249  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28232:28248  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28209:28249  checkpoints[delegatee][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28247:28248  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":28209:28255  checkpoints[delegatee][nCheckpoints - 1].votes */\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28209:28266  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28106:28430  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_346)\n    tag_345:\n        /* \"contracts/4_SmartGTFX.sol\":28332:28365  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28293:28315  checkpoints[delegatee] */\n      dup11\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28293:28304  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28293:28315  checkpoints[delegatee] */\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28293:28329  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28293:28365  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap6\n      mload\n      dup7\n      sload\n      swap1\n      dup7\n      and\n      not(0xffffffff)\n      swap2\n      dup3\n      and\n      or\n      dup8\n      sstore\n      swap3\n      mload\n      0x01\n      swap7\n      dup8\n      add\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28377:28402  numCheckpoints[delegatee] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28377:28391  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":28377:28402  numCheckpoints[delegatee] */\n      swap1\n      swap3\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28377:28421  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":28405:28421  nCheckpoints + 1 */\n      swap3\n      dup9\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28377:28421  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28106:28430  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_346:\n        /* \"contracts/4_SmartGTFX.sol\":28443:28494  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap3\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":27901:28501  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28511:28672  function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_343:\n        /* \"contracts/4_SmartGTFX.sol\":28589:28595  uint32 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28626:28638  errorMessage */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":28619:28624  2**32 */\n      0x0100000000\n        /* \"contracts/4_SmartGTFX.sol\":28615:28624  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":28607:28639  require(n < 2**32, errorMessage) */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n        /* \"contracts/4_SmartGTFX.sol\":28607:28639  require(n < 2**32, errorMessage) */\n    tag_348:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28663:28664  n */\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":28511:28672  function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13393:28996  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n    tag_211:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9 43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373\n    data_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77 54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d 43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973 546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b 5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1 546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866 454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e 43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288 43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373\n    data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf 44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929\n    data_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee 43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820f3702293398678c0ee8106b36f91ceeec521405537a18e9687443fb070a6826764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b506040516200299a3803806200299a833981810160405260208110156200004457600080fd5b505160006200005b6001600160e01b036200019016565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506040805180820190915260188082527f47697473686f636b2046696e616e636520546573746e657400000000000000006020909201918252620000eb9160079162000195565b50604080518082019091526003808252621d11d560ea1b6020909201918252620001189160069162000195565b506005805460ff191660121790556a295be96e6406697200000060048190556001600160a01b0382166000818152600260209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35062000237565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d857805160ff191683800117855562000208565b8280016001018555821562000208579182015b8281111562000208578251825591602001919060010190620001eb565b50620002169291506200021a565b5090565b6200019291905b8082111562000216576000815560010162000221565b61275380620002476000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063782d6fe11161010f578063bd1870a3116100a2578063dd62ed3e11610071578063dd62ed3e146106a4578063e7a324dc146106d2578063f1127ed8146106da578063f2fde38b1461072c576101e5565b8063bd1870a314610556578063c3cda5201461057c578063cae9ca51146105c3578063d79725801461067e576101e5565b806395d89b41116100de57806395d89b41146104d0578063a457c2d7146104d8578063a9059cbb14610504578063b4b5ea5714610530576101e5565b8063782d6fe11461044d5780637ecebe001461049a578063893d20e8146104c05780638da5cb5b146104c8576101e5565b806342966c68116101875780636a28f000116101565780636a28f000146103d85780636fcfff45146103e057806370a082311461041f578063715018a614610445576101e5565b806342966c6814610349578063587cde1e146103665780635c19a95c146103a857806362a5af3b146103d0576101e5565b806320606b70116101c357806320606b70146102c157806323b872dd146102c9578063313ce567146102ff578063395093511461031d576101e5565b806306fdde03146101ea578063095ea7b31461026757806318160ddd146102a7575b600080fd5b6101f2610752565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356107e8565b604080519115158252519081900360200190f35b6102af6108aa565b60408051918252519081900360200190f35b6102af6108b0565b610293600480360360608110156102df57600080fd5b506001600160a01b038135811691602081013590911690604001356108cb565b6103076109f9565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561033357600080fd5b506001600160a01b038135169060200135610a02565b6102936004803603602081101561035f57600080fd5b5035610b14565b61038c6004803603602081101561037c57600080fd5b50356001600160a01b0316610bd4565b604080516001600160a01b039092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b0316610bef565b005b6103ce610ca8565b6103ce610d3c565b610406600480360360208110156103f657600080fd5b50356001600160a01b0316610dca565b6040805163ffffffff9092168252519081900360200190f35b6102af6004803603602081101561043557600080fd5b50356001600160a01b0316610de2565b6103ce610dfd565b6104796004803603604081101561046357600080fd5b506001600160a01b038135169060200135610e9f565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102af600480360360208110156104b057600080fd5b50356001600160a01b03166110cd565b61038c6110df565b61038c6110ee565b6101f26110fd565b610293600480360360408110156104ee57600080fd5b506001600160a01b03813516906020013561115e565b6102936004803603604081101561051a57600080fd5b506001600160a01b038135169060200135611270565b6104796004803603602081101561054657600080fd5b50356001600160a01b0316611328565b6103ce6004803603602081101561056c57600080fd5b50356001600160a01b0316611394565b6103ce600480360360c081101561059257600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135611435565b610293600480360360608110156105d957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117c9945050505050565b6103ce6004803603602081101561069457600080fd5b50356001600160a01b031661198e565b6102af600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516611a35565b6102af611a60565b61070c600480360360408110156106f057600080fd5b5080356001600160a01b0316906020013563ffffffff16611a7b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103ce6004803603602081101561074257600080fd5b50356001600160a01b0316611aa8565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050905090565b60008054600160a01b900460ff161561083a576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561088e576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610899611b09565b8484611b0d565b5060015b92915050565b60045490565b60405180604361261982396043019050604051809103902081565b60008054600160a01b900460ff161561091d576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610971576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61097c848484611bf9565b6000610986611b09565b6001600160a01b0380871660009081526003602090815260408083209385168352929052205490915060001981146109ed576109ed86836109e8876040518060600160405280602581526020016125f46025913986919063ffffffff611db816565b611b0d565b50600195945050505050565b60055460ff1690565b60008054600160a01b900460ff1615610a54576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610aa8576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610ab3611b09565b846109e8856040518060600160405280602181526020016125446021913960036000610add611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611e4f16565b60008054600160a01b900460ff1615610b66576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610bba576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610bcb610bc5611b09565b83611ead565b5060015b919050565b6008602052600090815260409020546001600160a01b031681565b600054600160a01b900460ff1615610c40576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610c94576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610ca5610c9f611b09565b82611fed565b50565b610cb0611b09565b6000546001600160a01b03908116911614610d00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b610d44611b09565b6000546001600160a01b03908116911614610d94576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b600a6020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526002602052604090205490565b610e05611b09565b6000546001600160a01b03908116911614610e55576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000438210610eea576040805162461bcd60e51b8152602060048201526012602482015271139bdd0819195d195c9b5a5b9959081e595d60721b604482015290519081900360640190fd5b6001600160a01b0383166000908152600a602052604090205463ffffffff1680610f185760009150506108a4565b6001600160a01b038416600090815260096020908152604080832063ffffffff600019860181168552925290912054168310610f90576001600160a01b038416600090815260096020908152604080832063ffffffff6000198601168452909152902060010154610f889061206d565b9150506108a4565b6001600160a01b038416600090815260096020908152604080832083805290915290205463ffffffff16831015610fcb5760009150506108a4565b600060001982015b8163ffffffff168163ffffffff16111561108d57600282820363ffffffff16048103610ffd61250a565b506001600160a01b038716600090815260096020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152908714156110685761105c816020015161206d565b955050505050506108a4565b805163ffffffff1687111561107f57819350611086565b6001820392505b5050610fd3565b6001600160a01b038616600090815260096020908152604080832063ffffffff861684529091529020600101546110c39061206d565b9695505050505050565b600b6020526000908152604090205481565b60006110e96110ee565b905090565b6000546001600160a01b031690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b60008054600160a01b900460ff16156111b0576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611204576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a061120f611b09565b846109e8856040518060600160405280602281526020016125d26022913960036000611239611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611db816565b60008054600160a01b900460ff16156112c2576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611316576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0611321611b09565b8484611bf9565b6001600160a01b0381166000908152600a602052604081205463ffffffff168061135357600061138d565b6001600160a01b038316600090815260096020908152604080832063ffffffff600019860116845290915290206001015461138d9061206d565b9392505050565b61139c611b09565b6000546001600160a01b039081169116146113ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b600054600160a01b900460ff1615611486576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff16156114da576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b600060405180806126196043913960430190506040518091039020600760405180828054600181600116156101000203166002900480156115525780601f10611530576101008083540402835291820191611552565b820191906000526020600020905b81548152906001019060200180831161153e575b50509150506040518091039020611567612087565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b03168152602001945050505050604051602081830303815290604052805190602001209050600060405180806126c4603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa1580156116a5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611701576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b602052604090208054600181019091558914611765576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015290519081900360640190fd5b874211156117b2576040805162461bcd60e51b8152602060048201526015602482015274151a19481cda59db985d1d5c9948195e1c1a5c9959605a1b604482015290519081900360640190fd5b6117bc818b611fed565b505050505b505050505050565b60008054600160a01b900460ff161561181b576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561186f576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61188161187a611b09565b8585611b0d565b836001600160a01b0316638f4ffcb1611898611b09565b8530866040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561191d578181015183820152602001611905565b50505050905090810190601f16801561194a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561196c57600080fd5b505af1158015611980573d6000803e3d6000fd5b506001979650505050505050565b611996611b09565b6000546001600160a01b039081169116146119e6576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60405180603a6126c48239603a019050604051809103902081565b60096020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b611ab0611b09565b6000546001600160a01b03908116911614611b00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b610ca58161208b565b3390565b6001600160a01b038316611b525760405162461bcd60e51b815260040180806020018281038252602481526020018061258b6024913960400191505060405180910390fd5b6001600160a01b038216611b975760405162461bcd60e51b81526004018080602001828103825260228152602001806125226022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061267c6025913960400191505060405180910390fd5b6001600160a01b038216611c835760405162461bcd60e51b81526004018080602001828103825260238152602001806126a16023913960400191505060405180910390fd5b611cc6816040518060600160405280602381526020016125af602391396001600160a01b038616600090815260026020526040902054919063ffffffff611db816565b6001600160a01b038085166000908152600260208181526040808420959095558451808601865260158152745468652062616c616e6365206f766572666c6f777360581b818301529387168352529190912054611d2a91839063ffffffff611e4f16565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a36001600160a01b03808416600090815260086020526040808220548584168352912054611db39291821691168361212b565b505050565b60008184841115611e475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578181015183820152602001611df4565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008383018285821015611ea45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b50949350505050565b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260218152602001806126fe6021913960400191505060405180910390fd5b604080518082018252601f81527f546865206275726e20616d6f756e7420657863656564732062616c616e6365006020808301919091526001600160a01b038516600090815260029091529190912054611f5391839063ffffffff611db816565b6001600160a01b038316600090815260026020526040902055600454611f7f908263ffffffff6122e816565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001600160a01b03808316600090815260086020526040812054611fe99216908361212b565b5050565b6001600160a01b03808316600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461206782848361212b565b50505050565b6000600160601b82106120835750600019610bcf565b5090565b4690565b6001600160a01b0381166120d05760405162461bcd60e51b81526004018080602001828103825260268152602001806125656026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b03161415801561214d5750600081115b15611db3576001600160a01b0383161561221f576001600160a01b0383166000908152600a602052604081205463ffffffff16908161218d5760006121bf565b6001600160a01b038516600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b9050600061220d846040518060400160405280601a81526020017f54686520766f746520616d6f756e7420756e646572666c6f777300000000000081525084611db89092919063ffffffff16565b905061221b8684848461232a565b5050505b6001600160a01b03821615611db3576001600160a01b0382166000908152600a602052604081205463ffffffff16908161225a57600061228c565b6001600160a01b038416600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b905060006122da846040518060400160405280601981526020017f54686520766f746520616d6f756e74206f766572666c6f77730000000000000081525084611e4f9092919063ffffffff16565b90506117c18584848461232a565b600061138d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611db8565b600061236b436040518060400160405280602081526020017f54686520626c6f636b206e756d626572206578636565647320333220626974738152506124ac565b905060008463ffffffff161180156123b457506001600160a01b038516600090815260096020908152604080832063ffffffff6000198901811685529252909120548282169116145b156123f1576001600160a01b038516600090815260096020908152604080832063ffffffff60001989011684529091529020600101829055612462565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600984528681208b8616825284528681209551865490861663ffffffff199182161787559251600196870155908152600a9092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106125025760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b509192915050565b60408051808201909152600080825260208201529056fe43616e6e6f7420617070726f766520746f20746865207a65726f206164647265737354686520696e6372656173656420616c6c6f77616e6365206f766572666c6f77734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e7366657220616d6f756e7420657863656564732062616c616e63655468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e7366657220746f20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792943616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a72315820f3702293398678c0ee8106b36f91ceeec521405537a18e9687443fb070a6826764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x299A CODESIZE SUB DUP1 PUSH3 0x299A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 PUSH3 0x5B PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x190 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP1 DUP3 MSTORE PUSH32 0x47697473686F636B2046696E616E636520546573746E65740000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xEB SWAP2 PUSH1 0x7 SWAP2 PUSH3 0x195 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x1D11D5 PUSH1 0xEA SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x118 SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x195 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x295BE96E64066972000000 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH3 0x237 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1D8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x208 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x208 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x208 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1EB JUMP JUMPDEST POP PUSH3 0x216 SWAP3 SWAP2 POP PUSH3 0x21A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x192 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x221 JUMP JUMPDEST PUSH2 0x2753 DUP1 PUSH3 0x247 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD1870A3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0x67E JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x530 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C8 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6A28F000 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x445 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x3D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x307 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x115E JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x17C9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198E JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x899 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2619 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP5 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9ED JUMPI PUSH2 0x9ED DUP7 DUP4 PUSH2 0x9E8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F4 PUSH1 0x25 SWAP2 CODECOPY DUP7 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0xAB3 PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2544 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xADD PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBCB PUSH2 0xBC5 PUSH2 0x1B09 JUMP JUMPDEST DUP4 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 PUSH2 0xC9F PUSH2 0x1B09 JUMP JUMPDEST DUP3 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD0819195D195C9B5A5B9959081E595D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xF90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xFFD PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1068 JUMPI PUSH2 0x105C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x206D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x8A4 JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x107F JUMPI DUP2 SWAP4 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10C3 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1204 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x120F PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x1239 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x1321 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1353 JUMPI PUSH1 0x0 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x138D SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1486 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2619 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x1567 PUSH2 0x2087 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x26C4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1701 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1765 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A19481CDA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BC DUP2 DUP12 PUSH2 0x1FED JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x181B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x186F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1881 PUSH2 0x187A PUSH2 0x1B09 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 PUSH2 0x1898 PUSH2 0x1B09 JUMP JUMPDEST DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1905 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x194A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1996 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x26C4 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0x208B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2522 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x267C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25AF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x5468652062616C616E6365206F766572666C6F7773 PUSH1 0x58 SHL DUP2 DUP4 ADD MSTORE SWAP4 DUP8 AND DUP4 MSTORE MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1D2A SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1DB3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E39 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 DUP6 DUP3 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x546865206275726E20616D6F756E7420657863656564732062616C616E636500 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1F53 SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1F7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x22E8 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FE9 SWAP3 AND SWAP1 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x2067 DUP3 DUP5 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 SHL DUP3 LT PUSH2 0x2083 JUMPI POP PUSH1 0x0 NOT PUSH2 0xBCF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2565 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x214D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x221F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220D DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E7420756E646572666C6F7773000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1DB8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x221B DUP7 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x225A JUMPI PUSH1 0x0 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DA DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E74206F766572666C6F777300000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1E4F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17C1 DUP6 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520626C6F636B206E756D62657220657863656564732033322062697473 DUP2 MSTORE POP PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x23B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420617070726F766520746F20746865 KECCAK256 PUSH27 0x65726F206164647265737354686520696E6372656173656420616C PUSH13 0x6F77616E6365206F766572666C PUSH16 0x77734F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F206164647265737343 PUSH2 0x6E6E PUSH16 0x7420617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737354 PUSH9 0x65207472616E736665 PUSH19 0x20616D6F756E7420657863656564732062616C PUSH2 0x6E63 PUSH6 0x546865206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F546865207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E657243616E6E6F PUSH21 0x207472616E736665722066726F6D20746865207A65 PUSH19 0x6F206164647265737343616E6E6F7420747261 PUSH15 0x7366657220746F20746865207A6572 PUSH16 0x206164647265737344656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 NUMBER PUSH2 0x6E6E PUSH16 0x74206275726E2066726F6D2074686520 PUSH27 0x65726F2061646472657373A265627A7A72315820F3702293398678 0xC0 0xEE DUP2 MOD 0xB3 PUSH16 0x91CEEEC521405537A18E9687443FB070 0xA6 DUP3 PUSH8 0x64736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "13393:15603:0:-;;;11902:1;11885:18;;-1:-1:-1;;;;11885:18:0;;;15884:274;5:2:-1;;;;30:1;27;20:12;5:2;15884:274:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15884:274:0;7487:17;7507:12;-1:-1:-1;;;;;7507:10:0;:12;:::i;:::-;7525:6;:18;;-1:-1:-1;;;;;;7525:18:0;-1:-1:-1;;;;;7525:18:0;;;;;;;7554:43;;7525:18;;-1:-1:-1;7525:18:0;7554:43;;7525:6;;7554:43;-1:-1:-1;15930:34:0;;;;;;;;;;;;;;;;;;;;;;;:5;;:34;:::i;:::-;-1:-1:-1;15974:15:0;;;;;;;;;;;;;-1:-1:-1;;;15974:15:0;;;;;;;;;:7;;:15;:::i;:::-;-1:-1:-1;15999:9:0;:14;;-1:-1:-1;;15999:14:0;16011:2;15999:14;;;16038:11;16023:12;:26;;;-1:-1:-1;;;;;16059:18:0;;15999:9;16059:18;;;:9;:18;;;;;;;;:33;;;16108:43;;;;;;16059:18;;15999:9;;16108:43;;;;;;;;;;15884:274;13393:15603;;6415:90;6490:10;6415:90;;:::o;13393:15603::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13393:15603:0;;;-1:-1:-1;13393:15603:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c8063782d6fe11161010f578063bd1870a3116100a2578063dd62ed3e11610071578063dd62ed3e146106a4578063e7a324dc146106d2578063f1127ed8146106da578063f2fde38b1461072c576101e5565b8063bd1870a314610556578063c3cda5201461057c578063cae9ca51146105c3578063d79725801461067e576101e5565b806395d89b41116100de57806395d89b41146104d0578063a457c2d7146104d8578063a9059cbb14610504578063b4b5ea5714610530576101e5565b8063782d6fe11461044d5780637ecebe001461049a578063893d20e8146104c05780638da5cb5b146104c8576101e5565b806342966c68116101875780636a28f000116101565780636a28f000146103d85780636fcfff45146103e057806370a082311461041f578063715018a614610445576101e5565b806342966c6814610349578063587cde1e146103665780635c19a95c146103a857806362a5af3b146103d0576101e5565b806320606b70116101c357806320606b70146102c157806323b872dd146102c9578063313ce567146102ff578063395093511461031d576101e5565b806306fdde03146101ea578063095ea7b31461026757806318160ddd146102a7575b600080fd5b6101f2610752565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356107e8565b604080519115158252519081900360200190f35b6102af6108aa565b60408051918252519081900360200190f35b6102af6108b0565b610293600480360360608110156102df57600080fd5b506001600160a01b038135811691602081013590911690604001356108cb565b6103076109f9565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561033357600080fd5b506001600160a01b038135169060200135610a02565b6102936004803603602081101561035f57600080fd5b5035610b14565b61038c6004803603602081101561037c57600080fd5b50356001600160a01b0316610bd4565b604080516001600160a01b039092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b0316610bef565b005b6103ce610ca8565b6103ce610d3c565b610406600480360360208110156103f657600080fd5b50356001600160a01b0316610dca565b6040805163ffffffff9092168252519081900360200190f35b6102af6004803603602081101561043557600080fd5b50356001600160a01b0316610de2565b6103ce610dfd565b6104796004803603604081101561046357600080fd5b506001600160a01b038135169060200135610e9f565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102af600480360360208110156104b057600080fd5b50356001600160a01b03166110cd565b61038c6110df565b61038c6110ee565b6101f26110fd565b610293600480360360408110156104ee57600080fd5b506001600160a01b03813516906020013561115e565b6102936004803603604081101561051a57600080fd5b506001600160a01b038135169060200135611270565b6104796004803603602081101561054657600080fd5b50356001600160a01b0316611328565b6103ce6004803603602081101561056c57600080fd5b50356001600160a01b0316611394565b6103ce600480360360c081101561059257600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135611435565b610293600480360360608110156105d957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117c9945050505050565b6103ce6004803603602081101561069457600080fd5b50356001600160a01b031661198e565b6102af600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516611a35565b6102af611a60565b61070c600480360360408110156106f057600080fd5b5080356001600160a01b0316906020013563ffffffff16611a7b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103ce6004803603602081101561074257600080fd5b50356001600160a01b0316611aa8565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050905090565b60008054600160a01b900460ff161561083a576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561088e576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610899611b09565b8484611b0d565b5060015b92915050565b60045490565b60405180604361261982396043019050604051809103902081565b60008054600160a01b900460ff161561091d576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610971576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61097c848484611bf9565b6000610986611b09565b6001600160a01b0380871660009081526003602090815260408083209385168352929052205490915060001981146109ed576109ed86836109e8876040518060600160405280602581526020016125f46025913986919063ffffffff611db816565b611b0d565b50600195945050505050565b60055460ff1690565b60008054600160a01b900460ff1615610a54576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610aa8576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610ab3611b09565b846109e8856040518060600160405280602181526020016125446021913960036000610add611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611e4f16565b60008054600160a01b900460ff1615610b66576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610bba576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610bcb610bc5611b09565b83611ead565b5060015b919050565b6008602052600090815260409020546001600160a01b031681565b600054600160a01b900460ff1615610c40576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610c94576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610ca5610c9f611b09565b82611fed565b50565b610cb0611b09565b6000546001600160a01b03908116911614610d00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b610d44611b09565b6000546001600160a01b03908116911614610d94576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b600a6020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526002602052604090205490565b610e05611b09565b6000546001600160a01b03908116911614610e55576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000438210610eea576040805162461bcd60e51b8152602060048201526012602482015271139bdd0819195d195c9b5a5b9959081e595d60721b604482015290519081900360640190fd5b6001600160a01b0383166000908152600a602052604090205463ffffffff1680610f185760009150506108a4565b6001600160a01b038416600090815260096020908152604080832063ffffffff600019860181168552925290912054168310610f90576001600160a01b038416600090815260096020908152604080832063ffffffff6000198601168452909152902060010154610f889061206d565b9150506108a4565b6001600160a01b038416600090815260096020908152604080832083805290915290205463ffffffff16831015610fcb5760009150506108a4565b600060001982015b8163ffffffff168163ffffffff16111561108d57600282820363ffffffff16048103610ffd61250a565b506001600160a01b038716600090815260096020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152908714156110685761105c816020015161206d565b955050505050506108a4565b805163ffffffff1687111561107f57819350611086565b6001820392505b5050610fd3565b6001600160a01b038616600090815260096020908152604080832063ffffffff861684529091529020600101546110c39061206d565b9695505050505050565b600b6020526000908152604090205481565b60006110e96110ee565b905090565b6000546001600160a01b031690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b60008054600160a01b900460ff16156111b0576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611204576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a061120f611b09565b846109e8856040518060600160405280602281526020016125d26022913960036000611239611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611db816565b60008054600160a01b900460ff16156112c2576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611316576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0611321611b09565b8484611bf9565b6001600160a01b0381166000908152600a602052604081205463ffffffff168061135357600061138d565b6001600160a01b038316600090815260096020908152604080832063ffffffff600019860116845290915290206001015461138d9061206d565b9392505050565b61139c611b09565b6000546001600160a01b039081169116146113ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b600054600160a01b900460ff1615611486576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff16156114da576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b600060405180806126196043913960430190506040518091039020600760405180828054600181600116156101000203166002900480156115525780601f10611530576101008083540402835291820191611552565b820191906000526020600020905b81548152906001019060200180831161153e575b50509150506040518091039020611567612087565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b03168152602001945050505050604051602081830303815290604052805190602001209050600060405180806126c4603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa1580156116a5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611701576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b602052604090208054600181019091558914611765576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015290519081900360640190fd5b874211156117b2576040805162461bcd60e51b8152602060048201526015602482015274151a19481cda59db985d1d5c9948195e1c1a5c9959605a1b604482015290519081900360640190fd5b6117bc818b611fed565b505050505b505050505050565b60008054600160a01b900460ff161561181b576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561186f576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61188161187a611b09565b8585611b0d565b836001600160a01b0316638f4ffcb1611898611b09565b8530866040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561191d578181015183820152602001611905565b50505050905090810190601f16801561194a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561196c57600080fd5b505af1158015611980573d6000803e3d6000fd5b506001979650505050505050565b611996611b09565b6000546001600160a01b039081169116146119e6576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60405180603a6126c48239603a019050604051809103902081565b60096020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b611ab0611b09565b6000546001600160a01b03908116911614611b00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b610ca58161208b565b3390565b6001600160a01b038316611b525760405162461bcd60e51b815260040180806020018281038252602481526020018061258b6024913960400191505060405180910390fd5b6001600160a01b038216611b975760405162461bcd60e51b81526004018080602001828103825260228152602001806125226022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061267c6025913960400191505060405180910390fd5b6001600160a01b038216611c835760405162461bcd60e51b81526004018080602001828103825260238152602001806126a16023913960400191505060405180910390fd5b611cc6816040518060600160405280602381526020016125af602391396001600160a01b038616600090815260026020526040902054919063ffffffff611db816565b6001600160a01b038085166000908152600260208181526040808420959095558451808601865260158152745468652062616c616e6365206f766572666c6f777360581b818301529387168352529190912054611d2a91839063ffffffff611e4f16565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a36001600160a01b03808416600090815260086020526040808220548584168352912054611db39291821691168361212b565b505050565b60008184841115611e475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578181015183820152602001611df4565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008383018285821015611ea45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b50949350505050565b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260218152602001806126fe6021913960400191505060405180910390fd5b604080518082018252601f81527f546865206275726e20616d6f756e7420657863656564732062616c616e6365006020808301919091526001600160a01b038516600090815260029091529190912054611f5391839063ffffffff611db816565b6001600160a01b038316600090815260026020526040902055600454611f7f908263ffffffff6122e816565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001600160a01b03808316600090815260086020526040812054611fe99216908361212b565b5050565b6001600160a01b03808316600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461206782848361212b565b50505050565b6000600160601b82106120835750600019610bcf565b5090565b4690565b6001600160a01b0381166120d05760405162461bcd60e51b81526004018080602001828103825260268152602001806125656026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b03161415801561214d5750600081115b15611db3576001600160a01b0383161561221f576001600160a01b0383166000908152600a602052604081205463ffffffff16908161218d5760006121bf565b6001600160a01b038516600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b9050600061220d846040518060400160405280601a81526020017f54686520766f746520616d6f756e7420756e646572666c6f777300000000000081525084611db89092919063ffffffff16565b905061221b8684848461232a565b5050505b6001600160a01b03821615611db3576001600160a01b0382166000908152600a602052604081205463ffffffff16908161225a57600061228c565b6001600160a01b038416600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b905060006122da846040518060400160405280601981526020017f54686520766f746520616d6f756e74206f766572666c6f77730000000000000081525084611e4f9092919063ffffffff16565b90506117c18584848461232a565b600061138d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611db8565b600061236b436040518060400160405280602081526020017f54686520626c6f636b206e756d626572206578636565647320333220626974738152506124ac565b905060008463ffffffff161180156123b457506001600160a01b038516600090815260096020908152604080832063ffffffff6000198901811685529252909120548282169116145b156123f1576001600160a01b038516600090815260096020908152604080832063ffffffff60001989011684529091529020600101829055612462565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600984528681208b8616825284528681209551865490861663ffffffff199182161787559251600196870155908152600a9092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106125025760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b509192915050565b60408051808201909152600080825260208201529056fe43616e6e6f7420617070726f766520746f20746865207a65726f206164647265737354686520696e6372656173656420616c6c6f77616e6365206f766572666c6f77734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e7366657220616d6f756e7420657863656564732062616c616e63655468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e7366657220746f20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792943616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a72315820f3702293398678c0ee8106b36f91ceeec521405537a18e9687443fb070a6826764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD1870A3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0x67E JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x530 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C8 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6A28F000 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x445 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x3D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x307 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x115E JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x17C9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198E JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x899 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2619 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP5 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9ED JUMPI PUSH2 0x9ED DUP7 DUP4 PUSH2 0x9E8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F4 PUSH1 0x25 SWAP2 CODECOPY DUP7 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0xAB3 PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2544 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xADD PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBCB PUSH2 0xBC5 PUSH2 0x1B09 JUMP JUMPDEST DUP4 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 PUSH2 0xC9F PUSH2 0x1B09 JUMP JUMPDEST DUP3 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD0819195D195C9B5A5B9959081E595D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xF90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xFFD PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1068 JUMPI PUSH2 0x105C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x206D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x8A4 JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x107F JUMPI DUP2 SWAP4 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10C3 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1204 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x120F PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x1239 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x1321 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1353 JUMPI PUSH1 0x0 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x138D SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1486 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2619 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x1567 PUSH2 0x2087 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x26C4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1701 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1765 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A19481CDA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BC DUP2 DUP12 PUSH2 0x1FED JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x181B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x186F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1881 PUSH2 0x187A PUSH2 0x1B09 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 PUSH2 0x1898 PUSH2 0x1B09 JUMP JUMPDEST DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1905 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x194A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1996 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x26C4 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0x208B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2522 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x267C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25AF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x5468652062616C616E6365206F766572666C6F7773 PUSH1 0x58 SHL DUP2 DUP4 ADD MSTORE SWAP4 DUP8 AND DUP4 MSTORE MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1D2A SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1DB3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E39 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 DUP6 DUP3 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x546865206275726E20616D6F756E7420657863656564732062616C616E636500 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1F53 SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1F7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x22E8 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FE9 SWAP3 AND SWAP1 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x2067 DUP3 DUP5 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 SHL DUP3 LT PUSH2 0x2083 JUMPI POP PUSH1 0x0 NOT PUSH2 0xBCF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2565 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x214D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x221F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220D DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E7420756E646572666C6F7773000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1DB8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x221B DUP7 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x225A JUMPI PUSH1 0x0 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DA DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E74206F766572666C6F777300000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1E4F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17C1 DUP6 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520626C6F636B206E756D62657220657863656564732033322062697473 DUP2 MSTORE POP PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x23B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420617070726F766520746F20746865 KECCAK256 PUSH27 0x65726F206164647265737354686520696E6372656173656420616C PUSH13 0x6F77616E6365206F766572666C PUSH16 0x77734F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F206164647265737343 PUSH2 0x6E6E PUSH16 0x7420617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737354 PUSH9 0x65207472616E736665 PUSH19 0x20616D6F756E7420657863656564732062616C PUSH2 0x6E63 PUSH6 0x546865206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F546865207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E657243616E6E6F PUSH21 0x207472616E736665722066726F6D20746865207A65 PUSH19 0x6F206164647265737343616E6E6F7420747261 PUSH15 0x7366657220746F20746865207A6572 PUSH16 0x206164647265737344656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 NUMBER PUSH2 0x6E6E PUSH16 0x74206275726E2066726F6D2074686520 PUSH27 0x65726F2061646472657373A265627A7A72315820F3702293398678 0xC0 0xEE DUP2 MOD 0xB3 PUSH16 0x91CEEEC521405537A18E9687443FB070 0xA6 DUP3 PUSH8 0x64736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "13393:15603:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13393:15603:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16650:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16650:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18431:177;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18431:177:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16792:91;;;:::i;:::-;;;;;;;;;;;;;;;;14650:122;;;:::i;19497:469::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;19497:469:0;;;;;;;;;;;;;;;;;:::i;16364:83::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20417:270;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;20417:270:0;;;;;;;;:::i;21681:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21681:143:0;;:::i;14114:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14114:45:0;-1:-1:-1;;;;;14114:45:0;;:::i;:::-;;;;-1:-1:-1;;;;;14114:45:0;;;;;;;;;;;;;;21966:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21966:128:0;-1:-1:-1;;;;;21966:128:0;;:::i;:::-;;12053:97;;;:::i;12156:101::-;;;:::i;14531:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14531:49:0;-1:-1:-1;;;;;14531:49:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;17079:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17079:110:0;-1:-1:-1;;;;;17079:110:0;;:::i;8253:127::-;;;:::i;24114:1192::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;24114:1192:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15058:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15058:42:0;-1:-1:-1;;;;;15058:42:0;;:::i;16220:83::-;;;:::i;7670:71::-;;;:::i;16506:87::-;;;:::i;21146:281::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;21146:281:0;;;;;;;;:::i;17448:183::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17448:183:0;;;;;;;;:::i;23465:227::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23465:227:0;-1:-1:-1;;;;;23465:227:0;;:::i;13261:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13261:128:0;-1:-1:-1;;;;;13261:128:0;;:::i;22517:754::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;22517:754:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18889:301::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;18889:301:0;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;18889:301:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;18889:301:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;18889:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18889:301:0;;-1:-1:-1;18889:301:0;;-1:-1:-1;;;;;18889:301:0:i;13132:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13132:123:0;-1:-1:-1;;;;;13132:123:0;;:::i;17925:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17925:134:0;;;;;;;;;;:::i;14863:117::-;;;:::i;14395:70::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14395:70:0;;-1:-1:-1;;;;;14395:70:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;8519:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8519:101:0;-1:-1:-1;;;;;8519:101:0;;:::i;16650:83::-;16721:5;16714:12;;;;;;;;-1:-1:-1;;16714:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16689:13;;16714:12;;16721:5;;16714:12;;16721:5;16714:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16650:83;:::o;18431:177::-;18525:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;18541:39;18550:12;:10;:12::i;:::-;18564:7;18573:6;18541:8;:39::i;:::-;-1:-1:-1;18597:4:0;13114:1;18431:177;;;;:::o;16792:91::-;16864:12;;16792:91;:::o;14650:122::-;14692:80;;;;;;;;;;;;;;;;;;14650:122;:::o;19497:469::-;19614:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;19630:36;19640:6;19648:9;19659:6;19630:9;:36::i;:::-;19676:15;19694:12;:10;:12::i;:::-;-1:-1:-1;;;;;19743:19:0;;;19716:24;19743:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;19676:30;;-1:-1:-1;;;19785:31:0;;19781:158;;19832:96;19841:6;19849:7;19858:69;19879:6;19858:69;;;;;;;;;;;;;;;;;:16;;:69;;:20;:69;:::i;:::-;19832:8;:96::i;:::-;-1:-1:-1;19955:4:0;;19497:469;-1:-1:-1;;;;;19497:469:0:o;16364:83::-;16431:9;;;;16364:83;:::o;20417:270::-;20523:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;20539:120;20548:12;:10;:12::i;:::-;20562:7;20571:87;20610:10;20571:87;;;;;;;;;;;;;;;;;:11;:25;20583:12;:10;:12::i;:::-;-1:-1:-1;;;;;20571:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;20571:25:0;;;:34;;;;;;;;;;;:87;;:38;:87;:::i;21681:143::-;21753:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;21769:27;21775:12;:10;:12::i;:::-;21789:6;21769:5;:27::i;:::-;-1:-1:-1;21813:4:0;13114:1;21681:143;;;:::o;14114:45::-;;;;;;;;;;;;-1:-1:-1;;;;;14114:45:0;;:::o;21966:128::-;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;22053:34;22063:12;:10;:12::i;:::-;22077:9;22053;:34::i;:::-;21966:128;:::o;12053:97::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;12098:8;:12;;-1:-1:-1;;;;12098:12:0;-1:-1:-1;;;12098:12:0;;;12134:9;;;;12098:8;12134:9;12053:97::o;12156:101::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;12214:1;12203:12;;-1:-1:-1;;;;12203:12:0;;;12239:11;;;;12214:1;12239:11;12156:101::o;14531:49::-;;;;;;;;;;;;;;;:::o;17079:110::-;-1:-1:-1;;;;;17164:18:0;17138:7;17164:18;;;:9;:18;;;;;;;17079:110::o;8253:127::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;8347:1;8331:6;;8310:40;;-1:-1:-1;;;;;8331:6:0;;;;8310:40;;8347:1;;8310:40;8373:1;8356:19;;-1:-1:-1;;;;;;8356:19:0;;;8253:127::o;24114:1192::-;24196:6;24236:12;24222:11;:26;24214:57;;;;;-1:-1:-1;;;24214:57:0;;;;;;;;;;;;-1:-1:-1;;;24214:57:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;24304:23:0;;24282:19;24304:23;;;:14;:23;;;;;;;;24341:17;24337:56;;24381:1;24374:8;;;;;24337:56;-1:-1:-1;;;;;24450:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;24471:16:0;;24450:38;;;;;;;;;:48;;:63;-1:-1:-1;24446:153:0;;-1:-1:-1;;;;;24543:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;24564:16:0;;24543:38;;;;;;;;24579:1;24543:44;;24536:52;;:6;:52::i;:::-;24529:59;;;;;24446:153;-1:-1:-1;;;;;24657:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;24653:86:0;;;24727:1;24720:8;;;;;24653:86;24749:12;-1:-1:-1;;24790:16:0;;24816:426;24831:5;24823:13;;:5;:13;;;24816:426;;;24894:1;24877:13;;;24876:19;;;24868:27;;24936:20;;:::i;:::-;-1:-1:-1;;;;;;24959:20:0;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;24936:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25005:27;;25001:231;;;25059:16;25066:2;:8;;;25059:6;:16::i;:::-;25052:23;;;;;;;;;25001:231;25100:12;;:26;;;-1:-1:-1;25096:136:0;;;25154:6;25146:14;;25096:136;;;25216:1;25207:6;:10;25199:18;;25096:136;24816:426;;;;;-1:-1:-1;;;;;25265:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;25258:41;;:6;:41::i;:::-;25251:48;24114:1192;-1:-1:-1;;;;;;24114:1192:0:o;15058:42::-;;;;;;;;;;;;;:::o;16220:83::-;16263:7;16289;:5;:7::i;:::-;16282:14;;16220:83;:::o;7670:71::-;7708:7;7730:6;-1:-1:-1;;;;;7730:6:0;7670:71;:::o;16506:87::-;16579:7;16572:14;;;;;;;;-1:-1:-1;;16572:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16547:13;;16572:14;;16579:7;;16572:14;;16579:7;16572:14;;;;;;;;;;;;;;;;;;;;;;;;21146:281;21257:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;21273:126;21282:12;:10;:12::i;:::-;21296:7;21305:93;21344:15;21305:93;;;;;;;;;;;;;;;;;:11;:25;21317:12;:10;:12::i;:::-;-1:-1:-1;;;;;21305:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;21305:25:0;;;:34;;;;;;;;;;;:93;;:38;:93;:::i;17448:183::-;17545:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;17561:42;17571:12;:10;:12::i;:::-;17585:9;17596:6;17561:9;:42::i;23465:227::-;-1:-1:-1;;;;;23570:23:0;;23530:6;23570:23;;;:14;:23;;;;;;;;23610:16;:75;;23684:1;23610:75;;;-1:-1:-1;;;;;23636:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;23657:16:0;;23636:38;;;;;;;;23672:1;23636:44;;23629:52;;:6;:52::i;:::-;23603:82;23465:227;-1:-1:-1;;;23465:227:0:o;13261:128::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13321:14:0;;13338:5;13321:14;;;:9;:14;;;;;;:22;;-1:-1:-1;;13321:22:0;;;13367:15;;;13338:5;13367:15;13261:128;:::o;22517:754::-;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;22664:23;14692:80;;;;;;;;;;;;;;;;;;;22744:5;22728:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22753:12;:10;:12::i;:::-;22775:4;22700:81;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22700:81:0;-1:-1:-1;;;;;22700:81:0;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22700:81:0;;;22690:92;;;;;;22664:118;;22792:18;14909:71;;;;;;;;;;;;;;;;;;;22823:57;;;;;;;;-1:-1:-1;;;;;22823:57:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;22823:57:0;;;;;22813:68;;;;;;-1:-1:-1;;;22918:57:0;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;22918:57:0;;;;;;22908:68;;;;;;;;;-1:-1:-1;23006:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22813:68;;-1:-1:-1;22908:68:0;;-1:-1:-1;;;23006:26:0;;;;;;;22823:57;-1:-1:-1;;23006:26:0;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;23006:26:0;;-1:-1:-1;;23006:26:0;;;-1:-1:-1;;;;;;;23050:23:0;;23042:53;;;;;-1:-1:-1;;;23042:53:0;;;;;;;;;;;;-1:-1:-1;;;23042:53:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;23122:17:0;;;;;;:6;:17;;;;;:19;;;;;;;;23113:28;;23105:54;;;;;-1:-1:-1;;;23105:54:0;;;;;;;;;;;;-1:-1:-1;;;23105:54:0;;;;;;;;;;;;;;;23184:6;23177:3;:13;;23169:47;;;;;-1:-1:-1;;;23169:47:0;;;;;;;;;;;;-1:-1:-1;;;23169:47:0;;;;;;;;;;;;;;;23233:31;23243:9;23254;23233;:31::i;:::-;23226:38;;;;13114:1;22517:754;;;;;;:::o;18889:301::-;19007:4;11992:8;;-1:-1:-1;;;11992:8:0;;;;:13;11984:41;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;-1:-1:-1;;;11984:41:0;;;;;;;;;;;;;;;13076:10;13066:21;;;;:9;:21;;;;;;;;13065:22;13057:47;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;-1:-1:-1;;;13057:47:0;;;;;;;;;;;;;;;19023:39;19032:12;:10;:12::i;:::-;19046:7;19055:6;19023:8;:39::i;:::-;19095:7;-1:-1:-1;;;;;19072:47:0;;19120:12;:10;:12::i;:::-;19134:6;19150:4;19157;19072:90;;;;;;;;;;;;;-1:-1:-1;;;;;19072:90:0;-1:-1:-1;;;;;19072:90:0;;;;;;;;;;;-1:-1:-1;;;;;19072:90:0;-1:-1:-1;;;;;19072:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;19072:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19072:90:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;19179:4:0;;18889:301;-1:-1:-1;;;;;;;18889:301:0:o;13132:123::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13190:14:0;;;;;;13207:4;13190:14;;;;;;;;:21;;-1:-1:-1;;13190:21:0;;;;;;;13235:13;;;13190:14;13235:13;13132:123;:::o;17925:134::-;-1:-1:-1;;;;;18025:18:0;;;17999:7;18025:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17925:134::o;14863:117::-;14909:71;;;;;;;;;;;;;;;;;;14863:117;:::o;14395:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8519:101::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;8587:28;8606:8;8587:18;:28::i;6415:90::-;6490:10;6415:90;:::o;25878:332::-;-1:-1:-1;;;;;25971:19:0;;25963:68;;;;-1:-1:-1;;;25963:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26049:21:0;;26041:68;;;;-1:-1:-1;;;26041:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26120:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;26171:32;;;;;;;;;;;;;;;;;25878:332;;;:::o;25312:560::-;-1:-1:-1;;;;;25409:20:0;;25401:70;;;;-1:-1:-1;;;25401:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25489:23:0;;25481:71;;;;-1:-1:-1;;;25481:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25583:68;25605:6;25583:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25583:17:0;;;;;;:9;:17;;;;;;;:68;;:21;:68;:::i;:::-;-1:-1:-1;;;;;25563:17:0;;;;;;;:9;:17;;;;;;;;:88;;;;25684:57;;;;;;;;;;-1:-1:-1;;;25684:57:0;;;;:20;;;;;;;;;;;:57;;25709:6;;25684:57;:24;:57;:::i;:::-;-1:-1:-1;;;;;25661:20:0;;;;;;;:9;:20;;;;;;;;;:80;;;;25756:35;;;;;;;25661:20;;25756:35;;;;;;;;;;;;;-1:-1:-1;;;;;25817:17:0;;;;;;;:9;:17;;;;;;;25836:20;;;;;;;;25802:63;;25817:17;;;;25836:20;25858:6;25802:14;:63::i;:::-;25312:560;;;:::o;2440:173::-;2526:7;2557:12;2549:6;;;;2541:29;;;;-1:-1:-1;;;2541:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2541:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2588:5:0;;;2440:173::o;1631:::-;1717:7;1744:5;;;1771:12;1763:6;;;;1755:29;;;;-1:-1:-1;;;1755:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1755:29:0;-1:-1:-1;1798:1:0;1631:173;-1:-1:-1;;;;1631:173:0:o;26216:404::-;-1:-1:-1;;;;;26291:21:0;;26283:67;;;;-1:-1:-1;;;26283:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26382:65;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26382:18:0;;-1:-1:-1;26382:18:0;;;:9;:18;;;;;;;;:65;;26405:6;;26382:65;:22;:65;:::i;:::-;-1:-1:-1;;;;;26361:18:0;;;;;;:9;:18;;;;;:86;26472:12;;:24;;26489:6;26472:24;:16;:24;:::i;:::-;26457:12;:39;26511:37;;;;;;;;26537:1;;-1:-1:-1;;;;;26511:37:0;;;;;;;;;;;;-1:-1:-1;;;;;26574:18:0;;;;;;;:9;:18;;;;;;26559:54;;26574:18;;26606:6;26559:14;:54::i;:::-;26216:404;;:::o;26626:369::-;-1:-1:-1;;;;;26728:20:0;;;26702:23;26728:20;;;:9;:20;;;;;;;;;;26785:9;:20;;;;;;26815;;;;:32;;;-1:-1:-1;;;;;;26815:32:0;;;;;;;26863:54;;26728:20;;;;;26785;;26815:32;;26728:20;;;26863:54;;26702:23;26863:54;26928:60;26943:15;26960:9;26971:16;26928:14;:60::i;:::-;26626:369;;;;:::o;28678:158::-;28728:6;-1:-1:-1;;;28750:1:0;:10;28746:58;;-1:-1:-1;;;28776:17:0;;28746:58;-1:-1:-1;28827:1:0;28678:158::o;28842:152::-;28953:9;28842:152;:::o;8713:211::-;-1:-1:-1;;;;;8782:22:0;;8774:73;;;;-1:-1:-1;;;8774:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8879:6;;;8858:38;;-1:-1:-1;;;;;8858:38:0;;;;8879:6;;;8858:38;;;8902:6;:17;;-1:-1:-1;;;;;;8902:17:0;-1:-1:-1;;;;;8902:17:0;;;;;;;;;;8713:211::o;27001:894::-;27106:6;-1:-1:-1;;;;;27096:16:0;:6;-1:-1:-1;;;;;27096:16:0;;;:30;;;;;27125:1;27116:6;:10;27096:30;27092:797;;;-1:-1:-1;;;;;27146:20:0;;;27142:362;;-1:-1:-1;;;;;27205:22:0;;27186:16;27205:22;;;:14;:22;;;;;;;;;27265:13;:60;;27324:1;27265:60;;;-1:-1:-1;;;;;27281:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;27301:13:0;;27281:34;;;;;;;;27313:1;27281:40;;27265:60;27245:80;;27343:17;27363:51;27377:6;27363:51;;;;;;;;;;;;;;;;;:9;:13;;:51;;;;;:::i;:::-;27343:71;;27432:57;27449:6;27457:9;27468;27479;27432:16;:57::i;:::-;27142:362;;;;-1:-1:-1;;;;;27522:20:0;;;27518:361;;-1:-1:-1;;;;;27581:22:0;;27562:16;27581:22;;;:14;:22;;;;;;;;;27641:13;:60;;27700:1;27641:60;;;-1:-1:-1;;;;;27657:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;27677:13:0;;27657:34;;;;;;;;27689:1;27657:40;;27641:60;27621:80;;27719:17;27739:50;27753:6;27739:50;;;;;;;;;;;;;;;;;:9;:13;;:50;;;;;:::i;:::-;27719:70;;27807:57;27824:6;27832:9;27843;27854;27807:16;:57::i;2048:128::-;2106:7;2128:43;2132:1;2135;2128:43;;;;;;;;;;;;;;;;;:3;:43::i;27901:600::-;28020:18;28041:56;28048:12;28041:56;;;;;;;;;;;;;;;;;:6;:56::i;:::-;28020:77;;28125:1;28110:12;:16;;;:85;;;;-1:-1:-1;;;;;;28130:22:0;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;28153:16:0;;28130:40;;;;;;;;;:50;:65;;;:50;;:65;28110:85;28106:324;;;-1:-1:-1;;;;;28209:22:0;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;28232:16:0;;28209:40;;;;;;;;28247:1;28209:46;:57;;;28106:324;;;28332:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28293:22:0;;-1:-1:-1;28293:22:0;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;28293:72:0;;;;;;;;;;;;;28377:25;;;:14;:25;;;;;;:44;;28405:16;;;28377:44;;;;;;;;;;28106:324;28443:51;;;;;;;;;;;;;;-1:-1:-1;;;;;28443:51:0;;;;;;;;;;;27901:600;;;;;:::o;28511:161::-;28589:6;28626:12;28619:5;28615:9;;28607:32;;;;-1:-1:-1;;;28607:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;28607:32:0;-1:-1:-1;28663:1:0;;28511:161;-1:-1:-1;;28511:161:0:o;13393:15603::-;;;;;;;;;;-1:-1:-1;13393:15603:0;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2013400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"allowance(address,address)": "1294",
								"approve(address,uint256)": "infinite",
								"approveAndCall(address,uint256,bytes)": "infinite",
								"balanceOf(address)": "1231",
								"burn(uint256)": "infinite",
								"checkpoints(address,uint32)": "2168",
								"decimals()": "1103",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1231",
								"freeze()": "infinite",
								"getCurrentVotes(address)": "2366",
								"getOwner()": "1162",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"lockUser(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1192",
								"numCheckpoints(address)": "1206",
								"owner()": "1149",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1089",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreeze()": "infinite",
								"unlockUser(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"ceil96(uint256)": "68",
								"getChainId()": "14",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "MSTORE"
								},
								{
									"begin": 11902,
									"end": 11903,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "DUP1"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "AND"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "SWAP1"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "SSTORE"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "POP"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "MLOAD"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "CODESIZE"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "SUB"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "DUP1"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "DUP4"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "CODECOPY"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "DUP2"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "DUP2"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "ADD"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "MLOAD"
								},
								{
									"begin": 7487,
									"end": 7504,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7507,
									"end": 7517,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "AND"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "JUMPDEST"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP1"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP4"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "AND"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP1"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP2"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "OR"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP3"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SSTORE"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "MLOAD"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP3"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP2"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "SWAP1"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "DUP3"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "SWAP1"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "DUP1"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "MLOAD"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "DUP1"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "DUP3"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "ADD"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "SWAP1"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "SWAP2"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "MSTORE"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "PUSH",
									"value": "18"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "DUP1"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "DUP3"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "MSTORE"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "PUSH",
									"value": "47697473686F636B2046696E616E636520546573746E65740000000000000000"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "SWAP1"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "SWAP3"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "ADD"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "SWAP2"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "DUP3"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "MSTORE"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "SWAP2"
								},
								{
									"begin": 15930,
									"end": 15935,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 15930,
									"end": 15935,
									"name": "SWAP2"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 15930,
									"end": 15964,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "DUP1"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "MLOAD"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "DUP1"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "DUP3"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "ADD"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "SWAP1"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "MSTORE"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "DUP1"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "DUP3"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1D11D5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "SWAP1"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "SWAP3"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "ADD"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "DUP3"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "MSTORE"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 15981,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 15974,
									"end": 15981,
									"name": "SWAP2"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 15974,
									"end": 15989,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15999,
									"end": 16008,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 15999,
									"end": 16013,
									"name": "DUP1"
								},
								{
									"begin": 15999,
									"end": 16013,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 15999,
									"end": 16013,
									"name": "AND"
								},
								{
									"begin": 16011,
									"end": 16013,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 15999,
									"end": 16013,
									"name": "OR"
								},
								{
									"begin": 15999,
									"end": 16013,
									"name": "SWAP1"
								},
								{
									"begin": 15999,
									"end": 16013,
									"name": "SSTORE"
								},
								{
									"begin": 16038,
									"end": 16049,
									"name": "PUSH",
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 16023,
									"end": 16035,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 16023,
									"end": 16049,
									"name": "DUP2"
								},
								{
									"begin": 16023,
									"end": 16049,
									"name": "SWAP1"
								},
								{
									"begin": 16023,
									"end": 16049,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "DUP3"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "AND"
								},
								{
									"begin": 15999,
									"end": 16008,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "DUP2"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "DUP2"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "MSTORE"
								},
								{
									"begin": 16059,
									"end": 16068,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "SWAP1"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "DUP2"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "MSTORE"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "DUP1"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "DUP4"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "KECCAK256"
								},
								{
									"begin": 16059,
									"end": 16092,
									"name": "DUP6"
								},
								{
									"begin": 16059,
									"end": 16092,
									"name": "SWAP1"
								},
								{
									"begin": 16059,
									"end": 16092,
									"name": "SSTORE"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "DUP1"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "MLOAD"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SWAP5"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "DUP6"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "MSTORE"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "MLOAD"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "SWAP3"
								},
								{
									"begin": 16059,
									"end": 16077,
									"name": "SWAP4"
								},
								{
									"begin": 15999,
									"end": 16008,
									"name": "SWAP2"
								},
								{
									"begin": 15999,
									"end": 16008,
									"name": "SWAP3"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SWAP3"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "DUP2"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SWAP1"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SUB"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SWAP1"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SWAP2"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "ADD"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "SWAP1"
								},
								{
									"begin": 16108,
									"end": 16151,
									"name": "LOG3"
								},
								{
									"begin": 15884,
									"end": 16158,
									"name": "POP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMP"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMPDEST"
								},
								{
									"begin": 6490,
									"end": 6500,
									"name": "CALLER"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMPDEST"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "SWAP1"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SLOAD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "AND"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ISZERO"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "MUL"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SUB"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "AND"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DIV"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "MSTORE"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "KECCAK256"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DIV"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "LT"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPI"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "MLOAD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "NOT"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "AND"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP4"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "OR"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP6"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SSTORE"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP6"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SSTORE"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ISZERO"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPI"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "GT"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ISZERO"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPI"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "MLOAD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SSTORE"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "POP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SWAP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP3"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "GT"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ISZERO"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPI"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP2"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "SSTORE"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "ADD"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMP"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "JUMPDEST"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "DUP1"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "CODECOPY"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13393,
									"end": 28996,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f3702293398678c0ee8106b36f91ceeec521405537a18e9687443fb070a6826764736f6c63430005110032",
									".code": [
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "MSTORE"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "POP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "LT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "SHR"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "CAE9CA51"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "D7972580"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "62A5AF3B"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "GT"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "EQ"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPI"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "REVERT"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMPDEST"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMPDEST"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MLOAD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP3"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MSTORE"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MLOAD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "ADD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MSTORE"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MLOAD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP3"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP3"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "ADD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP6"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "ADD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "ADD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "AND"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "ISZERO"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMPI"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP3"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SUB"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MLOAD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP4"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SUB"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "EXP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SUB"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "NOT"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "AND"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MSTORE"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "ADD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMPDEST"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP3"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "MLOAD"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "DUP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP2"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SUB"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "RETURN"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "JUMPDEST"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "DUP1"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "DUP2"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "AND"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP1"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "ADD"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "JUMPDEST"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "DUP1"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "MLOAD"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP2"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "ISZERO"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "ISZERO"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "DUP3"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "MSTORE"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "MLOAD"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP1"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "DUP2"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP1"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SUB"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "ADD"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP1"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "RETURN"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "JUMPDEST"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "JUMPDEST"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "DUP1"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "MLOAD"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "SWAP2"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "DUP3"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "MSTORE"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "MLOAD"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "DUP2"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "SUB"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "ADD"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "RETURN"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "JUMPDEST"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "JUMPDEST"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "DUP1"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "DUP2"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "DUP2"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "AND"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "SWAP2"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "DUP2"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "ADD"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "SWAP1"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "SWAP2"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "AND"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "SWAP1"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "ADD"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "JUMPDEST"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "JUMPDEST"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "DUP1"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "MLOAD"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SWAP1"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SWAP3"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "AND"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "DUP3"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "MSTORE"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "MLOAD"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SWAP1"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "DUP2"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SWAP1"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SUB"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "ADD"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SWAP1"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "RETURN"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "JUMPDEST"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "DUP1"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "DUP2"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "AND"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "SWAP1"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "ADD"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "JUMPDEST"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "DUP1"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "JUMPDEST"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "DUP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "AND"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "JUMPDEST"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "DUP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP3"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "AND"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "DUP3"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "MSTORE"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "MLOAD"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "DUP2"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SUB"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "ADD"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "RETURN"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "JUMPDEST"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "DUP1"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "AND"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "JUMPDEST"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "STOP"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMPDEST"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMPDEST"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "JUMPDEST"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "DUP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "AND"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "JUMPDEST"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "DUP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "MLOAD"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP3"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "AND"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "DUP3"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "MSTORE"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "MLOAD"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "DUP2"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SUB"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "ADD"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "RETURN"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "JUMPDEST"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "DUP1"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "AND"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "JUMPDEST"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "DUP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "DUP2"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "AND"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "ADD"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "JUMPDEST"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "DUP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "MLOAD"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP3"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "AND"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "DUP3"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "MSTORE"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "MLOAD"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "DUP2"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SUB"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "ADD"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP1"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "RETURN"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "JUMPDEST"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "DUP1"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "AND"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "JUMPDEST"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "JUMPDEST"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "JUMPDEST"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "DUP1"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "DUP2"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "AND"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "SWAP1"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "ADD"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "JUMPDEST"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "DUP1"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "DUP2"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "AND"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "SWAP1"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "ADD"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "JUMPDEST"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "DUP1"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "AND"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMPDEST"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "DUP1"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "AND"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "JUMPDEST"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "DUP1"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "DUP2"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "AND"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "SWAP1"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "DUP2"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "ADD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "SWAP1"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "DUP2"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "ADD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "SWAP1"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "DUP3"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "ADD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "AND"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "SWAP1"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "DUP2"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "ADD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "SWAP1"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "ADD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "JUMPDEST"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP3"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "AND"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP3"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP3"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DIV"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "MUL"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "MLOAD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "MSTORE"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP4"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP3"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP1"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP2"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "MSTORE"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "ADD"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP4"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP3"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMPDEST"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "DUP1"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "AND"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "JUMPDEST"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "DUP1"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "DUP2"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "DUP2"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "AND"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "SWAP2"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "ADD"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "AND"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "JUMPDEST"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "JUMPDEST"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "AND"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "ADD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "AND"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "JUMPDEST"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MLOAD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP4"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "AND"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP4"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MSTORE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP4"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "ADD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MSTORE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MLOAD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP3"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SUB"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "ADD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "RETURN"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "DUP1"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "AND"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMPDEST"
										},
										{
											"begin": 16721,
											"end": 16726,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SLOAD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MLOAD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP9"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ISZERO"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MUL"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP6"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP5"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP5"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DIV"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP4"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP5"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DIV"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MUL"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MSTORE"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MSTORE"
										},
										{
											"begin": 16689,
											"end": 16702,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16689,
											"end": 16702,
											"name": "SWAP4"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP3"
										},
										{
											"begin": 16721,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16721,
											"end": 16726,
											"name": "SWAP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP4"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16721,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ISZERO"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMPI"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "LT"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMPI"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP4"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SLOAD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DIV"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MUL"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP4"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MSTORE"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMP"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMPDEST"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MSTORE"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "KECCAK256"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMPDEST"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SLOAD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "MSTORE"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP4"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "GT"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMPI"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SUB"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "DUP3"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "ADD"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP2"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "JUMPDEST"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "POP"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "POP"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "POP"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "POP"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "POP"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "SWAP1"
										},
										{
											"begin": 16714,
											"end": 16726,
											"name": "POP"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "SWAP1"
										},
										{
											"begin": 16650,
											"end": 16733,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "JUMPDEST"
										},
										{
											"begin": 18525,
											"end": 18529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 18541,
											"end": 18580,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 18550,
											"end": 18562,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 18550,
											"end": 18560,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 18550,
											"end": 18562,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18550,
											"end": 18562,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 18550,
											"end": 18562,
											"name": "JUMPDEST"
										},
										{
											"begin": 18564,
											"end": 18571,
											"name": "DUP5"
										},
										{
											"begin": 18573,
											"end": 18579,
											"name": "DUP5"
										},
										{
											"begin": 18541,
											"end": 18549,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 18541,
											"end": 18580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18541,
											"end": 18580,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 18541,
											"end": 18580,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18597,
											"end": 18601,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "JUMPDEST"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP3"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "SWAP2"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "POP"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "POP"
										},
										{
											"begin": 18431,
											"end": 18608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "JUMPDEST"
										},
										{
											"begin": 16864,
											"end": 16876,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16864,
											"end": 16876,
											"name": "SLOAD"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "SWAP1"
										},
										{
											"begin": 16792,
											"end": 16883,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "JUMPDEST"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "MLOAD"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "DUP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "DUP3"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "CODECOPY"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "ADD"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "POP"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "MLOAD"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "DUP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP2"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SUB"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "KECCAK256"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "DUP2"
										},
										{
											"begin": 14650,
											"end": 14772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "JUMPDEST"
										},
										{
											"begin": 19614,
											"end": 19618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 19630,
											"end": 19666,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 19640,
											"end": 19646,
											"name": "DUP5"
										},
										{
											"begin": 19648,
											"end": 19657,
											"name": "DUP5"
										},
										{
											"begin": 19659,
											"end": 19665,
											"name": "DUP5"
										},
										{
											"begin": 19630,
											"end": 19639,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 19630,
											"end": 19666,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19630,
											"end": 19666,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 19630,
											"end": 19666,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19691,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19694,
											"end": 19706,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 19694,
											"end": 19704,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19694,
											"end": 19706,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19694,
											"end": 19706,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 19694,
											"end": 19706,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "DUP1"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "DUP8"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "AND"
										},
										{
											"begin": 19716,
											"end": 19740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "SWAP1"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "DUP2"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "MSTORE"
										},
										{
											"begin": 19743,
											"end": 19754,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "SWAP1"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "DUP2"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "MSTORE"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "DUP1"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "DUP4"
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "KECCAK256"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "SWAP4"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "DUP6"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "AND"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "DUP4"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "MSTORE"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "SWAP3"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "SWAP1"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "MSTORE"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "KECCAK256"
										},
										{
											"begin": 19743,
											"end": 19771,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19706,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19706,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 19785,
											"end": 19816,
											"name": "DUP2"
										},
										{
											"begin": 19785,
											"end": 19816,
											"name": "EQ"
										},
										{
											"begin": 19781,
											"end": 19939,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 19781,
											"end": 19939,
											"name": "JUMPI"
										},
										{
											"begin": 19832,
											"end": 19928,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 19841,
											"end": 19847,
											"name": "DUP7"
										},
										{
											"begin": 19849,
											"end": 19856,
											"name": "DUP4"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 19879,
											"end": 19885,
											"name": "DUP8"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "MLOAD"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "DUP1"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "ADD"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "MSTORE"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "DUP1"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "DUP2"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "MSTORE"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "ADD"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH data",
											"value": "5E83471B3A3D1FE92BFF19912BAB84DCC2C92190AF741E7C33D886D7EC91F5D1"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "SWAP2"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "CODECOPY"
										},
										{
											"begin": 19858,
											"end": 19874,
											"name": "DUP7"
										},
										{
											"begin": 19858,
											"end": 19874,
											"name": "SWAP2"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "SWAP1"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19858,
											"end": 19878,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "AND"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 19858,
											"end": 19927,
											"name": "JUMPDEST"
										},
										{
											"begin": 19832,
											"end": 19840,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 19832,
											"end": 19928,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19832,
											"end": 19928,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 19832,
											"end": 19928,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19955,
											"end": 19959,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19955,
											"end": 19959,
											"name": "SWAP6"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19497,
											"end": 19966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "JUMPDEST"
										},
										{
											"begin": 16431,
											"end": 16440,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16431,
											"end": 16440,
											"name": "SLOAD"
										},
										{
											"begin": 16431,
											"end": 16440,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16431,
											"end": 16440,
											"name": "AND"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "SWAP1"
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 20417,
											"end": 20687,
											"name": "JUMPDEST"
										},
										{
											"begin": 20523,
											"end": 20527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 20539,
											"end": 20659,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 20548,
											"end": 20558,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "JUMPDEST"
										},
										{
											"begin": 20562,
											"end": 20569,
											"name": "DUP5"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 20610,
											"end": 20620,
											"name": "DUP6"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "MLOAD"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "DUP1"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "ADD"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "MSTORE"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "DUP1"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "DUP2"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "MSTORE"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "ADD"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH data",
											"value": "AC444B4635A35929A68A5C8FA43076F8FD9D5DD9C52546538D69B2042F34C77"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "SWAP2"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "CODECOPY"
										},
										{
											"begin": 20571,
											"end": 20582,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20583,
											"end": 20595,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 20583,
											"end": 20593,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 20583,
											"end": 20595,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20583,
											"end": 20595,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 20583,
											"end": 20595,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP1"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "DUP2"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "AND"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "DUP3"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "MSTORE"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "DUP1"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "DUP4"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "ADD"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP4"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP1"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP4"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "MSTORE"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP2"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "DUP3"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP1"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "DUP2"
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "KECCAK256"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "SWAP2"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "DUP14"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "AND"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "DUP2"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "MSTORE"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "SWAP3"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "MSTORE"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "SWAP1"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "KECCAK256"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "SLOAD"
										},
										{
											"begin": 20571,
											"end": 20605,
											"name": "SWAP2"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "SWAP1"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20571,
											"end": 20609,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "AND"
										},
										{
											"begin": 20571,
											"end": 20658,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "JUMPDEST"
										},
										{
											"begin": 21753,
											"end": 21757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 21769,
											"end": 21796,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 21775,
											"end": 21787,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 21775,
											"end": 21785,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21775,
											"end": 21787,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21775,
											"end": 21787,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 21775,
											"end": 21787,
											"name": "JUMPDEST"
										},
										{
											"begin": 21789,
											"end": 21795,
											"name": "DUP4"
										},
										{
											"begin": 21769,
											"end": 21774,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 21769,
											"end": 21796,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21769,
											"end": 21796,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 21769,
											"end": 21796,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21813,
											"end": 21817,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "JUMPDEST"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "SWAP2"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "SWAP1"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "POP"
										},
										{
											"begin": 21681,
											"end": 21824,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "JUMPDEST"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "MSTORE"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "DUP2"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "MSTORE"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SWAP1"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "KECCAK256"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "AND"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "DUP2"
										},
										{
											"begin": 14114,
											"end": 14159,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "JUMPDEST"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 22053,
											"end": 22087,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 22063,
											"end": 22075,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 22063,
											"end": 22073,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 22063,
											"end": 22075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22063,
											"end": 22075,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 22063,
											"end": 22075,
											"name": "JUMPDEST"
										},
										{
											"begin": 22077,
											"end": 22086,
											"name": "DUP3"
										},
										{
											"begin": 22053,
											"end": 22062,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 22053,
											"end": 22087,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22053,
											"end": 22087,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 22053,
											"end": 22087,
											"name": "JUMPDEST"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "POP"
										},
										{
											"begin": 21966,
											"end": 22094,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 12098,
											"end": 12106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "DUP1"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "OR"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "DUP2"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "SSTORE"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "MLOAD"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "PUSH",
											"value": "962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "SWAP2"
										},
										{
											"begin": 12098,
											"end": 12106,
											"name": "SWAP1"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "LOG1"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "SSTORE"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "MLOAD"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "PUSH",
											"value": "F0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "SWAP2"
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "SWAP1"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "LOG1"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "JUMPDEST"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "MSTORE"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "DUP2"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "MSTORE"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "KECCAK256"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "SLOAD"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "AND"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "DUP2"
										},
										{
											"begin": 14531,
											"end": 14580,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "AND"
										},
										{
											"begin": 17138,
											"end": 17145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "SWAP1"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "DUP2"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "MSTORE"
										},
										{
											"begin": 17164,
											"end": 17173,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "MSTORE"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "SWAP1"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "KECCAK256"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "SLOAD"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "SWAP1"
										},
										{
											"begin": 17079,
											"end": 17189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP1"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SLOAD"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "AND"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP1"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "SWAP1"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "DUP4"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "SWAP1"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "LOG3"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "DUP1"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "AND"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SWAP1"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SSTORE"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "JUMPDEST"
										},
										{
											"begin": 24196,
											"end": 24202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24236,
											"end": 24248,
											"name": "NUMBER"
										},
										{
											"begin": 24222,
											"end": 24233,
											"name": "DUP3"
										},
										{
											"begin": 24222,
											"end": 24248,
											"name": "LT"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "JUMPI"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "DUP1"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "DUP2"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "MSTORE"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "DUP3"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "ADD"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "MSTORE"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "DUP3"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "ADD"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "139BDD0819195D195C9B5A5B9959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "DUP3"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "ADD"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "MSTORE"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "SWAP1"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "MLOAD"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "SWAP1"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "DUP2"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "SWAP1"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "SUB"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "ADD"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "SWAP1"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "REVERT"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 24214,
											"end": 24271,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "DUP4"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "AND"
										},
										{
											"begin": 24282,
											"end": 24301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "SWAP1"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "DUP2"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "MSTORE"
										},
										{
											"begin": 24304,
											"end": 24318,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "MSTORE"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "SWAP1"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "KECCAK256"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "SLOAD"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24304,
											"end": 24327,
											"name": "AND"
										},
										{
											"begin": 24341,
											"end": 24358,
											"name": "DUP1"
										},
										{
											"begin": 24337,
											"end": 24393,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 24337,
											"end": 24393,
											"name": "JUMPI"
										},
										{
											"begin": 24381,
											"end": 24382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24374,
											"end": 24382,
											"name": "SWAP2"
										},
										{
											"begin": 24374,
											"end": 24382,
											"name": "POP"
										},
										{
											"begin": 24374,
											"end": 24382,
											"name": "POP"
										},
										{
											"begin": 24374,
											"end": 24382,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24374,
											"end": 24382,
											"name": "JUMP"
										},
										{
											"begin": 24337,
											"end": 24393,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 24337,
											"end": 24393,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "DUP5"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "AND"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "SWAP1"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "DUP2"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "MSTORE"
										},
										{
											"begin": 24450,
											"end": 24461,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "SWAP1"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "DUP2"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "MSTORE"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "DUP1"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "DUP4"
										},
										{
											"begin": 24450,
											"end": 24470,
											"name": "KECCAK256"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24471,
											"end": 24487,
											"name": "DUP7"
										},
										{
											"begin": 24471,
											"end": 24487,
											"name": "ADD"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "DUP2"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "AND"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "DUP6"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "MSTORE"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "SWAP3"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "MSTORE"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "SWAP1"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "SWAP2"
										},
										{
											"begin": 24450,
											"end": 24488,
											"name": "KECCAK256"
										},
										{
											"begin": 24450,
											"end": 24498,
											"name": "SLOAD"
										},
										{
											"begin": 24450,
											"end": 24498,
											"name": "AND"
										},
										{
											"begin": 24450,
											"end": 24513,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24446,
											"end": 24599,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 24446,
											"end": 24599,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "DUP5"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "AND"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "SWAP1"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "DUP2"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "MSTORE"
										},
										{
											"begin": 24543,
											"end": 24554,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "SWAP1"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "DUP2"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "MSTORE"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "DUP1"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "DUP4"
										},
										{
											"begin": 24543,
											"end": 24563,
											"name": "KECCAK256"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24564,
											"end": 24580,
											"name": "DUP7"
										},
										{
											"begin": 24564,
											"end": 24580,
											"name": "ADD"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "AND"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "DUP5"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "MSTORE"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "SWAP1"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "SWAP2"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "MSTORE"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "SWAP1"
										},
										{
											"begin": 24543,
											"end": 24581,
											"name": "KECCAK256"
										},
										{
											"begin": 24579,
											"end": 24580,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24543,
											"end": 24587,
											"name": "ADD"
										},
										{
											"begin": 24543,
											"end": 24587,
											"name": "SLOAD"
										},
										{
											"begin": 24536,
											"end": 24588,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 24536,
											"end": 24588,
											"name": "SWAP1"
										},
										{
											"begin": 24536,
											"end": 24542,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 24536,
											"end": 24588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24536,
											"end": 24588,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 24536,
											"end": 24588,
											"name": "JUMPDEST"
										},
										{
											"begin": 24529,
											"end": 24588,
											"name": "SWAP2"
										},
										{
											"begin": 24529,
											"end": 24588,
											"name": "POP"
										},
										{
											"begin": 24529,
											"end": 24588,
											"name": "POP"
										},
										{
											"begin": 24529,
											"end": 24588,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24529,
											"end": 24588,
											"name": "JUMP"
										},
										{
											"begin": 24446,
											"end": 24599,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 24446,
											"end": 24599,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "DUP5"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "AND"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "SWAP1"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "DUP2"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "MSTORE"
										},
										{
											"begin": 24657,
											"end": 24668,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "SWAP1"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "DUP2"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "MSTORE"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "DUP1"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "DUP4"
										},
										{
											"begin": 24657,
											"end": 24677,
											"name": "KECCAK256"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "DUP4"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "DUP1"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "MSTORE"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "SWAP1"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "SWAP2"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "MSTORE"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "SWAP1"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "KECCAK256"
										},
										{
											"begin": 24657,
											"end": 24690,
											"name": "SLOAD"
										},
										{
											"begin": 24657,
											"end": 24680,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24657,
											"end": 24690,
											"name": "AND"
										},
										{
											"begin": 24657,
											"end": 24704,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24653,
											"end": 24739,
											"name": "ISZERO"
										},
										{
											"begin": 24653,
											"end": 24739,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 24653,
											"end": 24739,
											"name": "JUMPI"
										},
										{
											"begin": 24727,
											"end": 24728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24720,
											"end": 24728,
											"name": "SWAP2"
										},
										{
											"begin": 24720,
											"end": 24728,
											"name": "POP"
										},
										{
											"begin": 24720,
											"end": 24728,
											"name": "POP"
										},
										{
											"begin": 24720,
											"end": 24728,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24720,
											"end": 24728,
											"name": "JUMP"
										},
										{
											"begin": 24653,
											"end": 24739,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 24653,
											"end": 24739,
											"name": "JUMPDEST"
										},
										{
											"begin": 24749,
											"end": 24761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24790,
											"end": 24806,
											"name": "DUP3"
										},
										{
											"begin": 24790,
											"end": 24806,
											"name": "ADD"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "JUMPDEST"
										},
										{
											"begin": 24831,
											"end": 24836,
											"name": "DUP2"
										},
										{
											"begin": 24823,
											"end": 24836,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24823,
											"end": 24836,
											"name": "AND"
										},
										{
											"begin": 24823,
											"end": 24828,
											"name": "DUP2"
										},
										{
											"begin": 24823,
											"end": 24836,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24823,
											"end": 24836,
											"name": "AND"
										},
										{
											"begin": 24823,
											"end": 24836,
											"name": "GT"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "ISZERO"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "JUMPI"
										},
										{
											"begin": 24894,
											"end": 24895,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24877,
											"end": 24890,
											"name": "DUP3"
										},
										{
											"begin": 24877,
											"end": 24890,
											"name": "DUP3"
										},
										{
											"begin": 24877,
											"end": 24890,
											"name": "SUB"
										},
										{
											"begin": 24876,
											"end": 24895,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24876,
											"end": 24895,
											"name": "AND"
										},
										{
											"begin": 24876,
											"end": 24895,
											"name": "DIV"
										},
										{
											"begin": 24868,
											"end": 24895,
											"name": "DUP2"
										},
										{
											"begin": 24868,
											"end": 24895,
											"name": "SUB"
										},
										{
											"begin": 24936,
											"end": 24956,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 24936,
											"end": 24956,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 24936,
											"end": 24956,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24936,
											"end": 24956,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 24936,
											"end": 24956,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "DUP8"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "AND"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 24970,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "DUP1"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "DUP4"
										},
										{
											"begin": 24959,
											"end": 24979,
											"name": "KECCAK256"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "DUP1"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "DUP7"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "AND"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "DUP6"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "DUP4"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "SWAP3"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 24987,
											"name": "KECCAK256"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP2"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "MLOAD"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP4"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "ADD"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP3"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "MSTORE"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SLOAD"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP4"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "AND"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP3"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "MSTORE"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP4"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "ADD"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SLOAD"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP2"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "DUP2"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "ADD"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP2"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP2"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "MSTORE"
										},
										{
											"begin": 24936,
											"end": 24987,
											"name": "SWAP1"
										},
										{
											"begin": 25005,
											"end": 25032,
											"name": "DUP8"
										},
										{
											"begin": 25005,
											"end": 25032,
											"name": "EQ"
										},
										{
											"begin": 25001,
											"end": 25232,
											"name": "ISZERO"
										},
										{
											"begin": 25001,
											"end": 25232,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 25001,
											"end": 25232,
											"name": "JUMPI"
										},
										{
											"begin": 25059,
											"end": 25075,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 25066,
											"end": 25068,
											"name": "DUP2"
										},
										{
											"begin": 25066,
											"end": 25074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25066,
											"end": 25074,
											"name": "ADD"
										},
										{
											"begin": 25066,
											"end": 25074,
											"name": "MLOAD"
										},
										{
											"begin": 25059,
											"end": 25065,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 25059,
											"end": 25075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25059,
											"end": 25075,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 25059,
											"end": 25075,
											"name": "JUMPDEST"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "SWAP6"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "POP"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "POP"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "POP"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "POP"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "POP"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "POP"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 25052,
											"end": 25075,
											"name": "JUMP"
										},
										{
											"begin": 25001,
											"end": 25232,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 25001,
											"end": 25232,
											"name": "JUMPDEST"
										},
										{
											"begin": 25100,
											"end": 25112,
											"name": "DUP1"
										},
										{
											"begin": 25100,
											"end": 25112,
											"name": "MLOAD"
										},
										{
											"begin": 25100,
											"end": 25126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25100,
											"end": 25126,
											"name": "AND"
										},
										{
											"begin": 25100,
											"end": 25126,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "ISZERO"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "JUMPI"
										},
										{
											"begin": 25154,
											"end": 25160,
											"name": "DUP2"
										},
										{
											"begin": 25146,
											"end": 25160,
											"name": "SWAP4"
										},
										{
											"begin": 25146,
											"end": 25160,
											"name": "POP"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "JUMP"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "JUMPDEST"
										},
										{
											"begin": 25216,
											"end": 25217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25207,
											"end": 25213,
											"name": "DUP3"
										},
										{
											"begin": 25207,
											"end": 25217,
											"name": "SUB"
										},
										{
											"begin": 25199,
											"end": 25217,
											"name": "SWAP3"
										},
										{
											"begin": 25199,
											"end": 25217,
											"name": "POP"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 25096,
											"end": 25232,
											"name": "JUMPDEST"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "POP"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "POP"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "JUMP"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 24816,
											"end": 25242,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "DUP7"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "AND"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "SWAP1"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "DUP2"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "MSTORE"
										},
										{
											"begin": 25265,
											"end": 25276,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "SWAP1"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "DUP2"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "MSTORE"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "DUP1"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "DUP4"
										},
										{
											"begin": 25265,
											"end": 25285,
											"name": "KECCAK256"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "DUP7"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "AND"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "DUP5"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "MSTORE"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "SWAP1"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "SWAP2"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "MSTORE"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "SWAP1"
										},
										{
											"begin": 25265,
											"end": 25292,
											"name": "KECCAK256"
										},
										{
											"begin": 25265,
											"end": 25298,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25265,
											"end": 25298,
											"name": "ADD"
										},
										{
											"begin": 25265,
											"end": 25298,
											"name": "SLOAD"
										},
										{
											"begin": 25258,
											"end": 25299,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 25258,
											"end": 25299,
											"name": "SWAP1"
										},
										{
											"begin": 25258,
											"end": 25264,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 25258,
											"end": 25299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25258,
											"end": 25299,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 25258,
											"end": 25299,
											"name": "JUMPDEST"
										},
										{
											"begin": 25251,
											"end": 25299,
											"name": "SWAP7"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24114,
											"end": 25306,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "JUMPDEST"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "MSTORE"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "SWAP1"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "MSTORE"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "SWAP1"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "KECCAK256"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "SLOAD"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "DUP2"
										},
										{
											"begin": 15058,
											"end": 15100,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "JUMPDEST"
										},
										{
											"begin": 16263,
											"end": 16270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16296,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 16289,
											"end": 16294,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 16289,
											"end": 16296,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16289,
											"end": 16296,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 16289,
											"end": 16296,
											"name": "JUMPDEST"
										},
										{
											"begin": 16282,
											"end": 16296,
											"name": "SWAP1"
										},
										{
											"begin": 16282,
											"end": 16296,
											"name": "POP"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "SWAP1"
										},
										{
											"begin": 16220,
											"end": 16303,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "AND"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 16506,
											"end": 16593,
											"name": "JUMPDEST"
										},
										{
											"begin": 16579,
											"end": 16586,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SLOAD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MLOAD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP9"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "AND"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ISZERO"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MUL"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP6"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "AND"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP5"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP5"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DIV"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP4"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP5"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DIV"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MUL"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP3"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP3"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MSTORE"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP3"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MSTORE"
										},
										{
											"begin": 16547,
											"end": 16560,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16547,
											"end": 16560,
											"name": "SWAP4"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP3"
										},
										{
											"begin": 16579,
											"end": 16586,
											"name": "SWAP1"
										},
										{
											"begin": 16579,
											"end": 16586,
											"name": "SWAP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP4"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD"
										},
										{
											"begin": 16579,
											"end": 16586,
											"name": "DUP3"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP3"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ISZERO"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "JUMPI"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "LT"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "JUMPI"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP1"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP4"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SLOAD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DIV"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MUL"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP4"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MSTORE"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP2"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "JUMP"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 21146,
											"end": 21427,
											"name": "JUMPDEST"
										},
										{
											"begin": 21257,
											"end": 21261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 21273,
											"end": 21399,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 21282,
											"end": 21294,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 21282,
											"end": 21292,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21282,
											"end": 21294,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21282,
											"end": 21294,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 21282,
											"end": 21294,
											"name": "JUMPDEST"
										},
										{
											"begin": 21296,
											"end": 21303,
											"name": "DUP5"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 21344,
											"end": 21359,
											"name": "DUP6"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "MLOAD"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "DUP1"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "ADD"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "MSTORE"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "DUP1"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "DUP2"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "MSTORE"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "ADD"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH data",
											"value": "42D9A8E134AF3312DAACAC2D2003D2E3A900F5F05EB0DE35B651F1E9CE1C4E5B"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "SWAP2"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "CODECOPY"
										},
										{
											"begin": 21305,
											"end": 21316,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21317,
											"end": 21329,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 21317,
											"end": 21327,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21317,
											"end": 21329,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21317,
											"end": 21329,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 21317,
											"end": 21329,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "SWAP1"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "DUP2"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "AND"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "DUP3"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "MSTORE"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "DUP1"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "DUP4"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "ADD"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "SWAP4"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "SWAP1"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "SWAP4"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "MSTORE"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "SWAP2"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "DUP3"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "SWAP1"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "DUP2"
										},
										{
											"begin": 21305,
											"end": 21330,
											"name": "KECCAK256"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "SWAP2"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "DUP14"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "AND"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "DUP2"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "MSTORE"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "SWAP3"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "MSTORE"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "SWAP1"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "KECCAK256"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "SLOAD"
										},
										{
											"begin": 21305,
											"end": 21339,
											"name": "SWAP2"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "SWAP1"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21305,
											"end": 21343,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "AND"
										},
										{
											"begin": 21305,
											"end": 21398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 17448,
											"end": 17631,
											"name": "JUMPDEST"
										},
										{
											"begin": 17545,
											"end": 17549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 17561,
											"end": 17603,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 17571,
											"end": 17583,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 17571,
											"end": 17581,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 17571,
											"end": 17583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17571,
											"end": 17583,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 17571,
											"end": 17583,
											"name": "JUMPDEST"
										},
										{
											"begin": 17585,
											"end": 17594,
											"name": "DUP5"
										},
										{
											"begin": 17596,
											"end": 17602,
											"name": "DUP5"
										},
										{
											"begin": 17561,
											"end": 17570,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 17561,
											"end": 17603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "DUP2"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "AND"
										},
										{
											"begin": 23530,
											"end": 23536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "SWAP1"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "DUP2"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "MSTORE"
										},
										{
											"begin": 23570,
											"end": 23584,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "MSTORE"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "DUP2"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "KECCAK256"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "SLOAD"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23570,
											"end": 23593,
											"name": "AND"
										},
										{
											"begin": 23610,
											"end": 23626,
											"name": "DUP1"
										},
										{
											"begin": 23610,
											"end": 23685,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 23610,
											"end": 23685,
											"name": "JUMPI"
										},
										{
											"begin": 23684,
											"end": 23685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23610,
											"end": 23685,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 23610,
											"end": 23685,
											"name": "JUMP"
										},
										{
											"begin": 23610,
											"end": 23685,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 23610,
											"end": 23685,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "DUP4"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "AND"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "SWAP1"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "DUP2"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "MSTORE"
										},
										{
											"begin": 23636,
											"end": 23647,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "SWAP1"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "DUP2"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "MSTORE"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "DUP1"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "DUP4"
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "KECCAK256"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23657,
											"end": 23673,
											"name": "DUP7"
										},
										{
											"begin": 23657,
											"end": 23673,
											"name": "ADD"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "AND"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "DUP5"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "MSTORE"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "SWAP1"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "SWAP2"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "MSTORE"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "SWAP1"
										},
										{
											"begin": 23636,
											"end": 23674,
											"name": "KECCAK256"
										},
										{
											"begin": 23672,
											"end": 23673,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23636,
											"end": 23680,
											"name": "ADD"
										},
										{
											"begin": 23636,
											"end": 23680,
											"name": "SLOAD"
										},
										{
											"begin": 23629,
											"end": 23681,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 23629,
											"end": 23681,
											"name": "SWAP1"
										},
										{
											"begin": 23629,
											"end": 23635,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 23629,
											"end": 23681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23629,
											"end": 23681,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 23629,
											"end": 23681,
											"name": "JUMPDEST"
										},
										{
											"begin": 23603,
											"end": 23685,
											"name": "SWAP4"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23465,
											"end": 23692,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP2"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "AND"
										},
										{
											"begin": 13338,
											"end": 13343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP2"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP2"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "MSTORE"
										},
										{
											"begin": 13321,
											"end": 13330,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "MSTORE"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP1"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP3"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "KECCAK256"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "DUP1"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "AND"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "SWAP1"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "SSTORE"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "MLOAD"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "PUSH",
											"value": "687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "SWAP2"
										},
										{
											"begin": 13338,
											"end": 13343,
											"name": "SWAP1"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "LOG2"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "JUMPDEST"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 22664,
											"end": 22687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "MLOAD"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "DUP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "DUP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP2"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "CODECOPY"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "ADD"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "POP"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "MLOAD"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "DUP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP2"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SUB"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "SWAP1"
										},
										{
											"begin": 14692,
											"end": 14772,
											"name": "KECCAK256"
										},
										{
											"begin": 22744,
											"end": 22749,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MLOAD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP3"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SLOAD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "AND"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "ISZERO"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MUL"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SUB"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "AND"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DIV"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "ISZERO"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMPI"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "LT"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMPI"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP4"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SLOAD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DIV"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MUL"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP4"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MSTORE"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP3"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "ADD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMP"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMPDEST"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP3"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "ADD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MSTORE"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "KECCAK256"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMPDEST"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SLOAD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MSTORE"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "ADD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "ADD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP4"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "GT"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMPI"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "JUMPDEST"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "POP"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "POP"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "POP"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "POP"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "MLOAD"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "DUP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP2"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SUB"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "SWAP1"
										},
										{
											"begin": 22728,
											"end": 22751,
											"name": "KECCAK256"
										},
										{
											"begin": 22753,
											"end": 22765,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 22753,
											"end": 22763,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 22753,
											"end": 22765,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22753,
											"end": 22765,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 22753,
											"end": 22765,
											"name": "JUMPDEST"
										},
										{
											"begin": 22775,
											"end": 22779,
											"name": "ADDRESS"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MLOAD"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "ADD"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP1"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP6"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP2"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MSTORE"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "ADD"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP5"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP2"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MSTORE"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "ADD"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP4"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP2"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MSTORE"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "ADD"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "AND"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "DUP2"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MSTORE"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "ADD"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "SWAP5"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "POP"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "POP"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "POP"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "POP"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "POP"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "SWAP1"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22700,
											"end": 22781,
											"name": "MSTORE"
										},
										{
											"begin": 22690,
											"end": 22782,
											"name": "DUP1"
										},
										{
											"begin": 22690,
											"end": 22782,
											"name": "MLOAD"
										},
										{
											"begin": 22690,
											"end": 22782,
											"name": "SWAP1"
										},
										{
											"begin": 22690,
											"end": 22782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22690,
											"end": 22782,
											"name": "ADD"
										},
										{
											"begin": 22690,
											"end": 22782,
											"name": "KECCAK256"
										},
										{
											"begin": 22664,
											"end": 22782,
											"name": "SWAP1"
										},
										{
											"begin": 22664,
											"end": 22782,
											"name": "POP"
										},
										{
											"begin": 22792,
											"end": 22810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "MLOAD"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SWAP2"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "CODECOPY"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "MLOAD"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SWAP2"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP3"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SWAP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SUB"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "ADD"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP3"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "KECCAK256"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP1"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP5"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "ADD"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "SWAP2"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "SWAP1"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "SWAP2"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP13"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "AND"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP4"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP4"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "ADD"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "MSTORE"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP4"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "ADD"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP12"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "SWAP1"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "MSTORE"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP1"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP5"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "ADD"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP12"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "SWAP1"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "MSTORE"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP3"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP5"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "ADD"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "DUP4"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "MSTORE"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "DUP1"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "MLOAD"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "SWAP1"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "DUP3"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "ADD"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP6"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "ADD"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "MSTORE"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "PUSH",
											"value": "C2"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP5"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "ADD"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP8"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "SWAP1"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "MSTORE"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "PUSH",
											"value": "E2"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP1"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP6"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "ADD"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP3"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "SWAP1"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "MSTORE"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP4"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP6"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "ADD"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP1"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "DUP6"
										},
										{
											"begin": 22918,
											"end": 22975,
											"name": "MSTORE"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "DUP2"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "MLOAD"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "SWAP2"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "DUP5"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "ADD"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "SWAP2"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "SWAP1"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "SWAP2"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP2"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP3"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MSTORE"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP7"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP7"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MSTORE"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP2"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MSTORE"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP13"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "AND"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP8"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MSTORE"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP7"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP12"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MSTORE"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP7"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP11"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MSTORE"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP4"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MLOAD"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "SWAP2"
										},
										{
											"begin": 22813,
											"end": 22881,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "SWAP3"
										},
										{
											"begin": 22908,
											"end": 22976,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP3"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP4"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP4"
										},
										{
											"begin": 22823,
											"end": 22880,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP4"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP3"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP2"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SUB"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP2"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "DUP6"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "GAS"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "STATICCALL"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "MLOAD"
										},
										{
											"begin": 23006,
											"end": 23032,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23050,
											"end": 23073,
											"name": "DUP2"
										},
										{
											"begin": 23050,
											"end": 23073,
											"name": "AND"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "JUMPI"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "DUP1"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "DUP2"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "MSTORE"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "DUP3"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "ADD"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "MSTORE"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "DUP3"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "ADD"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "496E76616C6964207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "DUP3"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "ADD"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "MSTORE"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "SWAP1"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "MLOAD"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "SWAP1"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "DUP2"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "SWAP1"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "SUB"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "ADD"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "SWAP1"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "REVERT"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 23042,
											"end": 23095,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "DUP2"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "AND"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "SWAP1"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "DUP2"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "MSTORE"
										},
										{
											"begin": 23122,
											"end": 23128,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "MSTORE"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "SWAP1"
										},
										{
											"begin": 23122,
											"end": 23139,
											"name": "KECCAK256"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "DUP1"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "SLOAD"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "DUP2"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "ADD"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "SWAP1"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "SWAP2"
										},
										{
											"begin": 23122,
											"end": 23141,
											"name": "SSTORE"
										},
										{
											"begin": 23113,
											"end": 23141,
											"name": "DUP10"
										},
										{
											"begin": 23113,
											"end": 23141,
											"name": "EQ"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "JUMPI"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "DUP1"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "DUP2"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "MSTORE"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "DUP3"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "ADD"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "MSTORE"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "DUP3"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "ADD"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "496E76616C6964206E6F6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "DUP3"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "ADD"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "MSTORE"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "SWAP1"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "MLOAD"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "SWAP1"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "DUP2"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "SWAP1"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "SUB"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "ADD"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "SWAP1"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "REVERT"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 23105,
											"end": 23159,
											"name": "JUMPDEST"
										},
										{
											"begin": 23184,
											"end": 23190,
											"name": "DUP8"
										},
										{
											"begin": 23177,
											"end": 23180,
											"name": "TIMESTAMP"
										},
										{
											"begin": 23177,
											"end": 23190,
											"name": "GT"
										},
										{
											"begin": 23177,
											"end": 23190,
											"name": "ISZERO"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "JUMPI"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "DUP1"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "DUP2"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "MSTORE"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "DUP3"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "ADD"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "MSTORE"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "DUP3"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "ADD"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151A19481CDA59DB985D1D5C9948195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "DUP3"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "ADD"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "MSTORE"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "SWAP1"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "MLOAD"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "SWAP1"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "DUP2"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "SWAP1"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "SUB"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "ADD"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "SWAP1"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "REVERT"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 23169,
											"end": 23216,
											"name": "JUMPDEST"
										},
										{
											"begin": 23233,
											"end": 23264,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 23243,
											"end": 23252,
											"name": "DUP2"
										},
										{
											"begin": 23254,
											"end": 23263,
											"name": "DUP12"
										},
										{
											"begin": 23233,
											"end": 23242,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 23233,
											"end": 23264,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23233,
											"end": 23264,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 23233,
											"end": 23264,
											"name": "JUMPDEST"
										},
										{
											"begin": 23226,
											"end": 23264,
											"name": "POP"
										},
										{
											"begin": 23226,
											"end": 23264,
											"name": "POP"
										},
										{
											"begin": 23226,
											"end": 23264,
											"name": "POP"
										},
										{
											"begin": 23226,
											"end": 23264,
											"name": "POP"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 13114,
											"end": 13115,
											"name": "JUMPDEST"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "POP"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "POP"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "POP"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "POP"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "POP"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "POP"
										},
										{
											"begin": 22517,
											"end": 23271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "JUMPDEST"
										},
										{
											"begin": 19007,
											"end": 19011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DUP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "DIV"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "AND"
										},
										{
											"begin": 11992,
											"end": 12005,
											"name": "ISZERO"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPI"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP3"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MSTORE"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "MLOAD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "DUP2"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SUB"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "ADD"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "SWAP1"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "REVERT"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 11984,
											"end": 12025,
											"name": "JUMPDEST"
										},
										{
											"begin": 13076,
											"end": 13086,
											"name": "CALLER"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "KECCAK256"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "SLOAD"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13066,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 13065,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPI"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP3"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MSTORE"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "MLOAD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "DUP2"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SUB"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "ADD"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "SWAP1"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "REVERT"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 13057,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 19023,
											"end": 19062,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 19032,
											"end": 19042,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "JUMPDEST"
										},
										{
											"begin": 19046,
											"end": 19053,
											"name": "DUP6"
										},
										{
											"begin": 19055,
											"end": 19061,
											"name": "DUP6"
										},
										{
											"begin": 19023,
											"end": 19031,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 19023,
											"end": 19062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19023,
											"end": 19062,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 19023,
											"end": 19062,
											"name": "JUMPDEST"
										},
										{
											"begin": 19095,
											"end": 19102,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19119,
											"name": "AND"
										},
										{
											"begin": 19072,
											"end": 19119,
											"name": "PUSH",
											"value": "8F4FFCB1"
										},
										{
											"begin": 19120,
											"end": 19132,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 19120,
											"end": 19130,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19120,
											"end": 19132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19120,
											"end": 19132,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 19120,
											"end": 19132,
											"name": "JUMPDEST"
										},
										{
											"begin": 19134,
											"end": 19140,
											"name": "DUP6"
										},
										{
											"begin": 19150,
											"end": 19154,
											"name": "ADDRESS"
										},
										{
											"begin": 19157,
											"end": 19161,
											"name": "DUP7"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MLOAD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP6"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SHL"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP5"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP3"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP3"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP4"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MLOAD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MLOAD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP4"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ISZERO"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "JUMPI"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP3"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MLOAD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP4"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "EXP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "NOT"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MSTORE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ADD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "JUMPDEST"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SWAP6"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "MLOAD"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP4"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "SUB"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP2"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP8"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "DUP1"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "GAS"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "CALL"
										},
										{
											"begin": 19072,
											"end": 19162,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19179,
											"end": 19183,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19179,
											"end": 19183,
											"name": "SWAP8"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18889,
											"end": 19190,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "AND"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "MSTORE"
										},
										{
											"begin": 13207,
											"end": 13211,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "SWAP1"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "MSTORE"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP1"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP4"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "KECCAK256"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "DUP1"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "AND"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP1"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP3"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "OR"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP1"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP2"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SSTORE"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "MLOAD"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "PUSH",
											"value": "169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "SWAP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "SWAP1"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "LOG2"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "POP"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "SWAP2"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "DUP3"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "AND"
										},
										{
											"begin": 17999,
											"end": 18006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "SWAP1"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "DUP2"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "MSTORE"
										},
										{
											"begin": 18025,
											"end": 18036,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "SWAP1"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "DUP2"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "MSTORE"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "DUP1"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "DUP4"
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "KECCAK256"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP4"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP1"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP5"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "AND"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "DUP3"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "MSTORE"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP2"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP1"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP2"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "MSTORE"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "KECCAK256"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SLOAD"
										},
										{
											"begin": 18025,
											"end": 18052,
											"name": "SWAP1"
										},
										{
											"begin": 17925,
											"end": 18059,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "JUMPDEST"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "MLOAD"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP3"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "CODECOPY"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "ADD"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SWAP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "POP"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "MLOAD"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "DUP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SWAP2"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SUB"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "SWAP1"
										},
										{
											"begin": 14909,
											"end": 14980,
											"name": "KECCAK256"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "DUP2"
										},
										{
											"begin": 14863,
											"end": 14980,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "JUMPDEST"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MSTORE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP3"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP4"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MSTORE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP5"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "KECCAK256"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MSTORE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP3"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "MSTORE"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "KECCAK256"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SLOAD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "ADD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SLOAD"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP2"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "AND"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "SWAP1"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "DUP3"
										},
										{
											"begin": 14395,
											"end": 14465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 8606,
											"end": 8614,
											"name": "DUP2"
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "JUMPDEST"
										},
										{
											"begin": 6490,
											"end": 6500,
											"name": "CALLER"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25878,
											"end": 26210,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 25878,
											"end": 26210,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25971,
											"end": 25990,
											"name": "DUP4"
										},
										{
											"begin": 25971,
											"end": 25990,
											"name": "AND"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "JUMPI"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP2"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "MSTORE"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "ADD"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP1"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP1"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "ADD"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP3"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP2"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "SUB"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP3"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "MSTORE"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP2"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "MSTORE"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "ADD"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP1"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH data",
											"value": "36CE88BA958E2B0D44CDA35791945F0A281D35D6E350D9C9F8EEDD2B2359D57D"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "SWAP2"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "CODECOPY"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "ADD"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "SWAP2"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "POP"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "POP"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "MLOAD"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "DUP1"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "SWAP2"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "SUB"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "SWAP1"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "REVERT"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 25963,
											"end": 26031,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26049,
											"end": 26070,
											"name": "DUP3"
										},
										{
											"begin": 26049,
											"end": 26070,
											"name": "AND"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "JUMPI"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP2"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "MSTORE"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "ADD"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP1"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP1"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "ADD"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP3"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP2"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "SUB"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP3"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "MSTORE"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP2"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "MSTORE"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "ADD"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP1"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH data",
											"value": "2CD250AFF92BA04A009213390107E53E83F14A04575E595AF9230B9654AFED9"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "SWAP2"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "CODECOPY"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "ADD"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "SWAP2"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "POP"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "POP"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "MLOAD"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "DUP1"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "SWAP2"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "SUB"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "SWAP1"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "REVERT"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 26041,
											"end": 26109,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP1"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP5"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "AND"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP2"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP2"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "MSTORE"
										},
										{
											"begin": 26120,
											"end": 26131,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "SWAP1"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP2"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "MSTORE"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP1"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "DUP4"
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "KECCAK256"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "SWAP5"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "DUP8"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "AND"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "DUP1"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "DUP5"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "MSTORE"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "SWAP5"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "DUP3"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "MSTORE"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "SWAP2"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "DUP3"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "SWAP1"
										},
										{
											"begin": 26120,
											"end": 26147,
											"name": "KECCAK256"
										},
										{
											"begin": 26120,
											"end": 26156,
											"name": "DUP6"
										},
										{
											"begin": 26120,
											"end": 26156,
											"name": "SWAP1"
										},
										{
											"begin": 26120,
											"end": 26156,
											"name": "SSTORE"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "DUP2"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "MLOAD"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "DUP6"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "DUP2"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "MSTORE"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SWAP2"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "MLOAD"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SWAP3"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "DUP2"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SUB"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SWAP2"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "ADD"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26203,
											"name": "LOG3"
										},
										{
											"begin": 25878,
											"end": 26210,
											"name": "POP"
										},
										{
											"begin": 25878,
											"end": 26210,
											"name": "POP"
										},
										{
											"begin": 25878,
											"end": 26210,
											"name": "POP"
										},
										{
											"begin": 25878,
											"end": 26210,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25312,
											"end": 25872,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 25312,
											"end": 25872,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25409,
											"end": 25429,
											"name": "DUP4"
										},
										{
											"begin": 25409,
											"end": 25429,
											"name": "AND"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "JUMPI"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP2"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "MSTORE"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "ADD"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP1"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP1"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "ADD"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP3"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP2"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "SUB"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP3"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "MSTORE"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP2"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "MSTORE"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "ADD"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP1"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH data",
											"value": "BD9517161462829BE5A3D25154AE5230E5AD2E2AAAB3C9BF15E6E48716B4A12E"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "SWAP2"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "CODECOPY"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "ADD"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "SWAP2"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "POP"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "POP"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "MLOAD"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "DUP1"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "SWAP2"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "SUB"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "SWAP1"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "REVERT"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 25401,
											"end": 25471,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25489,
											"end": 25512,
											"name": "DUP3"
										},
										{
											"begin": 25489,
											"end": 25512,
											"name": "AND"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "JUMPI"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP2"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "MSTORE"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "ADD"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP1"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP1"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "ADD"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP3"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP2"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "SUB"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP3"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "MSTORE"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP2"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "MSTORE"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "ADD"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP1"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH data",
											"value": "DEEA2FA463CDACA7BCC6C65F53B7AE24609806E88CA4FDB7ADE049DC06112288"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "SWAP2"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "CODECOPY"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "ADD"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "SWAP2"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "POP"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "POP"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "MLOAD"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "DUP1"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "SWAP2"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "SUB"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "SWAP1"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "REVERT"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 25481,
											"end": 25552,
											"name": "JUMPDEST"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 25605,
											"end": 25611,
											"name": "DUP2"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "MLOAD"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "DUP1"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "ADD"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "MSTORE"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "DUP1"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "DUP2"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "MSTORE"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "ADD"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH data",
											"value": "3FC916DC37CF2CF07A856AD1473AD93B10F9A58E0AD4DC3C2FF0CEABBA196973"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "SWAP2"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "DUP7"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "AND"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "SWAP1"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "DUP2"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "MSTORE"
										},
										{
											"begin": 25583,
											"end": 25592,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "MSTORE"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "SWAP1"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "KECCAK256"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "SLOAD"
										},
										{
											"begin": 25583,
											"end": 25600,
											"name": "SWAP2"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "SWAP1"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25583,
											"end": 25604,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "AND"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 25583,
											"end": 25651,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP1"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP6"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "AND"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "SWAP1"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP2"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "MSTORE"
										},
										{
											"begin": 25563,
											"end": 25572,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP2"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP2"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "MSTORE"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP1"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "DUP5"
										},
										{
											"begin": 25563,
											"end": 25580,
											"name": "KECCAK256"
										},
										{
											"begin": 25563,
											"end": 25651,
											"name": "SWAP6"
										},
										{
											"begin": 25563,
											"end": 25651,
											"name": "SWAP1"
										},
										{
											"begin": 25563,
											"end": 25651,
											"name": "SWAP6"
										},
										{
											"begin": 25563,
											"end": 25651,
											"name": "SSTORE"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP5"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "MLOAD"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP1"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP7"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "ADD"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP7"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "MSTORE"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP2"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5468652062616C616E6365206F766572666C6F7773"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP2"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "DUP4"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "ADD"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "MSTORE"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "SWAP4"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "DUP8"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "AND"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "DUP4"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "MSTORE"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "MSTORE"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "SWAP2"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "SWAP1"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "SWAP2"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "KECCAK256"
										},
										{
											"begin": 25684,
											"end": 25704,
											"name": "SLOAD"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "SWAP2"
										},
										{
											"begin": 25709,
											"end": 25715,
											"name": "DUP4"
										},
										{
											"begin": 25709,
											"end": 25715,
											"name": "SWAP1"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25684,
											"end": 25708,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "AND"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 25684,
											"end": 25741,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "DUP1"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "DUP5"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "AND"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "DUP2"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "DUP2"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "MSTORE"
										},
										{
											"begin": 25661,
											"end": 25670,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "SWAP1"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "DUP2"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "MSTORE"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "SWAP2"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "DUP3"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "SWAP1"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "KECCAK256"
										},
										{
											"begin": 25661,
											"end": 25741,
											"name": "SWAP5"
										},
										{
											"begin": 25661,
											"end": 25741,
											"name": "SWAP1"
										},
										{
											"begin": 25661,
											"end": 25741,
											"name": "SWAP5"
										},
										{
											"begin": 25661,
											"end": 25741,
											"name": "SSTORE"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "DUP1"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "MLOAD"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "DUP6"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "DUP2"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "MSTORE"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP1"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "MLOAD"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "SWAP2"
										},
										{
											"begin": 25661,
											"end": 25681,
											"name": "SWAP4"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP3"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "DUP8"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "AND"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP3"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP3"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP2"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "DUP3"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP1"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SUB"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "ADD"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "SWAP1"
										},
										{
											"begin": 25756,
											"end": 25791,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "DUP1"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "DUP5"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "AND"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "SWAP1"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "DUP2"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "MSTORE"
										},
										{
											"begin": 25817,
											"end": 25826,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "MSTORE"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "DUP1"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "DUP3"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "KECCAK256"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "SLOAD"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "DUP6"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "DUP5"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "AND"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "DUP4"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "MSTORE"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "SWAP2"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "KECCAK256"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "SLOAD"
										},
										{
											"begin": 25802,
											"end": 25865,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 25802,
											"end": 25865,
											"name": "SWAP3"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "SWAP2"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "DUP3"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "AND"
										},
										{
											"begin": 25817,
											"end": 25834,
											"name": "SWAP2"
										},
										{
											"begin": 25836,
											"end": 25856,
											"name": "AND"
										},
										{
											"begin": 25858,
											"end": 25864,
											"name": "DUP4"
										},
										{
											"begin": 25802,
											"end": 25816,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 25802,
											"end": 25865,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25802,
											"end": 25865,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 25802,
											"end": 25865,
											"name": "JUMPDEST"
										},
										{
											"begin": 25312,
											"end": 25872,
											"name": "POP"
										},
										{
											"begin": 25312,
											"end": 25872,
											"name": "POP"
										},
										{
											"begin": 25312,
											"end": 25872,
											"name": "POP"
										},
										{
											"begin": 25312,
											"end": 25872,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2440,
											"end": 2613,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2440,
											"end": 2613,
											"name": "JUMPDEST"
										},
										{
											"begin": 2526,
											"end": 2533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "DUP2"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP5"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP5"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "GT"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "ISZERO"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPI"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP3"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP3"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP4"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP4"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "AND"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ISZERO"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPI"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP3"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP4"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "EXP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "NOT"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "AND"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPDEST"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP3"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "POP"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "DUP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "REVERT"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "SWAP1"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "SUB"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "SWAP1"
										},
										{
											"begin": 2440,
											"end": 2613,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1631,
											"end": 1804,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 1631,
											"end": 1804,
											"name": "JUMPDEST"
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "DUP4"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "DUP4"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "ADD"
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "DUP3"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP6"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP3"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "LT"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "ISZERO"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "JUMPI"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP2"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "MSTORE"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP3"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "ADD"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP2"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP2"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "MSTORE"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP4"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "MLOAD"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP5"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "ADD"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "MSTORE"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP4"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "MLOAD"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP3"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP4"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP3"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP2"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "ADD"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP2"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP6"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "ADD"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP1"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP4"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "DUP4"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 1755,
											"end": 1784,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "SWAP5"
										},
										{
											"begin": 1631,
											"end": 1804,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26216,
											"end": 26620,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 26216,
											"end": 26620,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26291,
											"end": 26312,
											"name": "DUP3"
										},
										{
											"begin": 26291,
											"end": 26312,
											"name": "AND"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "JUMPI"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP2"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "MSTORE"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "ADD"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP1"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP1"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "ADD"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP3"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP2"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "SUB"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP3"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "MSTORE"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP2"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "MSTORE"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "ADD"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP1"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH data",
											"value": "F5CEF2FE2A70CA222ED18C80624B418B6D950CFD5CB46A9F7C5AB6B4AB537CEE"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "SWAP2"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "CODECOPY"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "ADD"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "SWAP2"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "POP"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "POP"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "MLOAD"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "DUP1"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "SWAP2"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "SUB"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "SWAP1"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "REVERT"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 26283,
											"end": 26350,
											"name": "JUMPDEST"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP1"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "MLOAD"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP1"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP3"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "ADD"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP3"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "MSTORE"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP2"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "MSTORE"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "PUSH",
											"value": "546865206275726E20616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP1"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "DUP4"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "ADD"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "SWAP2"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "SWAP1"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "SWAP2"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "DUP6"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SWAP1"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "DUP2"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "MSTORE"
										},
										{
											"begin": 26382,
											"end": 26391,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SWAP1"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SWAP2"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "MSTORE"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SWAP2"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SWAP1"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SWAP2"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "KECCAK256"
										},
										{
											"begin": 26382,
											"end": 26400,
											"name": "SLOAD"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "SWAP2"
										},
										{
											"begin": 26405,
											"end": 26411,
											"name": "DUP4"
										},
										{
											"begin": 26405,
											"end": 26411,
											"name": "SWAP1"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26382,
											"end": 26404,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "AND"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 26382,
											"end": 26447,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "DUP4"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "AND"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "SWAP1"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "DUP2"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "MSTORE"
										},
										{
											"begin": 26361,
											"end": 26370,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "MSTORE"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "SWAP1"
										},
										{
											"begin": 26361,
											"end": 26379,
											"name": "KECCAK256"
										},
										{
											"begin": 26361,
											"end": 26447,
											"name": "SSTORE"
										},
										{
											"begin": 26472,
											"end": 26484,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26472,
											"end": 26484,
											"name": "SLOAD"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "SWAP1"
										},
										{
											"begin": 26489,
											"end": 26495,
											"name": "DUP3"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26472,
											"end": 26488,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "AND"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 26472,
											"end": 26496,
											"name": "JUMPDEST"
										},
										{
											"begin": 26457,
											"end": 26469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26457,
											"end": 26496,
											"name": "SSTORE"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "DUP1"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "MLOAD"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "DUP3"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "DUP2"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "MSTORE"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "SWAP1"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "MLOAD"
										},
										{
											"begin": 26537,
											"end": 26538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26537,
											"end": 26538,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "DUP6"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "AND"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "SWAP2"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "SWAP2"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "DUP2"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "SWAP1"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "SUB"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "ADD"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "SWAP1"
										},
										{
											"begin": 26511,
											"end": 26548,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "DUP1"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "DUP4"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "AND"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "SWAP1"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "DUP2"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "MSTORE"
										},
										{
											"begin": 26574,
											"end": 26583,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "MSTORE"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "DUP2"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "KECCAK256"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "SLOAD"
										},
										{
											"begin": 26559,
											"end": 26613,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 26559,
											"end": 26613,
											"name": "SWAP3"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "AND"
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "SWAP1"
										},
										{
											"begin": 26606,
											"end": 26612,
											"name": "DUP4"
										},
										{
											"begin": 26559,
											"end": 26573,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 26559,
											"end": 26613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26559,
											"end": 26613,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 26559,
											"end": 26613,
											"name": "JUMPDEST"
										},
										{
											"begin": 26216,
											"end": 26620,
											"name": "POP"
										},
										{
											"begin": 26216,
											"end": 26620,
											"name": "POP"
										},
										{
											"begin": 26216,
											"end": 26620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP1"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP4"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "AND"
										},
										{
											"begin": 26702,
											"end": 26725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP2"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP2"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "MSTORE"
										},
										{
											"begin": 26728,
											"end": 26737,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP2"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP2"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "MSTORE"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP1"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP5"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "KECCAK256"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP1"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SLOAD"
										},
										{
											"begin": 26785,
											"end": 26794,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "DUP5"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "MSTORE"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "DUP3"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "DUP7"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "KECCAK256"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "SLOAD"
										},
										{
											"begin": 26815,
											"end": 26835,
											"name": "SWAP5"
										},
										{
											"begin": 26815,
											"end": 26835,
											"name": "SWAP1"
										},
										{
											"begin": 26815,
											"end": 26835,
											"name": "SWAP4"
										},
										{
											"begin": 26815,
											"end": 26835,
											"name": "MSTORE"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "DUP8"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "DUP8"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "DUP5"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "AND"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "DUP2"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "OR"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "SWAP1"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "SWAP2"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "SSTORE"
										},
										{
											"begin": 26863,
											"end": 26917,
											"name": "SWAP1"
										},
										{
											"begin": 26863,
											"end": 26917,
											"name": "MLOAD"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SWAP2"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SWAP1"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SWAP6"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "AND"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SWAP5"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "SWAP2"
										},
										{
											"begin": 26785,
											"end": 26805,
											"name": "SWAP4"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "SWAP2"
										},
										{
											"begin": 26815,
											"end": 26847,
											"name": "SWAP3"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "DUP6"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SWAP3"
										},
										{
											"begin": 26728,
											"end": 26748,
											"name": "SWAP2"
										},
										{
											"begin": 26863,
											"end": 26917,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 26863,
											"end": 26917,
											"name": "SWAP2"
										},
										{
											"begin": 26702,
											"end": 26725,
											"name": "SWAP1"
										},
										{
											"begin": 26863,
											"end": 26917,
											"name": "LOG4"
										},
										{
											"begin": 26928,
											"end": 26988,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 26943,
											"end": 26958,
											"name": "DUP3"
										},
										{
											"begin": 26960,
											"end": 26969,
											"name": "DUP5"
										},
										{
											"begin": 26971,
											"end": 26987,
											"name": "DUP4"
										},
										{
											"begin": 26928,
											"end": 26942,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 26928,
											"end": 26988,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26928,
											"end": 26988,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 26928,
											"end": 26988,
											"name": "JUMPDEST"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "POP"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "POP"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "POP"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "POP"
										},
										{
											"begin": 26626,
											"end": 26995,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28678,
											"end": 28836,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 28678,
											"end": 28836,
											"name": "JUMPDEST"
										},
										{
											"begin": 28728,
											"end": 28734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 28750,
											"end": 28751,
											"name": "DUP3"
										},
										{
											"begin": 28750,
											"end": 28760,
											"name": "LT"
										},
										{
											"begin": 28746,
											"end": 28804,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 28746,
											"end": 28804,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28776,
											"end": 28793,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 28776,
											"end": 28793,
											"name": "JUMP"
										},
										{
											"begin": 28746,
											"end": 28804,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 28746,
											"end": 28804,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28827,
											"end": 28828,
											"name": "SWAP1"
										},
										{
											"begin": 28678,
											"end": 28836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28842,
											"end": 28994,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 28842,
											"end": 28994,
											"name": "JUMPDEST"
										},
										{
											"begin": 28953,
											"end": 28962,
											"name": "CHAINID"
										},
										{
											"begin": 28842,
											"end": 28994,
											"name": "SWAP1"
										},
										{
											"begin": 28842,
											"end": 28994,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8782,
											"end": 8804,
											"name": "DUP2"
										},
										{
											"begin": 8782,
											"end": 8804,
											"name": "AND"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "JUMPI"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP3"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP3"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "CODECOPY"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MLOAD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "REVERT"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "JUMPDEST"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP1"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SLOAD"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP1"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP6"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "AND"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP4"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SWAP3"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "AND"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SWAP2"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP2"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "LOG3"
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "DUP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP3"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP3"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "OR"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SSTORE"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 27001,
											"end": 27895,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 27001,
											"end": 27895,
											"name": "JUMPDEST"
										},
										{
											"begin": 27106,
											"end": 27112,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27096,
											"end": 27112,
											"name": "AND"
										},
										{
											"begin": 27096,
											"end": 27102,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27096,
											"end": 27112,
											"name": "AND"
										},
										{
											"begin": 27096,
											"end": 27112,
											"name": "EQ"
										},
										{
											"begin": 27096,
											"end": 27112,
											"name": "ISZERO"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "DUP1"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "ISZERO"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "JUMPI"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "POP"
										},
										{
											"begin": 27125,
											"end": 27126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27116,
											"end": 27122,
											"name": "DUP2"
										},
										{
											"begin": 27116,
											"end": 27126,
											"name": "GT"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 27096,
											"end": 27126,
											"name": "JUMPDEST"
										},
										{
											"begin": 27092,
											"end": 27889,
											"name": "ISZERO"
										},
										{
											"begin": 27092,
											"end": 27889,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 27092,
											"end": 27889,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27146,
											"end": 27166,
											"name": "DUP4"
										},
										{
											"begin": 27146,
											"end": 27166,
											"name": "AND"
										},
										{
											"begin": 27146,
											"end": 27166,
											"name": "ISZERO"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "DUP4"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "AND"
										},
										{
											"begin": 27186,
											"end": 27202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "SWAP1"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "DUP2"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "MSTORE"
										},
										{
											"begin": 27205,
											"end": 27219,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "MSTORE"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "DUP2"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "KECCAK256"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "SLOAD"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "AND"
										},
										{
											"begin": 27205,
											"end": 27227,
											"name": "SWAP1"
										},
										{
											"begin": 27265,
											"end": 27278,
											"name": "DUP2"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "JUMPI"
										},
										{
											"begin": 27324,
											"end": 27325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "JUMP"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "DUP6"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "AND"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "SWAP1"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "DUP2"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "MSTORE"
										},
										{
											"begin": 27281,
											"end": 27292,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "SWAP1"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "DUP2"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "MSTORE"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "DUP1"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "DUP4"
										},
										{
											"begin": 27281,
											"end": 27300,
											"name": "KECCAK256"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 27301,
											"end": 27314,
											"name": "DUP8"
										},
										{
											"begin": 27301,
											"end": 27314,
											"name": "ADD"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "AND"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "DUP5"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "MSTORE"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "SWAP1"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "SWAP2"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "MSTORE"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "SWAP1"
										},
										{
											"begin": 27281,
											"end": 27315,
											"name": "KECCAK256"
										},
										{
											"begin": 27313,
											"end": 27314,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27281,
											"end": 27321,
											"name": "ADD"
										},
										{
											"begin": 27281,
											"end": 27321,
											"name": "SLOAD"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 27265,
											"end": 27325,
											"name": "JUMPDEST"
										},
										{
											"begin": 27245,
											"end": 27325,
											"name": "SWAP1"
										},
										{
											"begin": 27245,
											"end": 27325,
											"name": "POP"
										},
										{
											"begin": 27343,
											"end": 27360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 27377,
											"end": 27383,
											"name": "DUP5"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "MLOAD"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "DUP1"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "ADD"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "MSTORE"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "DUP1"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "DUP2"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "MSTORE"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "ADD"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "54686520766F746520616D6F756E7420756E646572666C6F7773000000000000"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "DUP2"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "MSTORE"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "POP"
										},
										{
											"begin": 27363,
											"end": 27372,
											"name": "DUP5"
										},
										{
											"begin": 27363,
											"end": 27376,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 27363,
											"end": 27376,
											"name": "SWAP1"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "SWAP3"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "SWAP2"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "SWAP1"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "AND"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 27363,
											"end": 27414,
											"name": "JUMPDEST"
										},
										{
											"begin": 27343,
											"end": 27414,
											"name": "SWAP1"
										},
										{
											"begin": 27343,
											"end": 27414,
											"name": "POP"
										},
										{
											"begin": 27432,
											"end": 27489,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 27449,
											"end": 27455,
											"name": "DUP7"
										},
										{
											"begin": 27457,
											"end": 27466,
											"name": "DUP5"
										},
										{
											"begin": 27468,
											"end": 27477,
											"name": "DUP5"
										},
										{
											"begin": 27479,
											"end": 27488,
											"name": "DUP5"
										},
										{
											"begin": 27432,
											"end": 27448,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 27432,
											"end": 27489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27432,
											"end": 27489,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 27432,
											"end": 27489,
											"name": "JUMPDEST"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "POP"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "POP"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "POP"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 27142,
											"end": 27504,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27522,
											"end": 27542,
											"name": "DUP3"
										},
										{
											"begin": 27522,
											"end": 27542,
											"name": "AND"
										},
										{
											"begin": 27522,
											"end": 27542,
											"name": "ISZERO"
										},
										{
											"begin": 27518,
											"end": 27879,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 27518,
											"end": 27879,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "DUP3"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "AND"
										},
										{
											"begin": 27562,
											"end": 27578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "SWAP1"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "DUP2"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "MSTORE"
										},
										{
											"begin": 27581,
											"end": 27595,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "MSTORE"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "DUP2"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "KECCAK256"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "SLOAD"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "AND"
										},
										{
											"begin": 27581,
											"end": 27603,
											"name": "SWAP1"
										},
										{
											"begin": 27641,
											"end": 27654,
											"name": "DUP2"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "JUMPI"
										},
										{
											"begin": 27700,
											"end": 27701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "JUMP"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "DUP5"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "AND"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "SWAP1"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "DUP2"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "MSTORE"
										},
										{
											"begin": 27657,
											"end": 27668,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "SWAP1"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "DUP2"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "MSTORE"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "DUP1"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "DUP4"
										},
										{
											"begin": 27657,
											"end": 27676,
											"name": "KECCAK256"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 27677,
											"end": 27690,
											"name": "DUP8"
										},
										{
											"begin": 27677,
											"end": 27690,
											"name": "ADD"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "AND"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "DUP5"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "MSTORE"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "SWAP1"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "SWAP2"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "MSTORE"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "SWAP1"
										},
										{
											"begin": 27657,
											"end": 27691,
											"name": "KECCAK256"
										},
										{
											"begin": 27689,
											"end": 27690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27657,
											"end": 27697,
											"name": "ADD"
										},
										{
											"begin": 27657,
											"end": 27697,
											"name": "SLOAD"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 27641,
											"end": 27701,
											"name": "JUMPDEST"
										},
										{
											"begin": 27621,
											"end": 27701,
											"name": "SWAP1"
										},
										{
											"begin": 27621,
											"end": 27701,
											"name": "POP"
										},
										{
											"begin": 27719,
											"end": 27736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 27753,
											"end": 27759,
											"name": "DUP5"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "MLOAD"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "DUP1"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "ADD"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "MSTORE"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "DUP1"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "DUP2"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "MSTORE"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "ADD"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "54686520766F746520616D6F756E74206F766572666C6F777300000000000000"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "DUP2"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "MSTORE"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "POP"
										},
										{
											"begin": 27739,
											"end": 27748,
											"name": "DUP5"
										},
										{
											"begin": 27739,
											"end": 27752,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 27739,
											"end": 27752,
											"name": "SWAP1"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "SWAP3"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "SWAP2"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "SWAP1"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "AND"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 27739,
											"end": 27789,
											"name": "JUMPDEST"
										},
										{
											"begin": 27719,
											"end": 27789,
											"name": "SWAP1"
										},
										{
											"begin": 27719,
											"end": 27789,
											"name": "POP"
										},
										{
											"begin": 27807,
											"end": 27864,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 27824,
											"end": 27830,
											"name": "DUP6"
										},
										{
											"begin": 27832,
											"end": 27841,
											"name": "DUP5"
										},
										{
											"begin": 27843,
											"end": 27852,
											"name": "DUP5"
										},
										{
											"begin": 27854,
											"end": 27863,
											"name": "DUP5"
										},
										{
											"begin": 27807,
											"end": 27823,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 27807,
											"end": 27864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2176,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 2048,
											"end": 2176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2106,
											"end": 2113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "DUP4"
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP4"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "MLOAD"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "DUP1"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "ADD"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "DUP1"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "ADD"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "DUP2"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "MSTORE"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "POP"
										},
										{
											"begin": 2128,
											"end": 2131,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2128,
											"end": 2171,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "JUMPDEST"
										},
										{
											"begin": 28020,
											"end": 28038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 28048,
											"end": 28060,
											"name": "NUMBER"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "MLOAD"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "DUP1"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "ADD"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "MSTORE"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "DUP1"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "DUP2"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "MSTORE"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "ADD"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "PUSH",
											"value": "54686520626C6F636B206E756D62657220657863656564732033322062697473"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "DUP2"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "MSTORE"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "POP"
										},
										{
											"begin": 28041,
											"end": 28047,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 28041,
											"end": 28097,
											"name": "JUMPDEST"
										},
										{
											"begin": 28020,
											"end": 28097,
											"name": "SWAP1"
										},
										{
											"begin": 28020,
											"end": 28097,
											"name": "POP"
										},
										{
											"begin": 28125,
											"end": 28126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28110,
											"end": 28122,
											"name": "DUP5"
										},
										{
											"begin": 28110,
											"end": 28126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28110,
											"end": 28126,
											"name": "AND"
										},
										{
											"begin": 28110,
											"end": 28126,
											"name": "GT"
										},
										{
											"begin": 28110,
											"end": 28195,
											"name": "DUP1"
										},
										{
											"begin": 28110,
											"end": 28195,
											"name": "ISZERO"
										},
										{
											"begin": 28110,
											"end": 28195,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 28110,
											"end": 28195,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "DUP6"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "AND"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "SWAP1"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "DUP2"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "MSTORE"
										},
										{
											"begin": 28130,
											"end": 28141,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "SWAP1"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "DUP2"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "MSTORE"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "DUP1"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "DUP4"
										},
										{
											"begin": 28130,
											"end": 28152,
											"name": "KECCAK256"
										},
										{
											"begin": 28130,
											"end": 28195,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28153,
											"end": 28169,
											"name": "DUP10"
										},
										{
											"begin": 28153,
											"end": 28169,
											"name": "ADD"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "DUP2"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "AND"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "DUP6"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "MSTORE"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "SWAP3"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "MSTORE"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "SWAP1"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "SWAP2"
										},
										{
											"begin": 28130,
											"end": 28170,
											"name": "KECCAK256"
										},
										{
											"begin": 28130,
											"end": 28180,
											"name": "SLOAD"
										},
										{
											"begin": 28130,
											"end": 28195,
											"name": "DUP3"
										},
										{
											"begin": 28130,
											"end": 28195,
											"name": "DUP3"
										},
										{
											"begin": 28130,
											"end": 28195,
											"name": "AND"
										},
										{
											"begin": 28130,
											"end": 28180,
											"name": "SWAP2"
										},
										{
											"begin": 28130,
											"end": 28180,
											"name": "AND"
										},
										{
											"begin": 28130,
											"end": 28195,
											"name": "EQ"
										},
										{
											"begin": 28110,
											"end": 28195,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 28110,
											"end": 28195,
											"name": "JUMPDEST"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "ISZERO"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "DUP6"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "AND"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "DUP2"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "MSTORE"
										},
										{
											"begin": 28209,
											"end": 28220,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "DUP2"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "MSTORE"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "DUP1"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "DUP4"
										},
										{
											"begin": 28209,
											"end": 28231,
											"name": "KECCAK256"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28232,
											"end": 28248,
											"name": "DUP10"
										},
										{
											"begin": 28232,
											"end": 28248,
											"name": "ADD"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "AND"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "DUP5"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "MSTORE"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "SWAP2"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "MSTORE"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28249,
											"name": "KECCAK256"
										},
										{
											"begin": 28247,
											"end": 28248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28209,
											"end": 28255,
											"name": "ADD"
										},
										{
											"begin": 28209,
											"end": 28266,
											"name": "DUP3"
										},
										{
											"begin": 28209,
											"end": 28266,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28266,
											"name": "SSTORE"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "JUMP"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "JUMPDEST"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP1"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "MLOAD"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP1"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP3"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "ADD"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP3"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "MSTORE"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP1"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP5"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "AND"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP3"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "MSTORE"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP1"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP4"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "ADD"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP7"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "DUP2"
										},
										{
											"begin": 28332,
											"end": 28365,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "DUP11"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "DUP2"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "DUP2"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "MSTORE"
										},
										{
											"begin": 28293,
											"end": 28304,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "DUP5"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "MSTORE"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "DUP7"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "DUP2"
										},
										{
											"begin": 28293,
											"end": 28315,
											"name": "KECCAK256"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "DUP12"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "DUP7"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "AND"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "DUP3"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "MSTORE"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "DUP5"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "MSTORE"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "DUP7"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "DUP2"
										},
										{
											"begin": 28293,
											"end": 28329,
											"name": "KECCAK256"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SWAP6"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "MLOAD"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "DUP7"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SLOAD"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SWAP1"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "DUP7"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SWAP2"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "DUP3"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "AND"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "OR"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "DUP8"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SSTORE"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SWAP3"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "MLOAD"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SWAP7"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "DUP8"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "ADD"
										},
										{
											"begin": 28293,
											"end": 28365,
											"name": "SSTORE"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "SWAP1"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "DUP2"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "MSTORE"
										},
										{
											"begin": 28377,
											"end": 28391,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "SWAP1"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "SWAP3"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "MSTORE"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "SWAP4"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "SWAP1"
										},
										{
											"begin": 28377,
											"end": 28402,
											"name": "KECCAK256"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "DUP1"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SLOAD"
										},
										{
											"begin": 28405,
											"end": 28421,
											"name": "SWAP3"
										},
										{
											"begin": 28405,
											"end": 28421,
											"name": "DUP9"
										},
										{
											"begin": 28405,
											"end": 28421,
											"name": "ADD"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SWAP1"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SWAP2"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "AND"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SWAP2"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SWAP1"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SWAP3"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "AND"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "OR"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SWAP1"
										},
										{
											"begin": 28377,
											"end": 28421,
											"name": "SSTORE"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 28106,
											"end": 28430,
											"name": "JUMPDEST"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP1"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "MLOAD"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP5"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP2"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "MSTORE"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP2"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "ADD"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP5"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "SWAP1"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "MSTORE"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP2"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP9"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "AND"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "SWAP3"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "SWAP3"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "DUP3"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "SWAP1"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "SUB"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "ADD"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "SWAP1"
										},
										{
											"begin": 28443,
											"end": 28494,
											"name": "LOG2"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "POP"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "POP"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "POP"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "POP"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "POP"
										},
										{
											"begin": 27901,
											"end": 28501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28511,
											"end": 28672,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 28511,
											"end": 28672,
											"name": "JUMPDEST"
										},
										{
											"begin": 28589,
											"end": 28595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28626,
											"end": 28638,
											"name": "DUP2"
										},
										{
											"begin": 28619,
											"end": 28624,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 28615,
											"end": 28624,
											"name": "DUP5"
										},
										{
											"begin": 28615,
											"end": 28624,
											"name": "LT"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "JUMPI"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP2"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "MSTORE"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP3"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "ADD"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP2"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP2"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "MSTORE"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP4"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "MLOAD"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP5"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "ADD"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "MSTORE"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP4"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "MLOAD"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP1"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP3"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP4"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP3"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP1"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP2"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "ADD"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP2"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP1"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP6"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "ADD"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "SWAP1"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP1"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP4"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "DUP4"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 28607,
											"end": 28639,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28663,
											"end": 28664,
											"name": "SWAP2"
										},
										{
											"begin": 28663,
											"end": 28664,
											"name": "SWAP3"
										},
										{
											"begin": 28511,
											"end": 28672,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28511,
											"end": 28672,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMPDEST"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "MLOAD"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "SWAP2"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "MSTORE"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "DUP3"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "ADD"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "MSTORE"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "SWAP1"
										},
										{
											"begin": 13393,
											"end": 28996,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2CD250AFF92BA04A009213390107E53E83F14A04575E595AF9230B9654AFED9": "43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373",
										"36CE88BA958E2B0D44CDA35791945F0A281D35D6E350D9C9F8EEDD2B2359D57D": "43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373",
										"3FC916DC37CF2CF07A856AD1473AD93B10F9A58E0AD4DC3C2FF0CEABBA196973": "546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"42D9A8E134AF3312DAACAC2D2003D2E3A900F5F05EB0DE35B651F1E9CE1C4E5B": "5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"5E83471B3A3D1FE92BFF19912BAB84DCC2C92190AF741E7C33D886D7EC91F5D1": "546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"AC444B4635A35929A68A5C8FA43076F8FD9D5DD9C52546538D69B2042F34C77": "54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773",
										"BD9517161462829BE5A3D25154AE5230E5AD2E2AAAB3C9BF15E6E48716B4A12E": "43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEEA2FA463CDACA7BCC6C65F53B7AE24609806E88CA4FDB7ADE049DC06112288": "43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
										"E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
										"F5CEF2FE2A70CA222ED18C80624B418B6D950CFD5CB46A9F7C5AB6B4AB537CEE": "43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"freeze()": "62a5af3b",
							"getCurrentVotes(address)": "b4b5ea57",
							"getOwner()": "893d20e8",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"lockUser(address)": "d7972580",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze()": "6a28f000",
							"unlockUser(address)": "bd1870a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"LockUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"UnlockUser\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`\",\"params\":{\"amount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"receiveApproval(...) is executed.\",\"params\":{\"amount\":\"The number of tokens that are approved\",\"data\":\"The data to pass to receiveApproval(...)\"},\"return\":\"true\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"burn(uint256)\":{\"details\":\"The amount must be greater than balance, total supply.\",\"params\":{\"amount\":\"The number of tokens that are burnt\"},\"return\":\"true\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.\",\"params\":{\"spender\":\"The address of the account which may transfer tokens\",\"subtractedValue\":\"The subtractional number of tokens to allow which may be spent\"},\"return\":\"Whether or not the approval succeeded\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"increaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.\",\"params\":{\"addedValue\":\"The additional number of tokens to allow which may be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the total supply.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"recipient\":\"The address of the destination account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"recipient\":\"The address of the destination account\",\"sender\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Approve the spender to transferFrom(...) with the amount.\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"burn(uint256)\":{\"notice\":\"Destroy the amount of tokens from the sender, reducing the total supply.\"},\"constructor\":\"Construct a new GTFX Testnet token\",\"decreaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"GTFX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "isLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 487,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "blacklist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 558,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 564,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 566,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 568,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 570,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 572,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_name",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 576,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "delegates",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 587,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "checkpoints",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)581_storage))"
							},
							{
								"astId": 591,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 605,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "nonces",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)581_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)581_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)581_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct GTFX.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)581_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)581_storage": {
								"encoding": "inplace",
								"label": "struct GTFX.Checkpoint",
								"members": [
									{
										"astId": 578,
										"contract": "contracts/4_SmartGTFX.sol:GTFX",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 580,
										"contract": "contracts/4_SmartGTFX.sol:GTFX",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"approveAndCall(address,uint256,bytes)": {
								"notice": "Approve the spender to transferFrom(...) with the amount."
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"burn(uint256)": {
								"notice": "Destroy the amount of tokens from the sender, reducing the total supply."
							},
							"constructor": "Construct a new GTFX Testnet token",
							"decreaseAllowance(address,uint256)": {
								"notice": "Atomically increases the allowance granted to `spender` by the caller"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"increaseAllowance(address,uint256)": {
								"notice": "Atomically increases the allowance granted to `spender` by the caller"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":1017:5711  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":1017:5711  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158207034cdca6e1e5eeda12eb05fe4b5b5a043a6bbafbf603f08c53919f79b63ca2164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207034cdca6e1e5eeda12eb05fe4b5b5a043a6bbafbf603f08c53919f79b63ca2164736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH17 0x34CDCA6E1E5EEDA12EB05FE4B5B5A043A6 0xBB 0xAF 0xBF PUSH1 0x3F ADDMOD 0xC5 CODECOPY NOT 0xF7 SWAP12 PUSH4 0xCA216473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1017:4694:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207034cdca6e1e5eeda12eb05fe4b5b5a043a6bbafbf603f08c53919f79b63ca2164736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH17 0x34CDCA6E1E5EEDA12EB05FE4B5B5A043A6 0xBB 0xAF 0xBF PUSH1 0x3F ADDMOD 0xC5 CODECOPY NOT 0xF7 SWAP12 PUSH4 0xCA216473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1017:4694:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"add(uint256,uint256,string memory)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1017,
									"end": 5711,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1017,
									"end": 5711,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207034cdca6e1e5eeda12eb05fe4b5b5a043a6bbafbf603f08c53919f79b63ca2164736f6c63430005110032",
									".code": [
										{
											"begin": 1017,
											"end": 5711,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "ADDRESS"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "EQ"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "MSTORE"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "DUP1"
										},
										{
											"begin": 1017,
											"end": 5711,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Tokenlock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "Freezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "UnFreezed",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":11804:12259  contract Tokenlock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":11902:11903  0 */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":11885:11903  uint8 isLocked = 0 */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7507:7519  _msgSender() */\n  tag_5\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7507:7517  _msgSender */\n  tag_6\n    /* \"contracts/4_SmartGTFX.sol\":7507:7519  _msgSender() */\n  and\n  jump\t// in\ntag_5:\n    /* \"contracts/4_SmartGTFX.sol\":7525:7531  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7525:7543  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7525:7543  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7525:7531  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":7457:7602  constructor () internal {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":11804:12259  contract Tokenlock is Ownable {... */\n  jump(tag_7)\n    /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/4_SmartGTFX.sol\":6490:6500  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":11804:12259  contract Tokenlock is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":11804:12259  contract Tokenlock is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":11804:12259  contract Tokenlock is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62a5af3b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6a28f000\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":12053:12150  function freeze() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":12156:12257  function unfreeze() public onlyOwner {... */\n    tag_4:\n      tag_8\n      tag_11\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_8\n      tag_13\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":12053:12150  function freeze() public onlyOwner {... */\n    tag_9:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_20\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_22\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/4_SmartGTFX.sol\":12098:12106  isLocked */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12098:12110  isLocked = 1 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12134:12143  Freezed() */\n      mload(0x40)\n      0x962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12098:12106  isLocked */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12134:12143  Freezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12053:12150  function freeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12156:12257  function unfreeze() public onlyOwner {... */\n    tag_11:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_25\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/4_SmartGTFX.sol\":12214:12215  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12203:12215  isLocked = 0 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12239:12250  UnFreezed() */\n      mload(0x40)\n      0xf0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12214:12215  0 */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12239:12250  UnFreezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12156:12257  function unfreeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n    tag_13:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_29\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_29:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_30\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_30:\n        /* \"contracts/4_SmartGTFX.sol\":8347:8348  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8331:8337  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8331:8337  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8347:8348  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8373:8374  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8356:8375  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n    tag_15:\n        /* \"contracts/4_SmartGTFX.sol\":7708:7715  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7730:7736  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_34\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_34:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_35\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/4_SmartGTFX.sol\":8587:8615  _transferOwnership(newOwner) */\n      tag_37\n        /* \"contracts/4_SmartGTFX.sol\":8606:8614  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8587:8605  _transferOwnership */\n      tag_38\n        /* \"contracts/4_SmartGTFX.sol\":8587:8615  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n    tag_21:\n        /* \"contracts/4_SmartGTFX.sol\":6490:6500  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8713:8924  function _transferOwnership(address newOwner) internal {... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8782:8804  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8774:8847  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/4_SmartGTFX.sol\":8879:8885  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8858:8896  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8879:8885  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8858:8896  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8902:8908  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8902:8919  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8713:8924  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa265627a7a72315820bca71356ac46ec9544f524c973471ce948a597ac72611fcdc5375c2072bcb34f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b191681556100226001600160e01b0361007116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610075565b3390565b610416806100846000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806362a5af3b1461005c5780636a28f00014610066578063715018a61461006e5780638da5cb5b14610076578063f2fde38b1461009a575b600080fd5b6100646100c0565b005b610064610154565b6100646101e2565b61007e610284565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100b057600080fd5b50356001600160a01b0316610293565b6100c86102f7565b6000546001600160a01b03908116911614610118576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b61015c6102f7565b6000546001600160a01b039081169116146101ac576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b6101ea6102f7565b6000546001600160a01b0390811691161461023a576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029b6102f7565b6000546001600160a01b039081169116146102eb576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6102f4816102fb565b50565b3390565b6001600160a01b0381166103405760405162461bcd60e51b815260040180806020018281038252602681526020018061039c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72315820bca71356ac46ec9544f524c973471ce948a597ac72611fcdc5375c2072bcb34f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH2 0x22 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x71 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x75 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x416 DUP1 PUSH2 0x84 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A72315820BCA713 JUMP 0xAC CHAINID 0xEC SWAP6 DIFFICULTY CREATE2 0x24 0xC9 PUSH20 0x471CE948A597AC72611FCDC5375C2072BCB34F64 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "11804:455:0:-;;;11902:1;11885:18;;-1:-1:-1;;;;11885:18:0;;;7507:12;-1:-1:-1;;;;;7507:10:0;:12;:::i;:::-;7525:6;:18;;-1:-1:-1;;;;;;7525:18:0;-1:-1:-1;;;;;7525:18:0;;;;;;;7554:43;;7525:18;;-1:-1:-1;7525:18:0;7554:43;;7525:6;;7554:43;7457:145;11804:455;;6415:90;6490:10;6415:90;:::o;11804:455::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806362a5af3b1461005c5780636a28f00014610066578063715018a61461006e5780638da5cb5b14610076578063f2fde38b1461009a575b600080fd5b6100646100c0565b005b610064610154565b6100646101e2565b61007e610284565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100b057600080fd5b50356001600160a01b0316610293565b6100c86102f7565b6000546001600160a01b03908116911614610118576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b61015c6102f7565b6000546001600160a01b039081169116146101ac576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b6101ea6102f7565b6000546001600160a01b0390811691161461023a576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029b6102f7565b6000546001600160a01b039081169116146102eb576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6102f4816102fb565b50565b3390565b6001600160a01b0381166103405760405162461bcd60e51b815260040180806020018281038252602681526020018061039c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72315820bca71356ac46ec9544f524c973471ce948a597ac72611fcdc5375c2072bcb34f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A72315820BCA713 JUMP 0xAC CHAINID 0xEC SWAP6 DIFFICULTY CREATE2 0x24 0xC9 PUSH20 0x471CE948A597AC72611FCDC5375C2072BCB34F64 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "11804:455:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11804:455:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12053:97;;;:::i;:::-;;12156:101;;;:::i;8253:127::-;;;:::i;7670:71::-;;;:::i;:::-;;;;-1:-1:-1;;;;;7670:71:0;;;;;;;;;;;;;;8519:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8519:101:0;-1:-1:-1;;;;;8519:101:0;;:::i;12053:97::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;12098:8;:12;;-1:-1:-1;;;;12098:12:0;-1:-1:-1;;;12098:12:0;;;12134:9;;;;12098:8;12134:9;12053:97::o;12156:101::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;12214:1;12203:12;;-1:-1:-1;;;;12203:12:0;;;12239:11;;;;12214:1;12239:11;12156:101::o;8253:127::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;8347:1;8331:6;;8310:40;;-1:-1:-1;;;;;8331:6:0;;;;8310:40;;8347:1;;8310:40;8373:1;8356:19;;-1:-1:-1;;;;;;8356:19:0;;;8253:127::o;7670:71::-;7708:7;7730:6;-1:-1:-1;;;;;7730:6:0;7670:71;:::o;8519:101::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;8587:28;8606:8;8587:18;:28::i;:::-;8519:101;:::o;6415:90::-;6490:10;6415:90;:::o;8713:211::-;-1:-1:-1;;;;;8782:22:0;;8774:73;;;;-1:-1:-1;;;8774:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8879:6;;;8858:38;;-1:-1:-1;;;;;8858:38:0;;;;8879:6;;;8858:38;;;8902:6;:17;;-1:-1:-1;;;;;;8902:17:0;-1:-1:-1;;;;;8902:17:0;;;;;;;;;;8713:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"freeze()": "infinite",
								"owner()": "1081",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreeze()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "MSTORE"
								},
								{
									"begin": 11902,
									"end": 11903,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "DUP1"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "AND"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "DUP2"
								},
								{
									"begin": 11885,
									"end": 11903,
									"name": "SSTORE"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7507,
									"end": 7517,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "AND"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "JUMPDEST"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP1"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP4"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "AND"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP1"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP2"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "OR"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP3"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SSTORE"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "MLOAD"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP3"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP2"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "SWAP1"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "DUP3"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "SWAP1"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "LOG3"
								},
								{
									"begin": 7457,
									"end": 7602,
									"name": "POP"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "JUMP"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMPDEST"
								},
								{
									"begin": 6490,
									"end": 6500,
									"name": "CALLER"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "SWAP1"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "JUMPDEST"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "DUP1"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "CODECOPY"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11804,
									"end": 12259,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bca71356ac46ec9544f524c973471ce948a597ac72611fcdc5375c2072bcb34f64736f6c63430005110032",
									".code": [
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "MSTORE"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "POP"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "LT"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPI"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "SHR"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "62A5AF3B"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "EQ"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPI"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "EQ"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPI"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "EQ"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPI"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "EQ"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPI"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "EQ"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPI"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "JUMPDEST"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "DUP1"
										},
										{
											"begin": 11804,
											"end": 12259,
											"name": "REVERT"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMPDEST"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMPDEST"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "STOP"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMPDEST"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "DUP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP3"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "AND"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "DUP3"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "MSTORE"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "MLOAD"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "DUP2"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SUB"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "ADD"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "RETURN"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "DUP1"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "AND"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 12098,
											"end": 12106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "DUP1"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "OR"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "DUP2"
										},
										{
											"begin": 12098,
											"end": 12110,
											"name": "SSTORE"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "MLOAD"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "PUSH",
											"value": "962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "SWAP2"
										},
										{
											"begin": 12098,
											"end": 12106,
											"name": "SWAP1"
										},
										{
											"begin": 12134,
											"end": 12143,
											"name": "LOG1"
										},
										{
											"begin": 12053,
											"end": 12150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "SSTORE"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "MLOAD"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "PUSH",
											"value": "F0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "SWAP2"
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "SWAP1"
										},
										{
											"begin": 12239,
											"end": 12250,
											"name": "LOG1"
										},
										{
											"begin": 12156,
											"end": 12257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP1"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SLOAD"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "AND"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP1"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "SWAP1"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "DUP4"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "SWAP1"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "LOG3"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "DUP1"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "AND"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SWAP1"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SSTORE"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "AND"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8606,
											"end": 8614,
											"name": "DUP2"
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "JUMPDEST"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "POP"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "JUMPDEST"
										},
										{
											"begin": 6490,
											"end": 6500,
											"name": "CALLER"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8782,
											"end": 8804,
											"name": "DUP2"
										},
										{
											"begin": 8782,
											"end": 8804,
											"name": "AND"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "JUMPI"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP3"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP3"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "CODECOPY"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MLOAD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "REVERT"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "JUMPDEST"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP1"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SLOAD"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP1"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP6"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "AND"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP4"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SWAP3"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "AND"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SWAP2"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP2"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "LOG3"
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "DUP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP3"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP3"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "OR"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SSTORE"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"freeze()": "62a5af3b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze()": "6a28f000"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Tokenlock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:Tokenlock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "contracts/4_SmartGTFX.sol:Tokenlock",
								"label": "isLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"UserLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "LockUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "UnlockUser",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "lockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "unlockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":12853:13391  contract UserLock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":7487:7504  address msgSender */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7507:7519  _msgSender() */\n  tag_5\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7507:7517  _msgSender */\n  tag_6\n    /* \"contracts/4_SmartGTFX.sol\":7507:7519  _msgSender() */\n  and\n  jump\t// in\ntag_5:\n    /* \"contracts/4_SmartGTFX.sol\":7525:7531  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7525:7543  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7525:7543  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7525:7531  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7554:7597  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":7457:7602  constructor () internal {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":12853:13391  contract UserLock is Ownable {... */\n  jump(tag_7)\n    /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/4_SmartGTFX.sol\":6490:6500  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":12853:13391  contract UserLock is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":12853:13391  contract UserLock is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":12853:13391  contract UserLock is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbd1870a3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd7972580\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n    tag_5:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_14\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n    tag_6:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_17\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n    tag_9:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_22\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_24\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_24:\n        /* \"contracts/4_SmartGTFX.sol\":8347:8348  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8331:8337  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8331:8337  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8347:8348  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8310:8350  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8373:8374  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8356:8375  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8253:8380  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n    tag_11:\n        /* \"contracts/4_SmartGTFX.sol\":7708:7715  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7730:7736  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7670:7741  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n    tag_14:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_28\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_29\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13321:13335  blacklist[who] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13338:13343  false */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":13321:13335  blacklist[who] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13321:13330  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13321:13335  blacklist[who] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13321:13343  blacklist[who] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13367:13382  UnlockUser(who) */\n      mload\n      0x687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13338:13343  false */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13367:13382  UnlockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13261:13389  function unlockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n    tag_17:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_32\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_33\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13190:13204  blacklist[who] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13207:13211  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13190:13204  blacklist[who] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13190:13211  blacklist[who] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13235:13248  LockUser(who) */\n      mload\n      0x169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13190:13204  blacklist[who] */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13235:13248  LockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13132:13255  function lockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      tag_36\n        /* \"contracts/4_SmartGTFX.sol\":7866:7876  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7866:7878  _msgSender() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/4_SmartGTFX.sol\":7856:7862  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7856:7878  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7848:7915  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_37\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/4_SmartGTFX.sol\":8587:8615  _transferOwnership(newOwner) */\n      tag_39\n        /* \"contracts/4_SmartGTFX.sol\":8606:8614  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8587:8605  _transferOwnership */\n      tag_40\n        /* \"contracts/4_SmartGTFX.sol\":8587:8615  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/4_SmartGTFX.sol\":8519:8620  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n    tag_23:\n        /* \"contracts/4_SmartGTFX.sol\":6490:6500  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6415:6505  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8713:8924  function _transferOwnership(address newOwner) internal {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8782:8804  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8774:8847  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/4_SmartGTFX.sol\":8879:8885  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8858:8896  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8879:8885  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8858:8896  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8902:8908  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8902:8919  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8713:8924  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa265627a7a7231582007cd3e9e6359eaa633a0e6b03b4558906ac8a13e1d2828f355353de869ff206664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b610478806100796000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063bd1870a31461008a578063d7972580146100b0578063f2fde38b146100d6575b600080fd5b6100646100fc565b005b61006e61019e565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100a057600080fd5b50356001600160a01b03166101ad565b610064600480360360208110156100c657600080fd5b50356001600160a01b031661024e565b610064600480360360208110156100ec57600080fd5b50356001600160a01b03166102f5565b610104610359565b6000546001600160a01b03908116911614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101b5610359565b6000546001600160a01b03908116911614610205576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b610256610359565b6000546001600160a01b039081169116146102a6576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6102fd610359565b6000546001600160a01b0390811691161461034d576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6103568161035d565b50565b3390565b6001600160a01b0381166103a25760405162461bcd60e51b81526004018080602001828103825260268152602001806103fe6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a7231582007cd3e9e6359eaa633a0e6b03b4558906ac8a13e1d2828f355353de869ff206664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x17 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x66 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x478 DUP1 PUSH2 0x79 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24E JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x205 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x34D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x35D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A7231582007CD3E SWAP15 PUSH4 0x59EAA633 LOG0 0xE6 0xB0 EXTCODESIZE GASLIMIT PC SWAP1 PUSH11 0xC8A13E1D2828F355353DE8 PUSH10 0xFF206664736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "12853:538:0:-;;;7487:17;7507:12;-1:-1:-1;;;;;7507:10:0;:12;:::i;:::-;7525:6;:18;;-1:-1:-1;;;;;;7525:18:0;-1:-1:-1;;;;;7525:18:0;;;;;;;7554:43;;7525:18;;-1:-1:-1;7525:18:0;7554:43;;7525:6;;7554:43;7457:145;12853:538;;6415:90;6490:10;6415:90;:::o;12853:538::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063bd1870a31461008a578063d7972580146100b0578063f2fde38b146100d6575b600080fd5b6100646100fc565b005b61006e61019e565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100a057600080fd5b50356001600160a01b03166101ad565b610064600480360360208110156100c657600080fd5b50356001600160a01b031661024e565b610064600480360360208110156100ec57600080fd5b50356001600160a01b03166102f5565b610104610359565b6000546001600160a01b03908116911614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101b5610359565b6000546001600160a01b03908116911614610205576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b610256610359565b6000546001600160a01b039081169116146102a6576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6102fd610359565b6000546001600160a01b0390811691161461034d576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6103568161035d565b50565b3390565b6001600160a01b0381166103a25760405162461bcd60e51b81526004018080602001828103825260268152602001806103fe6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a7231582007cd3e9e6359eaa633a0e6b03b4558906ac8a13e1d2828f355353de869ff206664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24E JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x205 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x34D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x35D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A7231582007CD3E SWAP15 PUSH4 0x59EAA633 LOG0 0xE6 0xB0 EXTCODESIZE GASLIMIT PC SWAP1 PUSH11 0xC8A13E1D2828F355353DE8 PUSH10 0xFF206664736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "12853:538:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12853:538:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8253:127;;;:::i;:::-;;7670:71;;;:::i;:::-;;;;-1:-1:-1;;;;;7670:71:0;;;;;;;;;;;;;;13261:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13261:128:0;-1:-1:-1;;;;;13261:128:0;;:::i;13132:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13132:123:0;-1:-1:-1;;;;;13132:123:0;;:::i;8519:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8519:101:0;-1:-1:-1;;;;;8519:101:0;;:::i;8253:127::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;8347:1;8331:6;;8310:40;;-1:-1:-1;;;;;8331:6:0;;;;8310:40;;8347:1;;8310:40;8373:1;8356:19;;-1:-1:-1;;;;;;8356:19:0;;;8253:127::o;7670:71::-;7708:7;7730:6;-1:-1:-1;;;;;7730:6:0;7670:71;:::o;13261:128::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13321:14:0;;13338:5;13321:14;;;:9;:14;;;;;;:22;;-1:-1:-1;;13321:22:0;;;13367:15;;;13338:5;13367:15;13261:128;:::o;13132:123::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13190:14:0;;;;;;13207:4;13190:14;;;;;;;;:21;;-1:-1:-1;;13190:21:0;;;;;;;13235:13;;;13190:14;13235:13;13132:123;:::o;8519:101::-;7866:12;:10;:12::i;:::-;7856:6;;-1:-1:-1;;;;;7856:6:0;;;:22;;;7848:67;;;;;-1:-1:-1;;;7848:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7848:67:0;;;;;;;;;;;;;;;8587:28;8606:8;8587:18;:28::i;:::-;8519:101;:::o;6415:90::-;6490:10;6415:90;:::o;8713:211::-;-1:-1:-1;;;;;8782:22:0;;8774:73;;;;-1:-1:-1;;;8774:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8879:6;;;8858:38;;-1:-1:-1;;;;;8858:38:0;;;;8879:6;;;8858:38;;;8902:6;:17;;-1:-1:-1;;;;;;8902:17:0;-1:-1:-1;;;;;8902:17:0;;;;;;;;;;8713:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "228800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"lockUser(address)": "infinite",
								"owner()": "1037",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockUser(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "MSTORE"
								},
								{
									"begin": 7487,
									"end": 7504,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7507,
									"end": 7517,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "AND"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7507,
									"end": 7519,
									"name": "JUMPDEST"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP1"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP4"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "AND"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP1"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP2"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "OR"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "DUP3"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SSTORE"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "MLOAD"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP3"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7525,
									"end": 7543,
									"name": "SWAP2"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "SWAP1"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "DUP3"
								},
								{
									"begin": 7525,
									"end": 7531,
									"name": "SWAP1"
								},
								{
									"begin": 7554,
									"end": 7597,
									"name": "LOG3"
								},
								{
									"begin": 7457,
									"end": 7602,
									"name": "POP"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "JUMP"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMPDEST"
								},
								{
									"begin": 6490,
									"end": 6500,
									"name": "CALLER"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "SWAP1"
								},
								{
									"begin": 6415,
									"end": 6505,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "JUMPDEST"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "DUP1"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "CODECOPY"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12853,
									"end": 13391,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582007cd3e9e6359eaa633a0e6b03b4558906ac8a13e1d2828f355353de869ff206664736f6c63430005110032",
									".code": [
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "MSTORE"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "POP"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "LT"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPI"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "SHR"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "DUP1"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "EQ"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPI"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "DUP1"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "EQ"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPI"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "DUP1"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "EQ"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPI"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "DUP1"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "D7972580"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "EQ"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPI"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "DUP1"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "EQ"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPI"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "JUMPDEST"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "DUP1"
										},
										{
											"begin": 12853,
											"end": 13391,
											"name": "REVERT"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "STOP"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "DUP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP3"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "AND"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "DUP3"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "MSTORE"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "MLOAD"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "DUP2"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SUB"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "ADD"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "RETURN"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMPDEST"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "DUP1"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "AND"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMPDEST"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "DUP1"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "AND"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "DUP1"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "AND"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP1"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SLOAD"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "AND"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "SWAP1"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "SWAP1"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "DUP4"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "SWAP1"
										},
										{
											"begin": 8310,
											"end": 8350,
											"name": "LOG3"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "DUP1"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "AND"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SWAP1"
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SSTORE"
										},
										{
											"begin": 8253,
											"end": 8380,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7708,
											"end": 7715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "AND"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7670,
											"end": 7741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP2"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "AND"
										},
										{
											"begin": 13338,
											"end": 13343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP2"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP2"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "MSTORE"
										},
										{
											"begin": 13321,
											"end": 13330,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "MSTORE"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP1"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "DUP3"
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "KECCAK256"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "DUP1"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "AND"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "SWAP1"
										},
										{
											"begin": 13321,
											"end": 13343,
											"name": "SSTORE"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "MLOAD"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "PUSH",
											"value": "687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "SWAP2"
										},
										{
											"begin": 13338,
											"end": 13343,
											"name": "SWAP1"
										},
										{
											"begin": 13367,
											"end": 13382,
											"name": "LOG2"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13389,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "AND"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "MSTORE"
										},
										{
											"begin": 13207,
											"end": 13211,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "SWAP1"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "MSTORE"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP1"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "DUP4"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "KECCAK256"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "DUP1"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "AND"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP1"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP3"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "OR"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP1"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP2"
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SSTORE"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "MLOAD"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "PUSH",
											"value": "169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "SWAP2"
										},
										{
											"begin": 13190,
											"end": 13204,
											"name": "SWAP1"
										},
										{
											"begin": 13235,
											"end": 13248,
											"name": "LOG2"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "POP"
										},
										{
											"begin": 13132,
											"end": 13255,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMPDEST"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "JUMPDEST"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "SWAP1"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP2"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "SWAP2"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7856,
											"end": 7878,
											"name": "EQ"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPI"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP3"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MSTORE"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "DUP2"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SUB"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "REVERT"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8606,
											"end": 8614,
											"name": "DUP2"
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8587,
											"end": 8615,
											"name": "JUMPDEST"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "POP"
										},
										{
											"begin": 8519,
											"end": 8620,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "JUMPDEST"
										},
										{
											"begin": 6490,
											"end": 6500,
											"name": "CALLER"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "SWAP1"
										},
										{
											"begin": 6415,
											"end": 6505,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8782,
											"end": 8804,
											"name": "DUP2"
										},
										{
											"begin": 8782,
											"end": 8804,
											"name": "AND"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "JUMPI"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP3"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP3"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MSTORE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "CODECOPY"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "ADD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "POP"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "MLOAD"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "DUP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP2"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SUB"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "SWAP1"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "REVERT"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8774,
											"end": 8847,
											"name": "JUMPDEST"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP1"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SLOAD"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP1"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP6"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "AND"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP4"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SWAP3"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "AND"
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "SWAP2"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP2"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "LOG3"
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "DUP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP3"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP3"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "OR"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8919,
											"name": "SSTORE"
										},
										{
											"begin": 8713,
											"end": 8924,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"lockUser(address)": "d7972580",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unlockUser(address)": "bd1870a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"LockUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"UnlockUser\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"UserLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0x63dbeb8d158ba9255f3bf4280b1d031199f2d67961995829bcda783cb8181993\",\"urls\":[\"bzz-raw://29fbc3f8d83ff0de17d1ea33b96eece7222ed48fd283c2032f10948b274db8d0\",\"dweb:/ipfs/QmV35EjVq3R4jJJBJ1MSWyvaE1R6HtgPjqpgmKAgpmwKAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:UserLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 487,
								"contract": "contracts/4_SmartGTFX.sol:UserLock",
								"label": "blacklist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/4_SmartGTFX.sol": {
				"ast": {
					"absolutePath": "contracts/4_SmartGTFX.sol",
					"exportedSymbols": {
						"ApproveAndCallFallBack": [
							481
						],
						"BEP20Interface": [
							422
						],
						"Context": [
							229
						],
						"GTFX": [
							1692
						],
						"Ownable": [
							335
						],
						"SafeMath": [
							204
						],
						"Tokenlock": [
							469
						],
						"UserLock": [
							545
						]
					},
					"id": 1693,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1309:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 11,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1326:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 12,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 10,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															17,
															44
														],
														"referencedDeclaration": 44,
														"src": "1322:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1315:47:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1255:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1266:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1254:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1300:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1299:9:0"
									},
									"scope": 204,
									"src": "1242:125:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1726:78:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "1732:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1744:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1744:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1732:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1763:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1771:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "1755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1755:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1755:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1798:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 27,
												"id": 42,
												"nodeType": "Return",
												"src": "1791:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1644:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1655:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1666:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1666:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1643:50:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1717:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1716:9:0"
									},
									"scope": 204,
									"src": "1631:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2115:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 54,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 55,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2135:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2138:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 53,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															60,
															87
														],
														"referencedDeclaration": 87,
														"src": "2128:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "2121:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2061:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2072:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2060:22:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2106:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2105:9:0"
									},
									"scope": 204,
									"src": "2048:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2535:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 72,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "2549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2554:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2549:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 75,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2557:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "2541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2541:29:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "2576:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 78,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2588:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2592:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2576:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 79,
													"src": "2607:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 70,
												"id": 85,
												"nodeType": "Return",
												"src": "2600:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2453:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2475:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 65,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2452:50:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2525:9:0"
									},
									"scope": 204,
									"src": "2440:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2900:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 96,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3121:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3116:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 102,
												"nodeType": "IfStatement",
												"src": "3112:35:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "3124:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3139:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 95,
															"id": 100,
															"nodeType": "Return",
															"src": "3132:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 120,
														"src": "3153:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 105,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 106,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3153:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "3184:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "3188:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3184:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3193:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3184:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3196:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "3176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3176:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "3176:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 104,
													"src": "3246:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 119,
												"nodeType": "Return",
												"src": "3239:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2846:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2857:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2845:22:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2890:9:0"
									},
									"scope": 204,
									"src": "2833:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3750:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 131,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3767:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 132,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3770:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3773:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 130,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															164
														],
														"referencedDeclaration": 164,
														"src": "3763:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 135,
												"nodeType": "Return",
												"src": "3756:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3695:22:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3741:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3740:9:0"
									},
									"scope": 204,
									"src": "3683:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4353:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "4429:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4433:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4429:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 152,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "4436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "4421:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4421:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "4421:28:0"
											},
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "4455:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4471:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4455:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "4568:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 162,
												"nodeType": "Return",
												"src": "4561:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4271:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4282:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4293:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4270:50:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4343:9:0"
									},
									"scope": 204,
									"src": "4258:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "5061:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 174,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5078:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5081:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5084:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 173,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															180,
															203
														],
														"referencedDeclaration": 203,
														"src": "5074:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5074:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 178,
												"nodeType": "Return",
												"src": "5067:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5007:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5006:22:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5052:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5051:9:0"
									},
									"scope": 204,
									"src": "4994:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5651:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "5665:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5670:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5665:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5673:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "5657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5657:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5657:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "5699:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "5703:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5699:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "5692:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5569:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5580:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5591:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5591:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5568:50:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5642:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:9:0"
									},
									"scope": 204,
									"src": "5556:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "1017:4694:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6408:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6396:2:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6408:0:0"
									},
									"scope": 229,
									"src": "6384:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "6477:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 213,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6490:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6490:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 212,
												"id": 215,
												"nodeType": "Return",
												"src": "6483:17:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6434:2:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6460:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6459:17:0"
									},
									"scope": 229,
									"src": "6415:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6566:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1723,
													"src": "6572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$229",
														"typeString": "contract Context"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6572:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 224,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6708:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6708:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 221,
												"id": 226,
												"nodeType": "Return",
												"src": "6701:15:0"
											}
										]
									},
									"documentation": null,
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6526:2:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6552:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6551:14:0"
									},
									"scope": 229,
									"src": "6509:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "6213:510:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 230,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 229,
										"src": "7240:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$229",
											"typeString": "contract Context"
										}
									},
									"id": 231,
									"nodeType": "InheritanceSpecifier",
									"src": "7240:7:0"
								}
							],
							"contractDependencies": [
								229
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								229
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 233,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "7252:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 232,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7252:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 239,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7306:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7337:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7305:57:0"
									},
									"src": "7279:84:0"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "7481:121:0",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "7487:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 242,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7487:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 244,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "7507:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7507:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7487:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 247,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7525:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 248,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "7534:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7525:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "7525:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7583:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7575:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7575:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 255,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7587:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 251,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "7554:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7554:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "EmitStatement",
												"src": "7549:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 259,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7469:2:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7481:0:0"
									},
									"scope": 335,
									"src": "7457:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7717:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 233,
													"src": "7730:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "7723:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7684:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7707:9:0"
									},
									"scope": 335,
									"src": "7670:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "7842:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7856:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 271,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7866:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7866:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7856:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7880:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "7848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7848:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "7848:67:0"
											},
											{
												"id": 277,
												"nodeType": "PlaceholderStatement",
												"src": "7921:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 279,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7839:2:0"
									},
									"src": "7821:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "8299:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8331:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8347:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8339:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8339:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 284,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8310:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8310:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "EmitStatement",
												"src": "8305:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 291,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "8356:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8373:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8365:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8356:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "8356:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 282,
											"modifierName": {
												"argumentTypes": null,
												"id": 281,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "8289:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8289:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8279:2:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8299:0:0"
									},
									"scope": 335,
									"src": "8253:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8581:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 306,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8606:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 305,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "8587:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8587:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "8587:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 303,
											"modifierName": {
												"argumentTypes": null,
												"id": 302,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "8571:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8571:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8546:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8545:18:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8581:0:0"
									},
									"scope": 335,
									"src": "8519:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "8768:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "8782:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8802:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8794:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8782:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8806:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "8774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8774:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "8774:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 325,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 326,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8887:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 324,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8858:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8858:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "EmitStatement",
												"src": "8853:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 329,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "8902:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "8911:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8902:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8902:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "8741:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8740:18:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8768:0:0"
									},
									"scope": 335,
									"src": "8713:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "7220:1706:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 422,
							"linearizedBaseContracts": [
								422
							],
							"name": "BEP20Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9042:2:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9068:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9067:9:0"
									},
									"scope": 422,
									"src": "9022:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9148:2:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "9174:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9173:7:0"
									},
									"scope": 422,
									"src": "9131:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9248:2:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "9274:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9273:15:0"
									},
									"scope": 422,
									"src": "9233:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9350:2:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9376:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9375:15:0"
									},
									"scope": 422,
									"src": "9337:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9463:2:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9489:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9488:9:0"
									},
									"scope": 422,
									"src": "9446:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9592:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9591:17:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9632:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9631:9:0"
									},
									"scope": 422,
									"src": "9573:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9863:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9882:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9862:35:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9916:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9916:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9915:6:0"
									},
									"scope": 422,
									"src": "9845:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10216:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10199:33:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10255:9:0"
									},
									"scope": 422,
									"src": "10181:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10905:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10922:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10904:33:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10956:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10955:6:0"
									},
									"scope": 422,
									"src": "10888:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11271:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11287:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11270:51:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11340:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11339:6:0"
									},
									"scope": 422,
									"src": "11249:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 413,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11516:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11538:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11558:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11515:57:0"
									},
									"src": "11501:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 421,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11737:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11760:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11785:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11736:63:0"
									},
									"src": "11722:78:0"
								}
							],
							"scope": 1693,
							"src": "8928:2874:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 423,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "11826:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$335",
											"typeString": "contract Ownable"
										}
									},
									"id": 424,
									"nodeType": "InheritanceSpecifier",
									"src": "11826:7:0"
								}
							],
							"contractDependencies": [
								229,
								335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469,
								335,
								229
							],
							"name": "Tokenlock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 427,
									"name": "isLocked",
									"nodeType": "VariableDeclaration",
									"scope": 469,
									"src": "11885:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 425,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11885:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11902:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 429,
									"name": "Freezed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11923:2:0"
									},
									"src": "11910:16:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 431,
									"name": "UnFreezed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11946:2:0"
									},
									"src": "11931:18:0"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "11974:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "isLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "11992:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12004:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11992:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e206973206c6f636b6564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12007:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc",
																"typeString": "literal_string \"Token is locked\""
															},
															"value": "Token is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc",
																"typeString": "literal_string \"Token is locked\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "11984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11984:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "11984:41:0"
											},
											{
												"id": 440,
												"nodeType": "PlaceholderStatement",
												"src": "12035:1:0"
											}
										]
									},
									"documentation": null,
									"id": 442,
									"name": "validLock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11974:0:0"
									},
									"src": "11955:88:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "12088:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "isLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12109:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12098:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "12098:12:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "Freezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "12134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12134:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "12129:14:0"
											}
										]
									},
									"documentation": null,
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 445,
											"modifierName": {
												"argumentTypes": null,
												"id": 444,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12078:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12078:9:0"
										}
									],
									"name": "freeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12068:2:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12088:0:0"
									},
									"scope": 469,
									"src": "12053:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "12193:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "isLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12203:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12214:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12203:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12203:12:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "UnFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "12239:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12239:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "EmitStatement",
												"src": "12234:16:0"
											}
										]
									},
									"documentation": null,
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 458,
											"modifierName": {
												"argumentTypes": null,
												"id": 457,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12183:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12183:9:0"
										}
									],
									"name": "unfreeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12173:2:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12193:0:0"
									},
									"scope": 469,
									"src": "12156:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "11804:455:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 481,
							"linearizedBaseContracts": [
								481
							],
							"name": "ApproveAndCallFallBack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12590:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12604:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12620:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12635:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12635:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12589:64:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12660:0:0"
									},
									"scope": 481,
									"src": "12565:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "12527:136:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 482,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "12874:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$335",
											"typeString": "contract Ownable"
										}
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "12874:7:0"
								}
							],
							"contractDependencies": [
								229,
								335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545,
								335,
								229
							],
							"name": "UserLock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 487,
									"name": "blacklist",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "12888:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 486,
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12896:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12888:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 485,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "12907:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 491,
									"name": "LockUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "12952:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12951:21:0"
									},
									"src": "12937:36:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 495,
									"name": "UnlockUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "12995:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12994:21:0"
									},
									"src": "12978:38:0"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "13047:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "13065:22:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 498,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "13066:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "13076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13066:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426c6f636b65642075736572",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13089:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bdb92a57ecffe6ca16cf18b3af53652b4050f8c932a93a989fb44d81102ba57",
																"typeString": "literal_string \"Blocked user\""
															},
															"value": "Blocked user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bdb92a57ecffe6ca16cf18b3af53652b4050f8c932a93a989fb44d81102ba57",
																"typeString": "literal_string \"Blocked user\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "13057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13057:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "13057:47:0"
											},
											{
												"id": 506,
												"nodeType": "PlaceholderStatement",
												"src": "13114:1:0"
											}
										]
									},
									"documentation": null,
									"id": 508,
									"name": "permissionCheck",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13047:0:0"
									},
									"src": "13022:100:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "13180:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "13190:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "13200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13190:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13207:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13190:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "13190:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 522,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "13244:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 521,
														"name": "LockUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "13235:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13235:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "13230:18:0"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 513,
											"modifierName": {
												"argumentTypes": null,
												"id": 512,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "13170:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13170:9:0"
										}
									],
									"name": "lockUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "13150:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13149:13:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13180:0:0"
									},
									"scope": 545,
									"src": "13132:123:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "13311:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 533,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "13321:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 535,
														"indexExpression": {
															"argumentTypes": null,
															"id": 534,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13331:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13321:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13338:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13321:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "13321:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 540,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13378:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "UnlockUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "13367:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13367:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "13362:20:0"
											}
										]
									},
									"documentation": null,
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 531,
											"modifierName": {
												"argumentTypes": null,
												"id": 530,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "13301:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13301:9:0"
										}
									],
									"name": "unlockUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "13281:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13280:13:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13311:0:0"
									},
									"scope": 545,
									"src": "13261:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "12853:538:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 546,
										"name": "BEP20Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 422,
										"src": "13410:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BEP20Interface_$422",
											"typeString": "contract BEP20Interface"
										}
									},
									"id": 547,
									"nodeType": "InheritanceSpecifier",
									"src": "13410:14:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 548,
										"name": "Tokenlock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 469,
										"src": "13426:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Tokenlock_$469",
											"typeString": "contract Tokenlock"
										}
									},
									"id": 549,
									"nodeType": "InheritanceSpecifier",
									"src": "13426:9:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 550,
										"name": "UserLock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 545,
										"src": "13437:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UserLock_$545",
											"typeString": "contract UserLock"
										}
									},
									"id": 551,
									"nodeType": "InheritanceSpecifier",
									"src": "13437:8:0"
								}
							],
							"contractDependencies": [
								229,
								335,
								422,
								469,
								545
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								545,
								469,
								335,
								229,
								422
							],
							"name": "GTFX",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 554,
									"libraryName": {
										"contractScope": null,
										"id": 552,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 204,
										"src": "13458:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$204",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "13452:27:0",
									"typeName": {
										"id": 553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13471:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 558,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13552:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 557,
										"keyType": {
											"id": 555,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13561:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13552:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 556,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13572:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 564,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13659:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 563,
										"keyType": {
											"id": 559,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13668:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13659:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 562,
											"keyType": {
												"id": 560,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13688:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "13679:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 561,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13699:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 566,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13789:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13789:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 568,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13877:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 567,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "13877:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 570,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13958:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 569,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "13958:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 572,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14036:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 571,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14036:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 576,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14114:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 575,
										"keyType": {
											"id": 573,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14123:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14114:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 574,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14134:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "GTFX.Checkpoint",
									"id": 581,
									"members": [
										{
											"constant": false,
											"id": 578,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 581,
											"src": "14270:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 577,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "14270:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 580,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 581,
											"src": "14296:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 579,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "14296:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1692,
									"src": "14242:74:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 587,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14395:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))"
									},
									"typeName": {
										"id": 586,
										"keyType": {
											"id": 582,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14404:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14395:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))"
										},
										"valueType": {
											"id": 585,
											"keyType": {
												"id": 583,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "14424:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "14415:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
												"typeString": "mapping(uint32 => struct GTFX.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 584,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 581,
												"src": "14434:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$581_storage_ptr",
													"typeString": "struct GTFX.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 591,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14531:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 590,
										"keyType": {
											"id": 588,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14540:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14531:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 589,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "14551:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 596,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14650:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 592,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14650:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 594,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14702:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 593,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1701,
											"src": "14692:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 595,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14692:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 601,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14863:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 597,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14863:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 599,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14919:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 598,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1701,
											"src": "14909:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 600,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14909:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 605,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "15058:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 604,
										"keyType": {
											"id": 602,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15067:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15058:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 603,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15078:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 613,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15205:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15232:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15262:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15204:85:0"
									},
									"src": "15183:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 621,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15409:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15460:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15408:71:0"
									},
									"src": "15382:98:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard BEP-20 transfer event",
									"id": 629,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15552:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15574:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15594:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15551:58:0"
									},
									"src": "15537:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard BEP-20 approval event",
									"id": 637,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15682:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15705:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15730:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15681:64:0"
									},
									"src": "15667:79:0"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "15920:238:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 642,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15930:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "47697473686f636b2046696e616e636520546573746e6574",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15938:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3c84f5804bd650ef7c490921c6272b0e7a9fad9cb5919875bc9a07b9897ed799",
															"typeString": "literal_string \"Gitshock Finance Testnet\""
														},
														"value": "Gitshock Finance Testnet"
													},
													"src": "15930:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "15930:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 646,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "15974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "744754",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15984:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_9468aeeda7bf88684a5be6a0a499a796cec66968062bfa6bdc9dbc2b2abf1201",
															"typeString": "literal_string \"tGT\""
														},
														"value": "tGT"
													},
													"src": "15974:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "15974:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 650,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "15999:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16011:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "15999:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "15999:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 654,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "16023:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3530303030303030653138",
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16038:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
															"typeString": "int_const 50000000000000000000000000"
														},
														"value": "50000000e18"
													},
													"src": "16023:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "16023:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 658,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "16059:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 660,
														"indexExpression": {
															"argumentTypes": null,
															"id": 659,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "16069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16059:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 661,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "16080:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16059:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "16059:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16125:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16117:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16117:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "16129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 669,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "16138:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "16108:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16108:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "EmitStatement",
												"src": "16103:48:0"
											}
										]
									},
									"documentation": "@notice Construct a new GTFX Testnet token\n@param account The initial account to grant all the tokens",
									"id": 673,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "15896:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15895:17:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15920:0:0"
									},
									"scope": 1692,
									"src": "15884:274:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16272:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 678,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "16289:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 677,
												"id": 680,
												"nodeType": "Return",
												"src": "16282:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16237:2:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16263:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16262:9:0"
									},
									"scope": 1692,
									"src": "16220:83:0",
									"stateMutability": "view",
									"superFunction": 360,
									"visibility": "external"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "16414:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 687,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "16431:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 686,
												"id": 688,
												"nodeType": "Return",
												"src": "16424:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16381:2:0"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "16407:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16407:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16406:7:0"
									},
									"scope": 1692,
									"src": "16364:83:0",
									"stateMutability": "view",
									"superFunction": 345,
									"visibility": "external"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "16562:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 695,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 570,
													"src": "16579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 694,
												"id": 696,
												"nodeType": "Return",
												"src": "16572:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16521:2:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "16547:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 692,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16546:15:0"
									},
									"scope": 1692,
									"src": "16506:87:0",
									"stateMutability": "view",
									"superFunction": 350,
									"visibility": "external"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "16704:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 703,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 572,
													"src": "16721:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "16714:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16663:2:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "16689:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16688:15:0"
									},
									"scope": 1692,
									"src": "16650:83:0",
									"stateMutability": "view",
									"superFunction": 355,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "16847:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 711,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 566,
													"src": "16864:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 712,
												"nodeType": "Return",
												"src": "16857:19:0"
											}
										]
									},
									"documentation": "@dev Returns the total supply.",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16812:2:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "16838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16837:9:0"
									},
									"scope": 1692,
									"src": "16792:91:0",
									"stateMutability": "view",
									"superFunction": 340,
									"visibility": "external"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "17147:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 721,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "17164:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 723,
													"indexExpression": {
														"argumentTypes": null,
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "17174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17164:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 724,
												"nodeType": "Return",
												"src": "17157:25:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "17098:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17097:17:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "17138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17137:9:0"
									},
									"scope": 1692,
									"src": "17079:110:0",
									"stateMutability": "view",
									"superFunction": 367,
									"visibility": "external"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "17551:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 740,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "17571:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17571:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 742,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "17585:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "17561:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17561:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "17561:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17620:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 738,
												"id": 747,
												"nodeType": "Return",
												"src": "17613:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param recipient The address of the destination account\n@param amount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 733,
											"modifierName": {
												"argumentTypes": null,
												"id": 732,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "17510:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17510:9:0"
										},
										{
											"arguments": null,
											"id": 735,
											"modifierName": {
												"argumentTypes": null,
												"id": 734,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "17520:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17520:15:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17466:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17485:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17465:35:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17545:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17545:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17544:6:0"
									},
									"scope": 1692,
									"src": "17448:183:0",
									"stateMutability": "nonpayable",
									"superFunction": 376,
									"visibility": "external"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "18008:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "18025:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "18037:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18025:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"argumentTypes": null,
														"id": 761,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "18044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18025:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "18018:34:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param owner The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "17944:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "17959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17943:32:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "17999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17998:9:0"
									},
									"scope": 1692,
									"src": "17925:134:0",
									"stateMutability": "view",
									"superFunction": 385,
									"visibility": "external"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "18531:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 779,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "18550:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18550:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 781,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "18564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "18573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "18541:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18541:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "18541:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18597:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 777,
												"id": 786,
												"nodeType": "Return",
												"src": "18590:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n@param spender The address of the account which may transfer tokens\n@param amount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 772,
											"modifierName": {
												"argumentTypes": null,
												"id": 771,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "18490:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18490:9:0"
										},
										{
											"arguments": null,
											"id": 774,
											"modifierName": {
												"argumentTypes": null,
												"id": 773,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "18500:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18500:15:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18447:33:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18524:6:0"
									},
									"scope": 1692,
									"src": "18431:177:0",
									"stateMutability": "nonpayable",
									"superFunction": 394,
									"visibility": "external"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "19013:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 804,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "19032:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19032:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 806,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "19046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "19055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 803,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "19023:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19023:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "19023:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 814,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "19120:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19120:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "19134:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "19150:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GTFX_$1692",
																		"typeString": "contract GTFX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GTFX_$1692",
																		"typeString": "contract GTFX"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19142:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19142:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 820,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "19157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 811,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "19095:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 810,
																"name": "ApproveAndCallFallBack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "19072:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ApproveAndCallFallBack_$481_$",
																	"typeString": "type(contract ApproveAndCallFallBack)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19072:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ApproveAndCallFallBack_$481",
																"typeString": "contract ApproveAndCallFallBack"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "receiveApproval",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "19072:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,address,bytes memory) external"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19072:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "19072:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19179:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 802,
												"id": 824,
												"nodeType": "Return",
												"src": "19172:11:0"
											}
										]
									},
									"documentation": "@notice Approve the spender to transferFrom(...) with the amount.\n@dev receiveApproval(...) is executed.\n@param amount The number of tokens that are approved\n@param data The data to pass to receiveApproval(...)\n@return true",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 797,
											"modifierName": {
												"argumentTypes": null,
												"id": 796,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "18972:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18972:9:0"
										},
										{
											"arguments": null,
											"id": 799,
											"modifierName": {
												"argumentTypes": null,
												"id": 798,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "18982:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18982:15:0"
										}
									],
									"name": "approveAndCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18946:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18912:52:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19007:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19006:6:0"
									},
									"scope": 1692,
									"src": "18889:301:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "19620:346:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 842,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "19640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "19648:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 844,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "19659:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "19630:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19630:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "19630:36:0"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "19676:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 847,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19676:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 849,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "19694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19694:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19676:30:0"
											},
											{
												"assignments": [
													853
												],
												"declarations": [
													{
														"constant": false,
														"id": 853,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "19716:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19716:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 854,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "19743:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 856,
														"indexExpression": {
															"argumentTypes": null,
															"id": 855,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "19755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19743:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 858,
													"indexExpression": {
														"argumentTypes": null,
														"id": 857,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "19763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19743:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19716:55:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 860,
														"name": "spenderAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "19785:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "19813:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19814:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19805:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19785:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 877,
												"nodeType": "IfStatement",
												"src": "19781:158:0",
												"trueBody": {
													"id": 876,
													"nodeType": "Block",
													"src": "19818:121:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "19841:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "19849:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 871,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "19879:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19887:39:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1",
																					"typeString": "literal_string \"The transfer amount exceeds allowance\""
																				},
																				"value": "The transfer amount exceeds allowance"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1",
																					"typeString": "literal_string \"The transfer amount exceeds allowance\""
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 869,
																				"name": "spenderAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "19858:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 87,
																			"src": "19858:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19858:69:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 866,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "19832:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19832:96:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 875,
															"nodeType": "ExpressionStatement",
															"src": "19832:96:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19955:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 879,
												"nodeType": "Return",
												"src": "19948:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param sender The address of the source account\n@param recipient The address of the destination account\n@param amount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 835,
											"modifierName": {
												"argumentTypes": null,
												"id": 834,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "19579:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19579:9:0"
										},
										{
											"arguments": null,
											"id": 837,
											"modifierName": {
												"argumentTypes": null,
												"id": 836,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "19589:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19589:15:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19519:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19535:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19518:51:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19613:6:0"
									},
									"scope": 1692,
									"src": "19497:469:0",
									"stateMutability": "nonpayable",
									"superFunction": 405,
									"visibility": "external"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "20529:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "20548:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20548:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 897,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "20562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 905,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "20610:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20622:35:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77",
																		"typeString": "literal_string \"The increased allowance overflows\""
																	},
																	"value": "The increased allowance overflows"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77",
																		"typeString": "literal_string \"The increased allowance overflows\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 898,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "20571:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 901,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 899,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "20583:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20583:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20571:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 903,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 902,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "20597:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20571:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "20571:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20571:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "20539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20539:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "20539:120:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20676:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 893,
												"id": 911,
												"nodeType": "Return",
												"src": "20669:11:0"
											}
										]
									},
									"documentation": "@notice Atomically increases the allowance granted to `spender` by the caller\n@dev This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n@param spender The address of the account which may transfer tokens\n@param addedValue The additional number of tokens to allow which may be spent\n@return Whether or not the approval succeeded",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 888,
											"modifierName": {
												"argumentTypes": null,
												"id": 887,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "20488:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20488:9:0"
										},
										{
											"arguments": null,
											"id": 890,
											"modifierName": {
												"argumentTypes": null,
												"id": 889,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "20498:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20498:15:0"
										}
									],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20444:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20461:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20443:37:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20523:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20522:6:0"
									},
									"scope": 1692,
									"src": "20417:270:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "21263:164:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 927,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "21282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21282:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 929,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "21296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 937,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "21344:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21361:36:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b",
																		"typeString": "literal_string \"The decreased allowance below zero\""
																	},
																	"value": "The decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b",
																		"typeString": "literal_string \"The decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 930,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "21305:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 933,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 931,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "21317:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21317:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21305:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 935,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 934,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "21331:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21305:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 87,
																"src": "21305:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21305:93:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "21273:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21273:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "21273:126:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21416:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 925,
												"id": 943,
												"nodeType": "Return",
												"src": "21409:11:0"
											}
										]
									},
									"documentation": "@notice Atomically increases the allowance granted to `spender` by the caller\n@dev This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n@param spender The address of the account which may transfer tokens\n@param subtractedValue The subtractional number of tokens to allow which may be spent\n@return Whether or not the approval succeeded",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 920,
											"modifierName": {
												"argumentTypes": null,
												"id": 919,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "21222:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21222:9:0"
										},
										{
											"arguments": null,
											"id": 922,
											"modifierName": {
												"argumentTypes": null,
												"id": 921,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "21232:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21232:15:0"
										}
									],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21190:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21172:42:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21256:6:0"
									},
									"scope": 1692,
									"src": "21146:281:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "21759:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 957,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "21775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21775:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 959,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "21789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "21769:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21769:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "21769:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21813:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 955,
												"id": 963,
												"nodeType": "Return",
												"src": "21806:11:0"
											}
										]
									},
									"documentation": "@notice Destroy the amount of tokens from the sender, reducing the total supply.\n@dev The amount must be greater than balance, total supply.\n@param amount The number of tokens that are burnt\n@return true",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 950,
											"modifierName": {
												"argumentTypes": null,
												"id": 949,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "21718:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21718:9:0"
										},
										{
											"arguments": null,
											"id": 952,
											"modifierName": {
												"argumentTypes": null,
												"id": 951,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "21728:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21728:15:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "21695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21694:16:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "21753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21752:6:0"
									},
									"scope": 1692,
									"src": "21681:143:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "22036:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 975,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "22063:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22063:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 977,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "22077:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 974,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "22053:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22053:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 973,
												"id": 979,
												"nodeType": "Return",
												"src": "22046:41:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 970,
											"modifierName": {
												"argumentTypes": null,
												"id": 969,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "22010:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22010:9:0"
										},
										{
											"arguments": null,
											"id": 972,
											"modifierName": {
												"argumentTypes": null,
												"id": 971,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "22020:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22020:15:0"
										}
									],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "21984:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21983:19:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22036:0:0"
									},
									"scope": 1692,
									"src": "21966:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "22654:617:0",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22664:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1005,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "22711:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1008,
																					"name": "_name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 572,
																					"src": "22744:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22738:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22738:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 1006,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "22728:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22728:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1011,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "22753:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22753:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1014,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "22775:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GTFX_$1692",
																				"typeString": "contract GTFX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GTFX_$1692",
																				"typeString": "contract GTFX"
																			}
																		],
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22767:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1003,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22700:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22700:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1002,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22690:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22690:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22664:118:0"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22792:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1019,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "22834:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "22855:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "22866:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "22873:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1022,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22823:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22823:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22823:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1021,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22813:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22813:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22792:89:0"
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22891:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1031,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22935:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1037,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "22947:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1038,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "22964:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1034,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22918:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22918:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22918:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1033,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22908:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22908:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22891:85:0"
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22986:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1042,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22986:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1045,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "23016:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1046,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "23024:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "23027:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "23030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1044,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "23006:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23006:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22986:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1052,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "23050:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23071:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23063:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23050:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23075:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23042:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "23042:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1061,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "23113:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "23122:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1062,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "23122:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1064,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1063,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "23129:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23122:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23113:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964206e6f6e6365",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23143:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															},
															"value": "Invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23105:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "23105:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1071,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "23177:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1072,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "23184:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23177:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546865207369676e61747572652065787069726564",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23192:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1d9a76268658ade1712ae55619bc1c81b967bd0e64856fe24b40acc468a5cb5",
																"typeString": "literal_string \"The signature expired\""
															},
															"value": "The signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1d9a76268658ade1712ae55619bc1c81b967bd0e64856fe24b40acc468a5cb5",
																"typeString": "literal_string \"The signature expired\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23169:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "23169:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1078,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "23243:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "23254:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1077,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "23233:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23233:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 999,
												"id": 1081,
												"nodeType": "Return",
												"src": "23226:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 996,
											"modifierName": {
												"argumentTypes": null,
												"id": 995,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "22628:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22628:9:0"
										},
										{
											"arguments": null,
											"id": 998,
											"modifierName": {
												"argumentTypes": null,
												"id": 997,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "22638:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22638:15:0"
										}
									],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22540:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22574:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22590:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 988,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22590:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22599:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22610:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22539:81:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22654:0:0"
									},
									"scope": 1692,
									"src": "22517:754:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "23538:154:0",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "23548:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1090,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "23548:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1092,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "23570:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1094,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1093,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "23585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23570:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23548:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1096,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "23610:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23625:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23610:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23684:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "23610:75:0",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1100,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "23636:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																			}
																		},
																		"id": 1102,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1101,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "23648:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23636:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																			"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																		}
																	},
																	"id": 1106,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1103,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "23657:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23672:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23657:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23636:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																		"typeString": "struct GTFX.Checkpoint storage ref"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 580,
																"src": "23636:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1099,
															"name": "ceil96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "23629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																"typeString": "function (uint256) pure returns (uint96)"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23629:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1111,
												"nodeType": "Return",
												"src": "23603:82:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "23490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23489:17:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "23530:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1087,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23529:8:0"
									},
									"scope": 1692,
									"src": "23465:227:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "24204:1102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1123,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "24222:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1124,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "24236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "24236:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24222:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f742064657465726d696e656420796574",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24250:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94bcc40f99be07541a5d79a2a91efe41b164b4c8c044ddc355f1854a6163b3ee",
																"typeString": "literal_string \"Not determined yet\""
															},
															"value": "Not determined yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94bcc40f99be07541a5d79a2a91efe41b164b4c8c044ddc355f1854a6163b3ee",
																"typeString": "literal_string \"Not determined yet\""
															}
														],
														"id": 1122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "24214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24214:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "24214:57:0"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24282:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1130,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24282:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1132,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "24304:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1134,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1133,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "24319:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24304:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24282:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1136,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "24341:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24357:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24341:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "24337:56:0",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "24360:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24381:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1140,
															"nodeType": "Return",
															"src": "24374:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1143,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "24450:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																	}
																},
																"id": 1145,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1144,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24450:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																	"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																}
															},
															"id": 1149,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1146,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "24471:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24486:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24471:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24450:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																"typeString": "struct GTFX.Checkpoint storage ref"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "24450:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "24502:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24450:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "24446:153:0",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "24515:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1154,
																					"name": "checkpoints",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "24543:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																						"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																					}
																				},
																				"id": 1156,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1155,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "24555:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "24543:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																					"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1157,
																					"name": "nCheckpoints",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "24564:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24579:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24564:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24543:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																				"typeString": "struct GTFX.Checkpoint storage ref"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "votes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "24543:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1153,
																	"name": "ceil96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "24536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																		"typeString": "function (uint256) pure returns (uint96)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24536:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1121,
															"id": 1163,
															"nodeType": "Return",
															"src": "24529:59:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1166,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "24657:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																	}
																},
																"id": 1168,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1167,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24669:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24657:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																	"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																}
															},
															"id": 1170,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24678:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24657:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																"typeString": "struct GTFX.Checkpoint storage ref"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "24657:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1172,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "24693:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24657:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "24653:86:0",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "24706:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24727:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1175,
															"nodeType": "Return",
															"src": "24720:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24749:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1178,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24749:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24764:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24749:16:0"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24775:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1182,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24775:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1184,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "24790:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24805:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "24790:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24775:31:0"
											},
											{
												"body": {
													"id": 1238,
													"nodeType": "Block",
													"src": "24838:404:0",
													"statements": [
														{
															"assignments": [
																1192
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1192,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "24852:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1191,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "24852:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1201,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "24868:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1194,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "24877:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1195,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "24885:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "24877:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "24876:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24894:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "24876:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "24868:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24852:43:0"
														},
														{
															"assignments": [
																1203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1203,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "24936:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																		"typeString": "struct GTFX.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1202,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 581,
																		"src": "24936:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_storage_ptr",
																			"typeString": "struct GTFX.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1209,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1204,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "24959:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1206,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1205,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "24971:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24959:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1208,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "24980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24959:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24936:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1210,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "25005:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																			"typeString": "struct GTFX.Checkpoint memory"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "25005:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1212,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "25021:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25005:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1220,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "25100:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																				"typeString": "struct GTFX.Checkpoint memory"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 578,
																		"src": "25100:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1222,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "25115:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25100:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1235,
																	"nodeType": "Block",
																	"src": "25181:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1229,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "25199:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1230,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "25207:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25216:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "25207:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "25199:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1234,
																			"nodeType": "ExpressionStatement",
																			"src": "25199:18:0"
																		}
																	]
																},
																"id": 1236,
																"nodeType": "IfStatement",
																"src": "25096:136:0",
																"trueBody": {
																	"id": 1228,
																	"nodeType": "Block",
																	"src": "25128:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1224,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "25146:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1225,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "25154:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "25146:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1227,
																			"nodeType": "ExpressionStatement",
																			"src": "25146:14:0"
																		}
																	]
																}
															},
															"id": 1237,
															"nodeType": "IfStatement",
															"src": "25001:231:0",
															"trueBody": {
																"id": 1219,
																"nodeType": "Block",
																"src": "25034:56:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1215,
																						"name": "cp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1203,
																						"src": "25066:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																							"typeString": "struct GTFX.Checkpoint memory"
																						}
																					},
																					"id": 1216,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "votes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 580,
																					"src": "25066:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1214,
																				"name": "ceil96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1679,
																				"src": "25059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																					"typeString": "function (uint256) pure returns (uint96)"
																				}
																			},
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25059:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 1121,
																		"id": 1218,
																		"nodeType": "Return",
																		"src": "25052:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1188,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "24823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1189,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "24831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "24823:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "WhileStatement",
												"src": "24816:426:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1241,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "25265:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "25277:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25265:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1245,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "lower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "25286:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25265:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 580,
															"src": "25265:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"name": "ceil96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "25258:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
															"typeString": "function (uint256) pure returns (uint96)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25258:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1248,
												"nodeType": "Return",
												"src": "25251:48:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24154:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24136:38:0"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24196:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1119,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24196:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24195:8:0"
									},
									"scope": 1692,
									"src": "24114:1192:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "25391:481:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1260,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "25409:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25427:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25419:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25419:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25409:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25431:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e",
																"typeString": "literal_string \"Cannot transfer from the zero address\""
															},
															"value": "Cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e",
																"typeString": "literal_string \"Cannot transfer from the zero address\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25401:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "25401:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1269,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "25489:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25510:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25502:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25502:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25489:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25514:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288",
																"typeString": "literal_string \"Cannot transfer to the zero address\""
															},
															"value": "Cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288",
																"typeString": "literal_string \"Cannot transfer to the zero address\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25481:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "25481:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1277,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "25563:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1279,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1278,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "25573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25563:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1284,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "25605:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25613:37:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973",
																	"typeString": "literal_string \"The transfer amount exceeds balance\""
																},
																"value": "The transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973",
																	"typeString": "literal_string \"The transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1280,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "25583:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1282,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1281,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "25593:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25583:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "25583:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25583:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25563:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "25563:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1289,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "25661:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1290,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "25671:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25661:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1296,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "25709:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "5468652062616c616e6365206f766572666c6f7773",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25717:23:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e23656289b2eecf3e78812941d89fa3002f128c9e67944734781eb836c5cdbbc",
																	"typeString": "literal_string \"The balance overflows\""
																},
																"value": "The balance overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_e23656289b2eecf3e78812941d89fa3002f128c9e67944734781eb836c5cdbbc",
																	"typeString": "literal_string \"The balance overflows\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1292,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "25684:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1294,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1293,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "25694:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25684:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "25684:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25684:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25661:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "25661:80:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1302,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "25765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1303,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "25773:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1304,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "25784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "25756:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25756:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "EmitStatement",
												"src": "25751:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1308,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "25817:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1310,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "25827:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25817:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1311,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "25836:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1313,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1312,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "25846:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25836:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "25858:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "25802:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25802:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "25802:63:0"
											}
										]
									},
									"documentation": null,
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25331:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25347:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25330:51:0"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25391:0:0"
									},
									"scope": 1692,
									"src": "25312:560:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "25953:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1328,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "25971:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25988:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25980:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25980:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25971:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25992:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d",
																"typeString": "literal_string \"Cannot approve from the zero address\""
															},
															"value": "Cannot approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d",
																"typeString": "literal_string \"Cannot approve from the zero address\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25963:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "25963:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1337,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "26049:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26068:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26060:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26060:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26049:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26072:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9",
																"typeString": "literal_string \"Cannot approve to the zero address\""
															},
															"value": "Cannot approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9",
																"typeString": "literal_string \"Cannot approve to the zero address\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26041:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "26041:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1345,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "26120:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1348,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1346,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "26132:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26120:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1349,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1347,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "26139:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26120:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "26150:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26120:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "26120:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1354,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "26180:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1355,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "26187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "26196:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1353,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															637
														],
														"referencedDeclaration": 637,
														"src": "26171:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26171:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "26166:37:0"
											}
										]
									},
									"documentation": null,
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25895:48:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25953:0:0"
									},
									"scope": 1692,
									"src": "25878:332:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "26273:347:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1368,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "26291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26310:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26302:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26302:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26291:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26314:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee",
																"typeString": "literal_string \"Cannot burn from the zero address\""
															},
															"value": "Cannot burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee",
																"typeString": "literal_string \"Cannot burn from the zero address\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26283:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "26283:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1376,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "26361:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26361:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1383,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "26405:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "546865206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26413:33:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1436b54442dad08301b59754c3ac41db1c7a4ad42f2d6ba2cd9d1cde8999d74f",
																	"typeString": "literal_string \"The burn amount exceeds balance\""
																},
																"value": "The burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_1436b54442dad08301b59754c3ac41db1c7a4ad42f2d6ba2cd9d1cde8999d74f",
																	"typeString": "literal_string \"The burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1379,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "26382:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1381,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1380,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "26392:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26382:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "26382:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26382:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26361:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "26361:86:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1388,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "26457:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "26489:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1389,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "26472:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "26472:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26472:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26457:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "26457:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26537:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26529:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26529:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "26541:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "26511:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26511:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "EmitStatement",
												"src": "26506:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1404,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "26574:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1406,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "26584:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26574:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26602:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26594:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26594:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "26606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "26559:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26559:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "26559:54:0"
											}
										]
									},
									"documentation": null,
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "26231:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "26248:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26230:33:0"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26273:0:0"
									},
									"scope": 1692,
									"src": "26216:404:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "26692:303:0",
										"statements": [
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "26702:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1421,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26702:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1423,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "26728:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1425,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1424,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "26738:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26728:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26702:46:0"
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "26758:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1429,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "26785:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1431,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1430,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "26795:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26785:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26758:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1433,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "26815:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1435,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1434,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "26825:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26815:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1436,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "26838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26815:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "26815:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1440,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "26879:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1441,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26890:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1442,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "26907:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1439,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "26863:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26863:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "EmitStatement",
												"src": "26858:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1446,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26943:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1447,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "26960:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1448,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "26971:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "26928:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26928:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "26928:60:0"
											}
										]
									},
									"documentation": null,
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "26645:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "26664:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26644:38:0"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26692:0:0"
									},
									"scope": 1692,
									"src": "26626:369:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "27082:813:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "27096:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1462,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "27106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "27096:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1464,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "27116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27125:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27116:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27096:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "27092:797:0",
												"trueBody": {
													"id": 1556,
													"nodeType": "Block",
													"src": "27128:761:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1468,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "27146:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27164:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27156:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27156:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27146:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1511,
															"nodeType": "IfStatement",
															"src": "27142:362:0",
															"trueBody": {
																"id": 1510,
																"nodeType": "Block",
																"src": "27168:336:0",
																"statements": [
																	{
																		"assignments": [
																			1474
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1474,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27186:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1473,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "27186:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1478,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1475,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "27205:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1477,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1476,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "27220:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27205:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27186:41:0"
																	},
																	{
																		"assignments": [
																			1480
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1480,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27245:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1479,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27245:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1494,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1481,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "27265:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27277:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "27265:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27324:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "27265:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1484,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "27281:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																							}
																						},
																						"id": 1486,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1485,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1454,
																							"src": "27293:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "27281:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																							"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																						}
																					},
																					"id": 1490,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1487,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1474,
																							"src": "27301:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27313:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "27301:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27281:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																						"typeString": "struct GTFX.Checkpoint storage ref"
																					}
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "27281:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27245:80:0"
																	},
																	{
																		"assignments": [
																			1496
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1496,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27343:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1495,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27343:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1502,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1499,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "27377:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "54686520766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 1500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27385:28:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3febcc9d75a89ca64329c84ad05c5c32a433f1ccbf52201013f067d187d2f481",
																						"typeString": "literal_string \"The vote amount underflows\""
																					},
																					"value": "The vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3febcc9d75a89ca64329c84ad05c5c32a433f1ccbf52201013f067d187d2f481",
																						"typeString": "literal_string \"The vote amount underflows\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1497,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "27363:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 87,
																				"src": "27363:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27363:51:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27343:71:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1504,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "27449:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1505,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "27457:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1506,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "27468:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1507,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1496,
																					"src": "27479:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1503,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "27432:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27432:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1509,
																		"nodeType": "ExpressionStatement",
																		"src": "27432:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "27522:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27540:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27532:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27532:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27522:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1555,
															"nodeType": "IfStatement",
															"src": "27518:361:0",
															"trueBody": {
																"id": 1554,
																"nodeType": "Block",
																"src": "27544:335:0",
																"statements": [
																	{
																		"assignments": [
																			1518
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1518,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27562:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1517,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "27562:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1522,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1519,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "27581:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1521,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1520,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "27596:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27581:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27562:41:0"
																	},
																	{
																		"assignments": [
																			1524
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1524,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27621:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1523,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27621:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1538,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1525,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "27641:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27653:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "27641:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27700:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "27641:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1528,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "27657:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																							}
																						},
																						"id": 1530,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1529,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1456,
																							"src": "27669:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "27657:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																							"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																						}
																					},
																					"id": 1534,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1531,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1518,
																							"src": "27677:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27689:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "27677:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27657:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																						"typeString": "struct GTFX.Checkpoint storage ref"
																					}
																				},
																				"id": 1535,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "27657:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27621:80:0"
																	},
																	{
																		"assignments": [
																			1540
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1540,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27719:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1539,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27719:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1546,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1543,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "27753:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "54686520766f746520616d6f756e74206f766572666c6f7773",
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27761:27:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_6281e829f7ec7f2cccd2aea5aead2c19a968d78b08a401d6fbbbcbceebdf1198",
																						"typeString": "literal_string \"The vote amount overflows\""
																					},
																					"value": "The vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_6281e829f7ec7f2cccd2aea5aead2c19a968d78b08a401d6fbbbcbceebdf1198",
																						"typeString": "literal_string \"The vote amount overflows\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1541,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "27739:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "27739:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																				}
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27739:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27719:70:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1548,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1456,
																					"src": "27824:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1549,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "27832:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1550,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "27843:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1551,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1540,
																					"src": "27854:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1547,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "27807:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27807:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1553,
																		"nodeType": "ExpressionStatement",
																		"src": "27807:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27025:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27024:48:0"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27082:0:0"
									},
									"scope": 1692,
									"src": "27001:894:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "28012:489:0",
										"statements": [
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "28020:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1570,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "28020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1573,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "28048:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28048:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "54686520626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28062:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e113c43e880116d52c7f2636a37c913ac2cc14ba7aeb716cc0279d52a01cefb6",
																"typeString": "literal_string \"The block number exceeds 32 bits\""
															},
															"value": "The block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_e113c43e880116d52c7f2636a37c913ac2cc14ba7aeb716cc0279d52a01cefb6",
																"typeString": "literal_string \"The block number exceeds 32 bits\""
															}
														],
														"id": 1572,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "28041:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28041:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28020:77:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1578,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "28110:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28125:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "28110:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1581,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "28130:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1583,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1582,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "28142:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28130:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1587,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1584,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28153:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28168:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28153:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28130:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 578,
															"src": "28130:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1589,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "28184:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "28130:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28110:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "28281:149:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1604,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "28293:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																			}
																		},
																		"id": 1607,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1605,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "28305:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28293:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																			"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																		}
																	},
																	"id": 1608,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1606,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28316:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28293:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																		"typeString": "struct GTFX.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1610,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1571,
																			"src": "28343:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1611,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "28356:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1609,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "28332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$581_storage_ptr_$",
																			"typeString": "type(struct GTFX.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28332:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_memory",
																		"typeString": "struct GTFX.Checkpoint memory"
																	}
																},
																"src": "28293:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "28293:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1615,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "28377:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1617,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1616,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "28392:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28377:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1618,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28405:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28420:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28405:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "28377:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1622,
															"nodeType": "ExpressionStatement",
															"src": "28377:44:0"
														}
													]
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "28106:324:0",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "28197:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1592,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "28209:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																				}
																			},
																			"id": 1597,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1593,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "28221:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28209:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																				"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																			}
																		},
																		"id": 1598,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1594,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "28232:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28247:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28232:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28209:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																			"typeString": "struct GTFX.Checkpoint storage ref"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 580,
																	"src": "28209:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1600,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "28258:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28209:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1602,
															"nodeType": "ExpressionStatement",
															"src": "28209:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1626,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "28464:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1627,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "28475:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1628,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "28485:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "28443:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28443:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "EmitStatement",
												"src": "28438:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27927:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27946:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1562,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "27946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27967:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27985:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27926:76:0"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28012:0:0"
									},
									"scope": 1692,
									"src": "27901:600:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "28597:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1642,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "28615:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28619:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28622:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28619:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "28615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1647,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "28626:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "28607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28607:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "28607:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1651,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "28663:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28656:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28656:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1653,
												"nodeType": "Return",
												"src": "28649:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28538:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28526:39:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28589:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1638,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28588:8:0"
									},
									"scope": 1692,
									"src": "28511:161:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "28736:100:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1662,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "28750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
															"typeString": "int_const 79228162514264337593543950336"
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28755:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3936",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28758:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_96_by_1",
																"typeString": "int_const 96"
															},
															"value": "96"
														},
														"src": "28755:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
															"typeString": "int_const 79228162514264337593543950336"
														}
													},
													"src": "28750:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1673,
												"nodeType": "IfStatement",
												"src": "28746:58:0",
												"trueBody": {
													"id": 1672,
													"nodeType": "Block",
													"src": "28762:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "28790:2:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28791:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28783:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": "uint96"
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28783:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1661,
															"id": 1671,
															"nodeType": "Return",
															"src": "28776:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1675,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "28827:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28820:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28820:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1677,
												"nodeType": "Return",
												"src": "28813:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "28694:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28693:11:0"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "28728:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1659,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "28728:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28727:8:0"
									},
									"scope": 1692,
									"src": "28678:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "28896:98:0",
										"statements": [
											{
												"assignments": [
													1685
												],
												"declarations": [
													{
														"constant": false,
														"id": 1685,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "28906:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "28906:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 1685,
															"isOffset": false,
															"isSlot": false,
															"src": "28942:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 1687,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "28931:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1688,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1685,
													"src": "28980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1689,
												"nodeType": "Return",
												"src": "28973:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28861:2:0"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "28887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28886:9:0"
									},
									"scope": 1692,
									"src": "28842:152:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "13393:15603:0"
						}
					],
					"src": "32:28965:0"
				},
				"id": 0
			}
		}
	}
}