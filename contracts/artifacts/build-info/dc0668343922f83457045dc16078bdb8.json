{
	"id": "dc0668343922f83457045dc16078bdb8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/4_SmartGTFX.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.16;\n\n// ----------------------------------------------------------------------------\n// 'GTFX' 'Gitshock Finance' BEP20 token contract\n//\n// Symbol      : GTFX\n// Name        : Gitshock Finance\n// Total supply: 50,000,000.000000000000000000\n// Decimals    : 18\n// Website     : https://gitshock.com\n// Security    : aven-cybersecurity@gitshock.com\n// Blockchain  : GTX20-N\n// ----------------------------------------------------------------------------\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    return add(a, b, \"SafeMath: addition overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, errorMessage);\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ninterface BEP20Interface {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Tokenlock is Ownable {\n    /// @notice Indicates if token is locked\n    uint8 isLocked = 0;\n\n    event Freezed();\n    event UnFreezed();\n\n    modifier validLock {\n        require(isLocked == 0, \"Token is locked\");\n        _;\n    }\n    \n    function freeze() public onlyOwner {\n        isLocked = 1;\n        \n        emit Freezed();\n    }\n\n    function unfreeze() public onlyOwner {\n        isLocked = 0;\n        \n        emit UnFreezed();\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n//\n// Borrowed from MiniMeToken\n// ----------------------------------------------------------------------------\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n}\n\n// ----------------------------------------------------------------------------\n// Limit users in blacklist\n// ----------------------------------------------------------------------------\ncontract UserLock is Ownable {\n    mapping(address => bool) blacklist;\n        \n    event LockUser(address indexed who);\n    event UnlockUser(address indexed who);\n\n    modifier permissionCheck {\n        require(!blacklist[msg.sender], \"Blocked user\");\n        _;\n    }\n    \n    function lockUser(address who) public onlyOwner {\n        blacklist[who] = true;\n        \n        emit LockUser(who);\n    }\n\n    function unlockUser(address who) public onlyOwner {\n        blacklist[who] = false;\n        \n        emit UnlockUser(who);\n    }\n}\n\ncontract GTFX is BEP20Interface, Tokenlock, UserLock {\n    using SafeMath for uint256;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint256) private _balances;\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    /// @notice Total number of tokens in circulation\n    uint256 private _totalSupply;\n\n    /// @notice BEP-20 token decimals for this token\n    uint8 private _decimals;\n\n    /// @notice BEP-20 token symbol for this token\n    string private _symbol;\n\n    /// @notice BEP-20 token name for this token\n    string private _name;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint256) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /// @notice The standard BEP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard BEP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new GTFX Testnet token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        _name = \"Gitshock Finance Testnet\";\n        _symbol = \"tGTFX\";\n        _decimals = 18;\n        _totalSupply = 50000000e18;\n        _balances[account] = _totalSupply;\n\n        emit Transfer(address(0), account, _totalSupply);\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n    */\n    function getOwner() external view returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token decimals.\n    */\n    function decimals() external view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n    */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the token name.\n    */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the total supply.\n    */\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param recipient The address of the destination account\n     * @param amount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param owner The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address owner, address spender) external view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     * @param spender The address of the account which may transfer tokens\n     * @param amount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Approve the spender to transferFrom(...) with the amount.\n     * @dev receiveApproval(...) is executed.\n     * @param amount The number of tokens that are approved\n     * @param data The data to pass to receiveApproval(...)\n     * @return true\n     */\n    function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param sender The address of the source account\n     * @param recipient The address of the destination account\n     * @param amount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {\n        _transfer(sender, recipient, amount);\n        address spender = _msgSender();\n        uint256 spenderAllowance = _allowances[sender][spender];\n        if (spenderAllowance != uint256(-1)) {\n            _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\"));\n        }\n        return true;\n    }\n\n    /**\n     * @notice Atomically increases the allowance granted to `spender` by the caller\n     * @dev This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     * @param spender The address of the account which may transfer tokens\n     * @param addedValue The additional number of tokens to allow which may be spent\n     * @return Whether or not the approval succeeded\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\"));\n        return true;\n    }\n\n    /**\n     * @notice Atomically increases the allowance granted to `spender` by the caller\n     * @dev This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     * @param spender The address of the account which may transfer tokens\n     * @param subtractedValue The subtractional number of tokens to allow which may be spent\n     * @return Whether or not the approval succeeded\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @notice Destroy the amount of tokens from the sender, reducing the total supply.\n     * @dev The amount must be greater than balance, total supply.\n     * @param amount The number of tokens that are burnt\n     * @return true\n     */\n    function burn(uint256 amount) public validLock permissionCheck returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public validLock permissionCheck {\n        return _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Invalid signature\");\n        require(nonce == nonces[signatory]++, \"Invalid nonce\");\n        require(now <= expiry, \"The signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Not determined yet\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return ceil96(checkpoints[account][nCheckpoints - 1].votes);\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return ceil96(cp.votes);\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return ceil96(checkpoints[account][lower].votes);\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"Cannot transfer from the zero address\");\n        require(recipient != address(0), \"Cannot transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"The transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount, \"The balance overflows\");\n        emit Transfer(sender, recipient, amount);\n\n        _moveDelegates(delegates[sender], delegates[recipient], amount);\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"Cannot approve from the zero address\");\n        require(spender != address(0), \"Cannot approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"Cannot burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"The burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n\n        _moveDelegates(delegates[account], address(0), amount);\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint256 delegatorBalance = _balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount, \"The vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount, \"The vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"The block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n    \n    function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function ceil96(uint256 n) internal pure returns (uint96) {\n        if (n >= 2**96) {\n            return uint96(-1);\n        }\n        return uint96(n);\n    }\n\n    function getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/4_SmartGTFX.sol": {
				"ApproveAndCallFallBack": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "receiveApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"ApproveAndCallFallBack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"BEP20Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"BEP20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"GTFX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Freezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "LockUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "UnFreezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "UnlockUser",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "lockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "unlockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender`",
								"params": {
									"amount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "receiveApproval(...) is executed.",
								"params": {
									"amount": "The number of tokens that are approved",
									"data": "The data to pass to receiveApproval(...)"
								},
								"return": "true"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"burn(uint256)": {
								"details": "The amount must be greater than balance, total supply.",
								"params": {
									"amount": "The number of tokens that are burnt"
								},
								"return": "true"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.",
								"params": {
									"spender": "The address of the account which may transfer tokens",
									"subtractedValue": "The subtractional number of tokens to allow which may be spent"
								},
								"return": "Whether or not the approval succeeded"
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"increaseAllowance(address,uint256)": {
								"details": "This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.",
								"params": {
									"addedValue": "The additional number of tokens to allow which may be spent",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the total supply."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to transfer",
									"recipient": "The address of the destination account"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The number of tokens to transfer",
									"recipient": "The address of the destination account",
									"sender": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":13447:29052  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":11956:11957  0 */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":11939:11957  uint8 isLocked = 0 */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":15938:16214  constructor(address account) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/4_SmartGTFX.sol\":15938:16214  constructor(address account) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15938:16214  constructor(address account) public {... */\n  mload\n    /* \"contracts/4_SmartGTFX.sol\":7541:7558  address msgSender */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7561:7573  _msgSender() */\n  tag_8\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7561:7571  _msgSender */\n  tag_9\n    /* \"contracts/4_SmartGTFX.sol\":7561:7573  _msgSender() */\n  and\n  jump\t// in\ntag_8:\n    /* \"contracts/4_SmartGTFX.sol\":7579:7585  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7579:7597  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7579:7597  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7579:7585  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":15984:16018  _name = \"Gitshock Finance Testnet\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x18\n  dup1\n  dup3\n  mstore\n  0x47697473686f636b2046696e616e636520546573746e65740000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_11\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15984:15989  _name */\n  0x07\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":15984:16018  _name = \"Gitshock Finance Testnet\" */\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":16028:16045  _symbol = \"tGTFX\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x05\n  dup1\n  dup3\n  mstore\n  shl(0xdb, 0x0e88ea88cb)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_13\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":16028:16035  _symbol */\n  0x06\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":16028:16045  _symbol = \"tGTFX\" */\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":16055:16064  _decimals */\n  0x05\n    /* \"contracts/4_SmartGTFX.sol\":16055:16069  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/4_SmartGTFX.sol\":16067:16069  18 */\n  0x12\n    /* \"contracts/4_SmartGTFX.sol\":16055:16069  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":16094:16105  50000000e18 */\n  0x295be96e64066972000000\n    /* \"contracts/4_SmartGTFX.sol\":16079:16091  _totalSupply */\n  0x04\n    /* \"contracts/4_SmartGTFX.sol\":16079:16105  _totalSupply = 50000000e18 */\n  dup2\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":16115:16133  _balances[account] */\n  dup3\n  and\n    /* \"contracts/4_SmartGTFX.sol\":16055:16064  _decimals */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":16115:16133  _balances[account] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/4_SmartGTFX.sol\":16115:16124  _balances */\n  0x02\n    /* \"contracts/4_SmartGTFX.sol\":16115:16133  _balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/4_SmartGTFX.sol\":16115:16148  _balances[account] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":16164:16207  Transfer(address(0), account, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/4_SmartGTFX.sol\":16115:16133  _balances[account] */\n  swap3\n  swap4\n    /* \"contracts/4_SmartGTFX.sol\":16055:16064  _decimals */\n  swap2\n  swap3\n    /* \"contracts/4_SmartGTFX.sol\":16164:16207  Transfer(address(0), account, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":15938:16214  constructor(address account) public {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":13447:29052  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n  jump(tag_14)\n    /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\ntag_9:\n    /* \"contracts/4_SmartGTFX.sol\":6544:6554  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\ntag_15:\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":13447:29052  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\ntag_12:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\n  tag_15\n  swap2\n  swap1\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_23)\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":13447:29052  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":13447:29052  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x782d6fe1\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xbd1870a3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xbd1870a3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd7972580\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x782d6fe1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x42966c68\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x6a28f000\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x6a28f000\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x62a5af3b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x20606b70\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":16706:16789  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_43:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_43)\n    tag_45:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16706:16789  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_46:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":18487:18664  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_4:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18487:18664  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":16848:16939  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":14704:14826  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_50\n      tag_53\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":19553:20022  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19553:20022  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_56\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16420:16503  function decimals() external view returns (uint8) {... */\n    tag_8:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":20473:20743  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":20473:20743  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21737:21880  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21737:21880  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14168:14213  mapping (address => address) public delegates */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14168:14213  mapping (address => address) public delegates */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":22022:22150  function delegate(address delegatee) public validLock permissionCheck {... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22022:22150  function delegate(address delegatee) public validLock permissionCheck {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":12107:12204  function freeze() public onlyOwner {... */\n    tag_13:\n      tag_68\n      tag_72\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":12210:12311  function unfreeze() public onlyOwner {... */\n    tag_14:\n      tag_68\n      tag_74\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14585:14634  mapping (address => uint32) public numCheckpoints */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14585:14634  mapping (address => uint32) public numCheckpoints */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n    tag_75:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":17135:17245  function balanceOf(address account) external view returns (uint256) {... */\n    tag_16:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":17135:17245  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_80\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n    tag_17:\n      tag_68\n      tag_82\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":24170:25362  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24170:25362  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_85\n      jump\t// in\n    tag_83:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":15112:15154  mapping (address => uint256) public nonces */\n    tag_19:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":15112:15154  mapping (address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_88\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16276:16359  function getOwner() external view returns (address) {... */\n    tag_20:\n      tag_65\n      tag_90\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n    tag_21:\n      tag_65\n      tag_92\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16562:16649  function symbol() external view returns (string memory) {... */\n    tag_22:\n      tag_41\n      tag_94\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21202:21483  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n    tag_23:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_100:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":21202:21483  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_101\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17504:17687  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_24:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17504:17687  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_104\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":23521:23748  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_25:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":23521:23748  function getCurrentVotes(address account) external view returns (uint96) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n    tag_26:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_110\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":22573:23327  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n    tag_27:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_112:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":22573:23327  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x60\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xa0\n      add\n      calldataload\n      tag_113\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n    tag_28:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup3\n      calldataload\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_117:\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_118:\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap3\n      swap6\n      pop\n      tag_119\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n    tag_29:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_122\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17981:18115  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_30:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17981:18115  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_125\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14917:15034  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_31:\n      tag_50\n      tag_127\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":14449:14519  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_32:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":14449:14519  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_130\n      jump\t// in\n    tag_128:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_33:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_133\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":16706:16789  function name() external view returns (string memory) {... */\n    tag_42:\n        /* \"contracts/4_SmartGTFX.sol\":16777:16782  _name */\n      0x07\n        /* \"contracts/4_SmartGTFX.sol\":16770:16782  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":16745:16758  string memory */\n      0x60\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":16770:16782  return _name */\n      swap1\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":16777:16782  _name */\n      swap1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":16770:16782  return _name */\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":16777:16782  _name */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":16770:16782  return _name */\n      dup3\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16706:16789  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":18487:18664  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_49:\n        /* \"contracts/4_SmartGTFX.sol\":18581:18585  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_139\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_141\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/4_SmartGTFX.sol\":18597:18636  _approve(_msgSender(), spender, amount) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":18606:18618  _msgSender() */\n      tag_144\n        /* \"contracts/4_SmartGTFX.sol\":18606:18616  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":18606:18618  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/4_SmartGTFX.sol\":18620:18627  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":18629:18635  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":18597:18605  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":18597:18636  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":18653:18657  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13168:13169  _ */\n    tag_142:\n        /* \"contracts/4_SmartGTFX.sol\":18487:18664  function approve(address spender, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16848:16939  function totalSupply() external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/4_SmartGTFX.sol\":16920:16932  _totalSupply */\n      sload(0x04)\n        /* \"contracts/4_SmartGTFX.sol\":16848:16939  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14704:14826  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_53:\n        /* \"contracts/4_SmartGTFX.sol\":14746:14826  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      0x43\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      dup3\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":14704:14826  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":19553:20022  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_56:\n        /* \"contracts/4_SmartGTFX.sol\":19670:19674  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_149\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_151\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/4_SmartGTFX.sol\":19686:19722  _transfer(sender, recipient, amount) */\n      tag_153\n        /* \"contracts/4_SmartGTFX.sol\":19696:19702  sender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19704:19713  recipient */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19715:19721  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":19686:19695  _transfer */\n      tag_154\n        /* \"contracts/4_SmartGTFX.sol\":19686:19722  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/4_SmartGTFX.sol\":19732:19747  address spender */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":19750:19762  _msgSender() */\n      tag_155\n        /* \"contracts/4_SmartGTFX.sol\":19750:19760  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19750:19762  _msgSender() */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19799:19818  _allowances[sender] */\n      dup1\n      dup8\n      and\n        /* \"contracts/4_SmartGTFX.sol\":19772:19796  uint256 spenderAllowance */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":19799:19818  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":19799:19810  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":19799:19818  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":19799:19827  _allowances[sender][spender] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":19732:19762  address spender = _msgSender() */\n      swap1\n      swap2\n      pop\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":19841:19872  spenderAllowance != uint256(-1) */\n      dup2\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":19837:19995  if (spenderAllowance != uint256(-1)) {... */\n      tag_157\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":19888:19984  _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\")) */\n      tag_157\n        /* \"contracts/4_SmartGTFX.sol\":19897:19903  sender */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":19905:19912  spender */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":19914:19983  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":19935:19941  amount */\n      dup8\n        /* \"contracts/4_SmartGTFX.sol\":19914:19983  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":19914:19930  spenderAllowance */\n      dup7\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":19914:19983  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":19914:19934  spenderAllowance.sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":19914:19983  spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_158:\n        /* \"contracts/4_SmartGTFX.sol\":19888:19896  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":19888:19984  _approve(sender, spender, spenderAllowance.sub(amount, \"The transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":20011:20015  true */\n      0x01\n      swap6\n        /* \"contracts/4_SmartGTFX.sol\":19553:20022  function transferFrom(address sender, address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16420:16503  function decimals() external view returns (uint8) {... */\n    tag_58:\n        /* \"contracts/4_SmartGTFX.sol\":16487:16496  _decimals */\n      and(0xff, sload(0x05))\n        /* \"contracts/4_SmartGTFX.sol\":16420:16503  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":20473:20743  function increaseAllowance(address spender, uint256 addedValue) public validLock permissionCheck returns (bool) {... */\n    tag_61:\n        /* \"contracts/4_SmartGTFX.sol\":20579:20583  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_162\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_164\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/4_SmartGTFX.sol\":20595:20715  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\")) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":20604:20616  _msgSender() */\n      tag_167\n        /* \"contracts/4_SmartGTFX.sol\":20604:20614  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":20604:20616  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/4_SmartGTFX.sol\":20618:20625  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":20627:20714  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":20666:20676  addedValue */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":20627:20714  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      data_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77\n      0x21\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":20627:20638  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":20627:20652  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":20639:20651  _msgSender() */\n      tag_169\n        /* \"contracts/4_SmartGTFX.sol\":20639:20649  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":20639:20651  _msgSender() */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":20627:20652  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":20627:20661  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":20627:20714  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":20627:20665  _allowances[_msgSender()][spender].add */\n      tag_170\n        /* \"contracts/4_SmartGTFX.sol\":20627:20714  _allowances[_msgSender()][spender].add(addedValue, \"The increased allowance overflows\") */\n      and\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":21737:21880  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n    tag_64:\n        /* \"contracts/4_SmartGTFX.sol\":21809:21813  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_174\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/4_SmartGTFX.sol\":21825:21852  _burn(_msgSender(), amount) */\n      tag_176\n        /* \"contracts/4_SmartGTFX.sol\":21831:21843  _msgSender() */\n      tag_177\n        /* \"contracts/4_SmartGTFX.sol\":21831:21841  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21831:21843  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/4_SmartGTFX.sol\":21845:21851  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":21825:21830  _burn */\n      tag_178\n        /* \"contracts/4_SmartGTFX.sol\":21825:21852  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":21869:21873  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13168:13169  _ */\n    tag_175:\n        /* \"contracts/4_SmartGTFX.sol\":21737:21880  function burn(uint256 amount) public validLock permissionCheck returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14168:14213  mapping (address => address) public delegates */\n    tag_67:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":22022:22150  function delegate(address delegatee) public validLock permissionCheck {... */\n    tag_70:\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_180\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_182\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/4_SmartGTFX.sol\":22109:22143  _delegate(_msgSender(), delegatee) */\n      tag_184\n        /* \"contracts/4_SmartGTFX.sol\":22119:22131  _msgSender() */\n      tag_185\n        /* \"contracts/4_SmartGTFX.sol\":22119:22129  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":22119:22131  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/4_SmartGTFX.sol\":22133:22142  delegatee */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":22109:22118  _delegate */\n      tag_186\n        /* \"contracts/4_SmartGTFX.sol\":22109:22143  _delegate(_msgSender(), delegatee) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/4_SmartGTFX.sol\":22022:22150  function delegate(address delegatee) public validLock permissionCheck {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12107:12204  function freeze() public onlyOwner {... */\n    tag_72:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_188\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/4_SmartGTFX.sol\":12152:12160  isLocked */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12152:12164  isLocked = 1 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12188:12197  Freezed() */\n      mload(0x40)\n      0x962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12152:12160  isLocked */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12188:12197  Freezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12107:12204  function freeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12210:12311  function unfreeze() public onlyOwner {... */\n    tag_74:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_192\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_193\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/4_SmartGTFX.sol\":12268:12269  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12257:12269  isLocked = 0 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12293:12304  UnFreezed() */\n      mload(0x40)\n      0xf0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12268:12269  0 */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12293:12304  UnFreezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12210:12311  function unfreeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14585:14634  mapping (address => uint32) public numCheckpoints */\n    tag_77:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":17135:17245  function balanceOf(address account) external view returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":17220:17238  _balances[account] */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":17194:17201  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":17220:17238  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":17220:17229  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":17220:17238  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":17135:17245  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n    tag_82:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_197\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/4_SmartGTFX.sol\":8401:8402  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8385:8391  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8385:8391  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8401:8402  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8427:8428  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8410:8429  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":24170:25362  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n    tag_85:\n        /* \"contracts/4_SmartGTFX.sol\":24252:24258  uint96 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24292:24304  block.number */\n      number\n        /* \"contracts/4_SmartGTFX.sol\":24278:24289  blockNumber */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":24278:24304  blockNumber < block.number */\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24270:24327  require(blockNumber < block.number, \"Not determined yet\") */\n      tag_201\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x139bdd0819195d195c9b5a5b9959081e595d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24360:24383  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24338:24357  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24360:24383  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24360:24374  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":24360:24383  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24397:24414  nCheckpoints == 0 */\n      dup1\n        /* \"contracts/4_SmartGTFX.sol\":24393:24449  if (nCheckpoints == 0) {... */\n      tag_202\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24437:24438  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24430:24438  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24393:24449  if (nCheckpoints == 0) {... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24506:24526  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24506:24517  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24506:24526  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24506:24544  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24527:24543  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24506:24544  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24506:24554  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24506:24569  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24502:24655  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_203\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24599:24619  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24599:24610  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24599:24619  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24599:24637  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24620:24636  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24599:24637  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24635:24636  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":24599:24643  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":24592:24644  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      tag_204\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":24592:24598  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":24592:24644  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/4_SmartGTFX.sol\":24585:24644  return ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24502:24655  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":24713:24733  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":24713:24724  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":24713:24733  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24713:24736  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24713:24746  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":24713:24736  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":24713:24746  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24713:24760  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":24709:24795  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24783:24784  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":24776:24784  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":24709:24795  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_206:\n        /* \"contracts/4_SmartGTFX.sol\":24805:24817  uint32 lower */\n      0x00\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":24846:24862  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"contracts/4_SmartGTFX.sol\":24872:25298  while (upper > lower) {... */\n    tag_207:\n        /* \"contracts/4_SmartGTFX.sol\":24887:24892  lower */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":24879:24892  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":24879:24884  upper */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":24879:24892  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":24872:25298  while (upper > lower) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":24950:24951  2 */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":24933:24946  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":24932:24951  (upper - lower) / 2 */\n      0xffffffff\n      and\n      div\n        /* \"contracts/4_SmartGTFX.sol\":24924:24951  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":24992:25012  Checkpoint memory cp */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25015:25035  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25015:25026  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":25015:25035  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25015:25043  checkpoints[account][center] */\n      0xffffffff\n      dup1\n      dup7\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":24992:25043  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup1\n      dup3\n      mstore\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25061:25088  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":25057:25288  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":25115:25131  ceil96(cp.votes) */\n      tag_213\n        /* \"contracts/4_SmartGTFX.sol\":25122:25124  cp */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25122:25130  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25115:25121  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":25115:25131  ceil96(cp.votes) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/4_SmartGTFX.sol\":25108:25131  return ceil96(cp.votes) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/4_SmartGTFX.sol\":25057:25288  if (cp.fromBlock == blockNumber) {... */\n    tag_212:\n        /* \"contracts/4_SmartGTFX.sol\":25156:25168  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25156:25182  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":25152:25288  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":25210:25216  center */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25202:25216  lower = center */\n      swap4\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":25152:25288  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_216)\n    tag_215:\n        /* \"contracts/4_SmartGTFX.sol\":25272:25273  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":25263:25269  center */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":25263:25273  center - 1 */\n      sub\n        /* \"contracts/4_SmartGTFX.sol\":25255:25273  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":25152:25288  if (cp.fromBlock < blockNumber) {... */\n    tag_216:\n        /* \"contracts/4_SmartGTFX.sol\":24872:25298  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_207)\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25321:25341  checkpoints[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25321:25332  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":25321:25341  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25321:25348  checkpoints[account][lower] */\n      0xffffffff\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25321:25354  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25314:25355  ceil96(checkpoints[account][lower].votes) */\n      tag_217\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25314:25320  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":25314:25355  ceil96(checkpoints[account][lower].votes) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/4_SmartGTFX.sol\":25307:25355  return ceil96(checkpoints[account][lower].votes) */\n      swap7\n        /* \"contracts/4_SmartGTFX.sol\":24170:25362  function getPriorVotes(address account, uint256 blockNumber) public view returns (uint96) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":15112:15154  mapping (address => uint256) public nonces */\n    tag_88:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16276:16359  function getOwner() external view returns (address) {... */\n    tag_90:\n        /* \"contracts/4_SmartGTFX.sol\":16319:16326  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":16345:16352  owner() */\n      tag_219\n        /* \"contracts/4_SmartGTFX.sol\":16345:16350  owner */\n      tag_92\n        /* \"contracts/4_SmartGTFX.sol\":16345:16352  owner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/4_SmartGTFX.sol\":16338:16352  return owner() */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":16276:16359  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n    tag_92:\n        /* \"contracts/4_SmartGTFX.sol\":7762:7769  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7784:7790  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":16562:16649  function symbol() external view returns (string memory) {... */\n    tag_94:\n        /* \"contracts/4_SmartGTFX.sol\":16635:16642  _symbol */\n      0x06\n        /* \"contracts/4_SmartGTFX.sol\":16628:16642  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":16603:16616  string memory */\n      0x60\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":16628:16642  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":16635:16642  _symbol */\n      swap1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":16628:16642  return _symbol */\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":16635:16642  _symbol */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":16628:16642  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n        /* \"contracts/4_SmartGTFX.sol\":21202:21483  function decreaseAllowance(address spender, uint256 subtractedValue) public validLock permissionCheck returns (bool) {... */\n    tag_101:\n        /* \"contracts/4_SmartGTFX.sol\":21313:21317  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_226\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_228\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/4_SmartGTFX.sol\":21329:21455  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\")) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":21338:21350  _msgSender() */\n      tag_231\n        /* \"contracts/4_SmartGTFX.sol\":21338:21348  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21338:21350  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/4_SmartGTFX.sol\":21352:21359  spender */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":21361:21454  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      tag_158\n        /* \"contracts/4_SmartGTFX.sol\":21400:21415  subtractedValue */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":21361:21454  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/4_SmartGTFX.sol\":21361:21372  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":21361:21386  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":21373:21385  _msgSender() */\n      tag_233\n        /* \"contracts/4_SmartGTFX.sol\":21373:21383  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":21373:21385  _msgSender() */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":21361:21386  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":21361:21395  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":21361:21454  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":21361:21399  _allowances[_msgSender()][spender].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":21361:21454  _allowances[_msgSender()][spender].sub(subtractedValue, \"The decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":17504:17687  function transfer(address recipient, uint256 amount) external validLock permissionCheck returns (bool) {... */\n    tag_104:\n        /* \"contracts/4_SmartGTFX.sol\":17601:17605  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_235\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_237\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/4_SmartGTFX.sol\":17617:17659  _transfer(_msgSender(), recipient, amount) */\n      tag_143\n        /* \"contracts/4_SmartGTFX.sol\":17627:17639  _msgSender() */\n      tag_240\n        /* \"contracts/4_SmartGTFX.sol\":17627:17637  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":17627:17639  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/4_SmartGTFX.sol\":17641:17650  recipient */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":17652:17658  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":17617:17626  _transfer */\n      tag_154\n        /* \"contracts/4_SmartGTFX.sol\":17617:17659  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":23521:23748  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23626:23649  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23586:23592  uint96 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23626:23649  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23626:23640  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":23626:23649  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23666:23682  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/4_SmartGTFX.sol\":23666:23741  nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      tag_242\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":23740:23741  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23666:23741  nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      jump(tag_244)\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23692:23712  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23692:23703  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":23692:23712  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23692:23730  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":23713:23729  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/4_SmartGTFX.sol\":23692:23730  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23728:23729  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":23692:23736  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":23685:23737  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      tag_244\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":23685:23691  ceil96 */\n      tag_205\n        /* \"contracts/4_SmartGTFX.sol\":23685:23737  ceil96(checkpoints[account][nCheckpoints - 1].votes) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/4_SmartGTFX.sol\":23659:23741  return nCheckpoints > 0 ? ceil96(checkpoints[account][nCheckpoints - 1].votes) : 0 */\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":23521:23748  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_246\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_247\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13375:13389  blacklist[who] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13392:13397  false */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":13375:13389  blacklist[who] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13375:13384  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13375:13389  blacklist[who] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13375:13397  blacklist[who] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13421:13436  UnlockUser(who) */\n      mload\n      0x687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13392:13397  false */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13421:13436  UnlockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":22573:23327  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n    tag_113:\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_250\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_252\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_252:\n        /* \"contracts/4_SmartGTFX.sol\":22720:22743  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":14746:14826  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22800:22805  _name */\n      0x07\n        /* \"contracts/4_SmartGTFX.sol\":22784:22807  keccak256(bytes(_name)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_255\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      dup3\n      add\n      swap2\n      jump(tag_254)\n    tag_255:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_256:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_256\n      jumpi\n    tag_254:\n      pop\n      pop\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22809:22821  getChainId() */\n      tag_257\n        /* \"contracts/4_SmartGTFX.sol\":22809:22819  getChainId */\n      tag_258\n        /* \"contracts/4_SmartGTFX.sol\":22809:22821  getChainId() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/4_SmartGTFX.sol\":22831:22835  this */\n      address\n        /* \"contracts/4_SmartGTFX.sol\":22756:22837  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22756:22837  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22746:22838  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22720:22838  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(_name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22848:22866  bytes32 structHash */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":14963:15034  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x3a\n      add\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":22879:22936  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      dup4\n      dup4\n      add\n      mstore\n      0x60\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0x80\n      dup1\n      dup5\n      add\n      dup12\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22879:22936  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xa0\n      dup5\n      add\n      dup4\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22869:22937  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      dup3\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/4_SmartGTFX.sol\":22974:23031  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0xc0\n      dup6\n      add\n      mstore\n      0xc2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      0xe2\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22974:23031  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0102\n      dup6\n      add\n      dup1\n      dup6\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":22964:23032  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup2\n      mload\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":23062:23088  ecrecover(digest, v, r, s) */\n      swap2\n      dup3\n      swap1\n      mstore\n      0x0122\n      dup7\n      add\n      dup1\n      dup7\n      mstore\n      dup2\n      swap1\n      mstore\n      0xff\n      dup13\n      and\n      0x0142\n      dup8\n      add\n      mstore\n      0x0162\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n      0x0182\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      swap4\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":22869:22937  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap2\n      swap7\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":22964:23032  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap3\n      swap5\n      pop\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":23062:23088  ecrecover(digest, v, r, s) */\n      0x01\n      swap3\n      0x01a2\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":22879:22936  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap3\n      not(0x1f)\n        /* \"contracts/4_SmartGTFX.sol\":23062:23088  ecrecover(digest, v, r, s) */\n      dup4\n      add\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":23062:23088  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23106:23129  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":23098:23151  require(signatory != address(0), \"Invalid signature\") */\n      tag_260\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e76616c6964207369676e6174757265)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":23178:23195  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":23178:23184  nonces */\n      0x0b\n        /* \"contracts/4_SmartGTFX.sol\":23178:23195  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":23178:23197  nonces[signatory]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":23169:23197  nonce == nonces[signatory]++ */\n      dup10\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":23161:23215  require(nonce == nonces[signatory]++, \"Invalid nonce\") */\n      tag_261\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x496e76616c6964206e6f6e6365)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/4_SmartGTFX.sol\":23240:23246  expiry */\n      dup8\n        /* \"contracts/4_SmartGTFX.sol\":23233:23236  now */\n      timestamp\n        /* \"contracts/4_SmartGTFX.sol\":23233:23246  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":23225:23272  require(now <= expiry, \"The signature expired\") */\n      tag_262\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x151a19481cda59db985d1d5c9948195e1c1a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/4_SmartGTFX.sol\":23289:23320  _delegate(signatory, delegatee) */\n      tag_263\n        /* \"contracts/4_SmartGTFX.sol\":23299:23308  signatory */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":23310:23319  delegatee */\n      dup12\n        /* \"contracts/4_SmartGTFX.sol\":23289:23298  _delegate */\n      tag_186\n        /* \"contracts/4_SmartGTFX.sol\":23289:23320  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/4_SmartGTFX.sol\":23282:23320  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13168:13169  _ */\n    tag_253:\n        /* \"contracts/4_SmartGTFX.sol\":22573:23327  function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) public validLock permissionCheck {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n    tag_119:\n        /* \"contracts/4_SmartGTFX.sol\":19063:19067  bool */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12046:12054  isLocked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":12046:12059  isLocked == 0 */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":12038:12079  require(isLocked == 0, \"Token is locked\") */\n      tag_265\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x151bdad95b881a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/4_SmartGTFX.sol\":13130:13140  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13120:13129  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13120:13141  blacklist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13119:13141  !blacklist[msg.sender] */\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":13111:13158  require(!blacklist[msg.sender], \"Blocked user\") */\n      tag_267\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x213637b1b5b2b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/4_SmartGTFX.sol\":19079:19118  _approve(_msgSender(), spender, amount) */\n      tag_269\n        /* \"contracts/4_SmartGTFX.sol\":19088:19100  _msgSender() */\n      tag_270\n        /* \"contracts/4_SmartGTFX.sol\":19088:19098  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19088:19100  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/4_SmartGTFX.sol\":19102:19109  spender */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19111:19117  amount */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19079:19087  _approve */\n      tag_146\n        /* \"contracts/4_SmartGTFX.sol\":19079:19118  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/4_SmartGTFX.sol\":19151:19158  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":19128:19175  ApproveAndCallFallBack(spender).receiveApproval */\n      and\n      0x8f4ffcb1\n        /* \"contracts/4_SmartGTFX.sol\":19176:19188  _msgSender() */\n      tag_271\n        /* \"contracts/4_SmartGTFX.sol\":19176:19186  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":19176:19188  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/4_SmartGTFX.sol\":19190:19196  amount */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":19206:19210  this */\n      address\n        /* \"contracts/4_SmartGTFX.sol\":19213:19217  data */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":19128:19218  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_272:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_274\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_272)\n    tag_274:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19128:19218  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_275\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_275:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_276\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_276:\n        /* \"contracts/4_SmartGTFX.sol\":19128:19218  ApproveAndCallFallBack(spender).receiveApproval(_msgSender(), amount, address(this), data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_277\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_277:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":19235:19239  true */\n      0x01\n      swap8\n        /* \"contracts/4_SmartGTFX.sol\":18945:19246  function approveAndCall(address spender, uint256 amount, bytes memory data) public validLock permissionCheck returns (bool) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n    tag_122:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_279\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13244:13258  blacklist[who] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13261:13265  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13244:13258  blacklist[who] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13244:13265  blacklist[who] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13289:13302  LockUser(who) */\n      mload\n      0x169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13244:13258  blacklist[who] */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13289:13302  LockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":17981:18115  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":18081:18099  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":18055:18062  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":18081:18099  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":18081:18092  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":18081:18099  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":18081:18108  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":17981:18115  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14917:15034  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_127:\n        /* \"contracts/4_SmartGTFX.sol\":14963:15034  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      0x3a\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      dup3\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":14917:15034  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":14449:14519  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_130:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      0xffffffff\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_133:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_284\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_145\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/4_SmartGTFX.sol\":8641:8669  _transferOwnership(newOwner) */\n      tag_184\n        /* \"contracts/4_SmartGTFX.sol\":8660:8668  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8641:8659  _transferOwnership */\n      tag_288\n        /* \"contracts/4_SmartGTFX.sol\":8641:8669  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n    tag_145:\n        /* \"contracts/4_SmartGTFX.sol\":6544:6554  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":25934:26266  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26027:26046  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26019:26087  require(owner != address(0), \"Cannot approve from the zero address\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26105:26126  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26097:26165  require(spender != address(0), \"Cannot approve to the zero address\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26176:26194  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26176:26187  _allowances */\n      0x03\n        /* \"contracts/4_SmartGTFX.sol\":26176:26194  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26176:26203  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26176:26212  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26227:26259  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":25934:26266  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":25368:25928  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25465:25485  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25457:25527  require(sender != address(0), \"Cannot transfer from the zero address\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25545:25568  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25537:25608  require(recipient != address(0), \"Cannot transfer to the zero address\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/4_SmartGTFX.sol\":25639:25707  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      tag_296\n        /* \"contracts/4_SmartGTFX.sol\":25661:25667  amount */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":25639:25707  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973\n      0x23\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25639:25656  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25639:25648  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25639:25656  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25639:25707  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":25639:25660  _balances[sender].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":25639:25707  _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25619:25636  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25619:25628  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25619:25636  _balances[sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25619:25707  _balances[sender] = _balances[sender].sub(amount, \"The transfer amount exceeds balance\") */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":25740:25797  _balances[recipient].add(amount, \"The balance overflows\") */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n      0x15\n      dup2\n      mstore\n      shl(0x58, 0x5468652062616c616e6365206f766572666c6f7773)\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25740:25760  _balances[recipient] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25740:25797  _balances[recipient].add(amount, \"The balance overflows\") */\n      tag_297\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25765:25771  amount */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":25740:25797  _balances[recipient].add(amount, \"The balance overflows\") */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":25740:25764  _balances[recipient].add */\n      tag_170\n        /* \"contracts/4_SmartGTFX.sol\":25740:25797  _balances[recipient].add(amount, \"The balance overflows\") */\n      and\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25717:25737  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25717:25726  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":25717:25737  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":25717:25797  _balances[recipient] = _balances[recipient].add(amount, \"The balance overflows\") */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":25812:25847  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":25717:25737  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":25812:25847  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":25873:25890  delegates[sender] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":25873:25882  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":25873:25890  delegates[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25892:25912  delegates[recipient] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":25858:25921  _moveDelegates(delegates[sender], delegates[recipient], amount) */\n      tag_298\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":25873:25890  delegates[sender] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":25892:25912  delegates[recipient] */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":25914:25920  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":25858:25872  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":25858:25921  _moveDelegates(delegates[sender], delegates[recipient], amount) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/4_SmartGTFX.sol\":25368:25928  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":2494:2667  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_159:\n        /* \"contracts/4_SmartGTFX.sol\":2580:2587  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":2611:2623  errorMessage */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":2603:2609  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":2595:2624  require(b <= a, errorMessage) */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_302:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n    tag_304:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2595:2624  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_305\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_305:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n      pop\n      pop\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2642:2647  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":2494:2667  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":1685:1858  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"contracts/4_SmartGTFX.sol\":1771:1778  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":1798:1803  a + b */\n      dup4\n      dup4\n      add\n        /* \"contracts/4_SmartGTFX.sol\":1825:1837  errorMessage */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":1817:1823  c >= a */\n      dup6\n      dup3\n      lt\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":1809:1838  require(c >= a, errorMessage) */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n        /* \"contracts/4_SmartGTFX.sol\":1809:1838  require(c >= a, errorMessage) */\n    tag_307:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":1852:1853  c */\n      swap5\n        /* \"contracts/4_SmartGTFX.sol\":1685:1858  function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":26272:26676  function _burn(address account, uint256 amount) internal {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26347:26368  account != address(0) */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26339:26406  require(account != address(0), \"Cannot burn from the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/4_SmartGTFX.sol\":26438:26503  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x546865206275726e20616d6f756e7420657863656564732062616c616e636500\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26438:26456  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26438:26447  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26438:26456  _balances[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26438:26503  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      tag_314\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26461:26467  amount */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26438:26503  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":26438:26460  _balances[account].sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":26438:26503  _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26417:26435  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26417:26426  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26417:26435  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":26417:26503  _balances[account] = _balances[account].sub(amount, \"The burn amount exceeds balance\") */\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26528:26540  _totalSupply */\n      sload(0x04)\n        /* \"contracts/4_SmartGTFX.sol\":26528:26552  _totalSupply.sub(amount) */\n      tag_315\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26545:26551  amount */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":26528:26552  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"contracts/4_SmartGTFX.sol\":26528:26544  _totalSupply.sub */\n      tag_316\n        /* \"contracts/4_SmartGTFX.sol\":26528:26552  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/4_SmartGTFX.sol\":26513:26525  _totalSupply */\n      0x04\n        /* \"contracts/4_SmartGTFX.sol\":26513:26552  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26567:26604  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":26593:26594  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26567:26604  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26630:26648  delegates[account] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26630:26639  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":26630:26648  delegates[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26615:26669  _moveDelegates(delegates[account], address(0), amount) */\n      tag_317\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":26630:26648  delegates[account] */\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26662:26668  amount */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":26615:26629  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":26615:26669  _moveDelegates(delegates[account], address(0), amount) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/4_SmartGTFX.sol\":26272:26676  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":26682:27051  function _delegate(address delegator, address delegatee) internal {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":26784:26804  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":26758:26781  address currentDelegate */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":26784:26804  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26784:26793  delegates */\n      0x08\n        /* \"contracts/4_SmartGTFX.sol\":26784:26804  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26841:26850  _balances */\n      0x02\n        /* \"contracts/4_SmartGTFX.sol\":26841:26861  _balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":26871:26891  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":26871:26903  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":26919:26973  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/4_SmartGTFX.sol\":26784:26804  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"contracts/4_SmartGTFX.sol\":26841:26861  _balances[delegator] */\n      swap2\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":26871:26903  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":26784:26804  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26919:26973  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":26758:26781  address currentDelegate */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":26919:26973  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/4_SmartGTFX.sol\":26984:27044  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_319\n        /* \"contracts/4_SmartGTFX.sol\":26999:27014  currentDelegate */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":27016:27025  delegatee */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27027:27043  delegatorBalance */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":26984:26998  _moveDelegates */\n      tag_299\n        /* \"contracts/4_SmartGTFX.sol\":26984:27044  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/4_SmartGTFX.sol\":26682:27051  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28734:28892  function ceil96(uint256 n) internal pure returns (uint96) {... */\n    tag_205:\n        /* \"contracts/4_SmartGTFX.sol\":28784:28790  uint96 */\n      0x00\n      shl(0x60, 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28806:28807  n */\n      dup3\n        /* \"contracts/4_SmartGTFX.sol\":28806:28816  n >= 2**96 */\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":28802:28860  if (n >= 2**96) {... */\n      tag_321\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28832:28849  return uint96(-1) */\n      jump(tag_175)\n        /* \"contracts/4_SmartGTFX.sol\":28802:28860  if (n >= 2**96) {... */\n    tag_321:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28883:28884  n */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":28734:28892  function ceil96(uint256 n) internal pure returns (uint96) {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28898:29050  function getChainId() internal pure returns (uint256) {... */\n    tag_258:\n        /* \"contracts/4_SmartGTFX.sol\":29009:29018  chainid() */\n      chainid\n        /* \"contracts/4_SmartGTFX.sol\":28898:29050  function getChainId() internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8767:8978  function _transferOwnership(address newOwner) internal {... */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8836:8858  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8828:8901  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/4_SmartGTFX.sol\":8933:8939  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8912:8950  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8933:8939  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8912:8950  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8956:8962  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8956:8973  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8767:8978  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":27057:27951  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n    tag_299:\n        /* \"contracts/4_SmartGTFX.sol\":27162:27168  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27152:27168  srcRep != dstRep */\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27152:27158  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27152:27168  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27152:27182  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_326\n      jumpi\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27181:27182  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27172:27178  amount */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27172:27182  amount > 0 */\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":27152:27182  srcRep != dstRep && amount > 0 */\n    tag_326:\n        /* \"contracts/4_SmartGTFX.sol\":27148:27945  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27202:27222  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27198:27560  if (srcRep != address(0)) {... */\n      tag_328\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27261:27283  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27242:27258  uint32 srcRepNum */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27261:27283  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27261:27275  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":27261:27283  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27321:27334  srcRepNum > 0 */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27321:27381  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_329\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":27380:27381  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27321:27381  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_330)\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27337:27356  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27337:27348  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":27337:27356  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27337:27371  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":27357:27370  srcRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/4_SmartGTFX.sol\":27337:27371  checkpoints[srcRep][srcRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27369:27370  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":27337:27377  checkpoints[srcRep][srcRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":27321:27381  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_330:\n        /* \"contracts/4_SmartGTFX.sol\":27301:27381  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27399:27416  uint256 srcRepNew */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27419:27470  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      tag_331\n        /* \"contracts/4_SmartGTFX.sol\":27433:27439  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27419:27470  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520766f746520616d6f756e7420756e646572666c6f7773000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27419:27428  srcRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27419:27432  srcRepOld.sub */\n      tag_159\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27419:27470  srcRepOld.sub(amount, \"The vote amount underflows\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"contracts/4_SmartGTFX.sol\":27399:27470  uint256 srcRepNew = srcRepOld.sub(amount, \"The vote amount underflows\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27488:27545  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_332\n        /* \"contracts/4_SmartGTFX.sol\":27505:27511  srcRep */\n      dup7\n        /* \"contracts/4_SmartGTFX.sol\":27513:27522  srcRepNum */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27524:27533  srcRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27535:27544  srcRepNew */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27488:27504  _writeCheckpoint */\n      tag_333\n        /* \"contracts/4_SmartGTFX.sol\":27488:27545  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/4_SmartGTFX.sol\":27198:27560  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27578:27598  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/4_SmartGTFX.sol\":27574:27935  if (dstRep != address(0)) {... */\n      tag_298\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27637:27659  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":27618:27634  uint32 dstRepNum */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27637:27659  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27637:27651  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":27637:27659  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27697:27710  dstRepNum > 0 */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":27697:27757  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_335\n      jumpi\n        /* \"contracts/4_SmartGTFX.sol\":27756:27757  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27697:27757  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_336)\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":27713:27732  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":27713:27724  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":27713:27732  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27713:27747  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":27733:27746  dstRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/4_SmartGTFX.sol\":27713:27747  checkpoints[dstRep][dstRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":27745:27746  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":27713:27753  checkpoints[dstRep][dstRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":27697:27757  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_336:\n        /* \"contracts/4_SmartGTFX.sol\":27677:27757  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27775:27792  uint256 dstRepNew */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":27795:27845  dstRepOld.add(amount, \"The vote amount overflows\") */\n      tag_337\n        /* \"contracts/4_SmartGTFX.sol\":27809:27815  amount */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27795:27845  dstRepOld.add(amount, \"The vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520766f746520616d6f756e74206f766572666c6f777300000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27795:27804  dstRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27795:27808  dstRepOld.add */\n      tag_170\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":27795:27845  dstRepOld.add(amount, \"The vote amount overflows\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/4_SmartGTFX.sol\":27775:27845  uint256 dstRepNew = dstRepOld.add(amount, \"The vote amount overflows\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":27863:27920  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_253\n        /* \"contracts/4_SmartGTFX.sol\":27880:27886  dstRep */\n      dup6\n        /* \"contracts/4_SmartGTFX.sol\":27888:27897  dstRepNum */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27899:27908  dstRepOld */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27910:27919  dstRepNew */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":27863:27879  _writeCheckpoint */\n      tag_333\n        /* \"contracts/4_SmartGTFX.sol\":27863:27920  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":2102:2230  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n        /* \"contracts/4_SmartGTFX.sol\":2160:2167  uint256 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":2182:2225  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_244\n        /* \"contracts/4_SmartGTFX.sol\":2186:2187  a */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":2189:2190  b */\n      dup4\n        /* \"contracts/4_SmartGTFX.sol\":2182:2225  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":2182:2185  sub */\n      tag_159\n        /* \"contracts/4_SmartGTFX.sol\":2182:2225  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":27957:28557  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {... */\n    tag_333:\n        /* \"contracts/4_SmartGTFX.sol\":28076:28094  uint32 blockNumber */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28097:28153  safe32(block.number, \"The block number exceeds 32 bits\") */\n      tag_342\n        /* \"contracts/4_SmartGTFX.sol\":28104:28116  block.number */\n      number\n        /* \"contracts/4_SmartGTFX.sol\":28097:28153  safe32(block.number, \"The block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x54686520626c6f636b206e756d62657220657863656564732033322062697473\n      dup2\n      mstore\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28097:28103  safe32 */\n      tag_343\n        /* \"contracts/4_SmartGTFX.sol\":28097:28153  safe32(block.number, \"The block number exceeds 32 bits\") */\n      jump\t// in\n    tag_342:\n        /* \"contracts/4_SmartGTFX.sol\":28076:28153  uint32 blockNumber = safe32(block.number, \"The block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28181:28182  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28166:28178  nCheckpoints */\n      dup5\n        /* \"contracts/4_SmartGTFX.sol\":28166:28182  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/4_SmartGTFX.sol\":28166:28251  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_344\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28186:28208  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28186:28197  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28186:28208  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28186:28251  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28209:28225  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28186:28226  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28186:28236  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":28186:28251  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup3\n      dup3\n      and\n        /* \"contracts/4_SmartGTFX.sol\":28186:28236  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      swap2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":28186:28251  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":28166:28251  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_344:\n        /* \"contracts/4_SmartGTFX.sol\":28162:28486  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_345\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28265:28287  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28265:28276  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28265:28287  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28265:28305  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/4_SmartGTFX.sol\":28288:28304  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28265:28305  checkpoints[delegatee][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28303:28304  1 */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":28265:28311  checkpoints[delegatee][nCheckpoints - 1].votes */\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28265:28322  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28162:28486  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_346)\n    tag_345:\n        /* \"contracts/4_SmartGTFX.sol\":28388:28421  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":28349:28371  checkpoints[delegatee] */\n      dup11\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28349:28360  checkpoints */\n      0x09\n        /* \"contracts/4_SmartGTFX.sol\":28349:28371  checkpoints[delegatee] */\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28349:28385  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28349:28421  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap6\n      mload\n      dup7\n      sload\n      swap1\n      dup7\n      and\n      not(0xffffffff)\n      swap2\n      dup3\n      and\n      or\n      dup8\n      sstore\n      swap3\n      mload\n      0x01\n      swap7\n      dup8\n      add\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28433:28458  numCheckpoints[delegatee] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":28433:28447  numCheckpoints */\n      0x0a\n        /* \"contracts/4_SmartGTFX.sol\":28433:28458  numCheckpoints[delegatee] */\n      swap1\n      swap3\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":28433:28477  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":28461:28477  nCheckpoints + 1 */\n      swap3\n      dup9\n      add\n        /* \"contracts/4_SmartGTFX.sol\":28433:28477  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":28162:28486  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_346:\n        /* \"contracts/4_SmartGTFX.sol\":28499:28550  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap3\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":27957:28557  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint256 oldVotes, uint256 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":28567:28728  function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_343:\n        /* \"contracts/4_SmartGTFX.sol\":28645:28651  uint32 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":28682:28694  errorMessage */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":28675:28680  2**32 */\n      0x0100000000\n        /* \"contracts/4_SmartGTFX.sol\":28671:28680  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/4_SmartGTFX.sol\":28663:28695  require(n < 2**32, errorMessage) */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_302)\n        /* \"contracts/4_SmartGTFX.sol\":28663:28695  require(n < 2**32, errorMessage) */\n    tag_348:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":28719:28720  n */\n      swap2\n      swap3\n        /* \"contracts/4_SmartGTFX.sol\":28567:28728  function safe32(uint256 n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13447:29052  contract GTFX is BEP20Interface, Tokenlock, UserLock {... */\n    tag_211:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9 43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373\n    data_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77 54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d 43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973 546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b 5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1 546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866 454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e 43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288 43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373\n    data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf 44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929\n    data_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee 43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820be94ca3c25b3d089930fb38dc9a9df5384deec74d8dcb8e846357d2c746ac4da64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b506040516200299c3803806200299c833981810160405260208110156200004457600080fd5b505160006200005b6001600160e01b036200019216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506040805180820190915260188082527f47697473686f636b2046696e616e636520546573746e657400000000000000006020909201918252620000eb9160079162000197565b50604080518082019091526005808252640e88ea88cb60db1b60209092019182526200011a9160069162000197565b506005805460ff191660121790556a295be96e6406697200000060048190556001600160a01b0382166000818152600260209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35062000239565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001da57805160ff19168380011785556200020a565b828001600101855582156200020a579182015b828111156200020a578251825591602001919060010190620001ed565b50620002189291506200021c565b5090565b6200019491905b8082111562000218576000815560010162000223565b61275380620002496000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063782d6fe11161010f578063bd1870a3116100a2578063dd62ed3e11610071578063dd62ed3e146106a4578063e7a324dc146106d2578063f1127ed8146106da578063f2fde38b1461072c576101e5565b8063bd1870a314610556578063c3cda5201461057c578063cae9ca51146105c3578063d79725801461067e576101e5565b806395d89b41116100de57806395d89b41146104d0578063a457c2d7146104d8578063a9059cbb14610504578063b4b5ea5714610530576101e5565b8063782d6fe11461044d5780637ecebe001461049a578063893d20e8146104c05780638da5cb5b146104c8576101e5565b806342966c68116101875780636a28f000116101565780636a28f000146103d85780636fcfff45146103e057806370a082311461041f578063715018a614610445576101e5565b806342966c6814610349578063587cde1e146103665780635c19a95c146103a857806362a5af3b146103d0576101e5565b806320606b70116101c357806320606b70146102c157806323b872dd146102c9578063313ce567146102ff578063395093511461031d576101e5565b806306fdde03146101ea578063095ea7b31461026757806318160ddd146102a7575b600080fd5b6101f2610752565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356107e8565b604080519115158252519081900360200190f35b6102af6108aa565b60408051918252519081900360200190f35b6102af6108b0565b610293600480360360608110156102df57600080fd5b506001600160a01b038135811691602081013590911690604001356108cb565b6103076109f9565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561033357600080fd5b506001600160a01b038135169060200135610a02565b6102936004803603602081101561035f57600080fd5b5035610b14565b61038c6004803603602081101561037c57600080fd5b50356001600160a01b0316610bd4565b604080516001600160a01b039092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b0316610bef565b005b6103ce610ca8565b6103ce610d3c565b610406600480360360208110156103f657600080fd5b50356001600160a01b0316610dca565b6040805163ffffffff9092168252519081900360200190f35b6102af6004803603602081101561043557600080fd5b50356001600160a01b0316610de2565b6103ce610dfd565b6104796004803603604081101561046357600080fd5b506001600160a01b038135169060200135610e9f565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102af600480360360208110156104b057600080fd5b50356001600160a01b03166110cd565b61038c6110df565b61038c6110ee565b6101f26110fd565b610293600480360360408110156104ee57600080fd5b506001600160a01b03813516906020013561115e565b6102936004803603604081101561051a57600080fd5b506001600160a01b038135169060200135611270565b6104796004803603602081101561054657600080fd5b50356001600160a01b0316611328565b6103ce6004803603602081101561056c57600080fd5b50356001600160a01b0316611394565b6103ce600480360360c081101561059257600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135611435565b610293600480360360608110156105d957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117c9945050505050565b6103ce6004803603602081101561069457600080fd5b50356001600160a01b031661198e565b6102af600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516611a35565b6102af611a60565b61070c600480360360408110156106f057600080fd5b5080356001600160a01b0316906020013563ffffffff16611a7b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103ce6004803603602081101561074257600080fd5b50356001600160a01b0316611aa8565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050905090565b60008054600160a01b900460ff161561083a576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561088e576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610899611b09565b8484611b0d565b5060015b92915050565b60045490565b60405180604361261982396043019050604051809103902081565b60008054600160a01b900460ff161561091d576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610971576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61097c848484611bf9565b6000610986611b09565b6001600160a01b0380871660009081526003602090815260408083209385168352929052205490915060001981146109ed576109ed86836109e8876040518060600160405280602581526020016125f46025913986919063ffffffff611db816565b611b0d565b50600195945050505050565b60055460ff1690565b60008054600160a01b900460ff1615610a54576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610aa8576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610ab3611b09565b846109e8856040518060600160405280602181526020016125446021913960036000610add611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611e4f16565b60008054600160a01b900460ff1615610b66576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610bba576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610bcb610bc5611b09565b83611ead565b5060015b919050565b6008602052600090815260409020546001600160a01b031681565b600054600160a01b900460ff1615610c40576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610c94576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610ca5610c9f611b09565b82611fed565b50565b610cb0611b09565b6000546001600160a01b03908116911614610d00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b610d44611b09565b6000546001600160a01b03908116911614610d94576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b600a6020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526002602052604090205490565b610e05611b09565b6000546001600160a01b03908116911614610e55576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000438210610eea576040805162461bcd60e51b8152602060048201526012602482015271139bdd0819195d195c9b5a5b9959081e595d60721b604482015290519081900360640190fd5b6001600160a01b0383166000908152600a602052604090205463ffffffff1680610f185760009150506108a4565b6001600160a01b038416600090815260096020908152604080832063ffffffff600019860181168552925290912054168310610f90576001600160a01b038416600090815260096020908152604080832063ffffffff6000198601168452909152902060010154610f889061206d565b9150506108a4565b6001600160a01b038416600090815260096020908152604080832083805290915290205463ffffffff16831015610fcb5760009150506108a4565b600060001982015b8163ffffffff168163ffffffff16111561108d57600282820363ffffffff16048103610ffd61250a565b506001600160a01b038716600090815260096020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152908714156110685761105c816020015161206d565b955050505050506108a4565b805163ffffffff1687111561107f57819350611086565b6001820392505b5050610fd3565b6001600160a01b038616600090815260096020908152604080832063ffffffff861684529091529020600101546110c39061206d565b9695505050505050565b600b6020526000908152604090205481565b60006110e96110ee565b905090565b6000546001600160a01b031690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b60008054600160a01b900460ff16156111b0576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611204576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a061120f611b09565b846109e8856040518060600160405280602281526020016125d26022913960036000611239611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611db816565b60008054600160a01b900460ff16156112c2576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611316576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0611321611b09565b8484611bf9565b6001600160a01b0381166000908152600a602052604081205463ffffffff168061135357600061138d565b6001600160a01b038316600090815260096020908152604080832063ffffffff600019860116845290915290206001015461138d9061206d565b9392505050565b61139c611b09565b6000546001600160a01b039081169116146113ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b600054600160a01b900460ff1615611486576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff16156114da576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b600060405180806126196043913960430190506040518091039020600760405180828054600181600116156101000203166002900480156115525780601f10611530576101008083540402835291820191611552565b820191906000526020600020905b81548152906001019060200180831161153e575b50509150506040518091039020611567612087565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b03168152602001945050505050604051602081830303815290604052805190602001209050600060405180806126c4603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa1580156116a5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611701576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b602052604090208054600181019091558914611765576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015290519081900360640190fd5b874211156117b2576040805162461bcd60e51b8152602060048201526015602482015274151a19481cda59db985d1d5c9948195e1c1a5c9959605a1b604482015290519081900360640190fd5b6117bc818b611fed565b505050505b505050505050565b60008054600160a01b900460ff161561181b576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561186f576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61188161187a611b09565b8585611b0d565b836001600160a01b0316638f4ffcb1611898611b09565b8530866040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561191d578181015183820152602001611905565b50505050905090810190601f16801561194a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561196c57600080fd5b505af1158015611980573d6000803e3d6000fd5b506001979650505050505050565b611996611b09565b6000546001600160a01b039081169116146119e6576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60405180603a6126c48239603a019050604051809103902081565b60096020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b611ab0611b09565b6000546001600160a01b03908116911614611b00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b610ca58161208b565b3390565b6001600160a01b038316611b525760405162461bcd60e51b815260040180806020018281038252602481526020018061258b6024913960400191505060405180910390fd5b6001600160a01b038216611b975760405162461bcd60e51b81526004018080602001828103825260228152602001806125226022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061267c6025913960400191505060405180910390fd5b6001600160a01b038216611c835760405162461bcd60e51b81526004018080602001828103825260238152602001806126a16023913960400191505060405180910390fd5b611cc6816040518060600160405280602381526020016125af602391396001600160a01b038616600090815260026020526040902054919063ffffffff611db816565b6001600160a01b038085166000908152600260208181526040808420959095558451808601865260158152745468652062616c616e6365206f766572666c6f777360581b818301529387168352529190912054611d2a91839063ffffffff611e4f16565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a36001600160a01b03808416600090815260086020526040808220548584168352912054611db39291821691168361212b565b505050565b60008184841115611e475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578181015183820152602001611df4565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008383018285821015611ea45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b50949350505050565b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260218152602001806126fe6021913960400191505060405180910390fd5b604080518082018252601f81527f546865206275726e20616d6f756e7420657863656564732062616c616e6365006020808301919091526001600160a01b038516600090815260029091529190912054611f5391839063ffffffff611db816565b6001600160a01b038316600090815260026020526040902055600454611f7f908263ffffffff6122e816565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001600160a01b03808316600090815260086020526040812054611fe99216908361212b565b5050565b6001600160a01b03808316600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461206782848361212b565b50505050565b6000600160601b82106120835750600019610bcf565b5090565b4690565b6001600160a01b0381166120d05760405162461bcd60e51b81526004018080602001828103825260268152602001806125656026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b03161415801561214d5750600081115b15611db3576001600160a01b0383161561221f576001600160a01b0383166000908152600a602052604081205463ffffffff16908161218d5760006121bf565b6001600160a01b038516600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b9050600061220d846040518060400160405280601a81526020017f54686520766f746520616d6f756e7420756e646572666c6f777300000000000081525084611db89092919063ffffffff16565b905061221b8684848461232a565b5050505b6001600160a01b03821615611db3576001600160a01b0382166000908152600a602052604081205463ffffffff16908161225a57600061228c565b6001600160a01b038416600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b905060006122da846040518060400160405280601981526020017f54686520766f746520616d6f756e74206f766572666c6f77730000000000000081525084611e4f9092919063ffffffff16565b90506117c18584848461232a565b600061138d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611db8565b600061236b436040518060400160405280602081526020017f54686520626c6f636b206e756d626572206578636565647320333220626974738152506124ac565b905060008463ffffffff161180156123b457506001600160a01b038516600090815260096020908152604080832063ffffffff6000198901811685529252909120548282169116145b156123f1576001600160a01b038516600090815260096020908152604080832063ffffffff60001989011684529091529020600101829055612462565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600984528681208b8616825284528681209551865490861663ffffffff199182161787559251600196870155908152600a9092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106125025760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b509192915050565b60408051808201909152600080825260208201529056fe43616e6e6f7420617070726f766520746f20746865207a65726f206164647265737354686520696e6372656173656420616c6c6f77616e6365206f766572666c6f77734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e7366657220616d6f756e7420657863656564732062616c616e63655468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e7366657220746f20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792943616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a72315820be94ca3c25b3d089930fb38dc9a9df5384deec74d8dcb8e846357d2c746ac4da64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x299C CODESIZE SUB DUP1 PUSH3 0x299C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 PUSH3 0x5B PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x192 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP1 DUP3 MSTORE PUSH32 0x47697473686F636B2046696E616E636520546573746E65740000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xEB SWAP2 PUSH1 0x7 SWAP2 PUSH3 0x197 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP1 DUP3 MSTORE PUSH5 0xE88EA88CB PUSH1 0xDB SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x11A SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x197 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x295BE96E64066972000000 PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH3 0x239 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1DA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x20A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x20A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x20A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP PUSH3 0x218 SWAP3 SWAP2 POP PUSH3 0x21C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x194 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x218 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x223 JUMP JUMPDEST PUSH2 0x2753 DUP1 PUSH3 0x249 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD1870A3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0x67E JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x530 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C8 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6A28F000 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x445 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x3D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x307 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x115E JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x17C9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198E JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x899 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2619 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP5 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9ED JUMPI PUSH2 0x9ED DUP7 DUP4 PUSH2 0x9E8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F4 PUSH1 0x25 SWAP2 CODECOPY DUP7 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0xAB3 PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2544 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xADD PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBCB PUSH2 0xBC5 PUSH2 0x1B09 JUMP JUMPDEST DUP4 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 PUSH2 0xC9F PUSH2 0x1B09 JUMP JUMPDEST DUP3 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD0819195D195C9B5A5B9959081E595D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xF90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xFFD PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1068 JUMPI PUSH2 0x105C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x206D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x8A4 JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x107F JUMPI DUP2 SWAP4 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10C3 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1204 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x120F PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x1239 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x1321 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1353 JUMPI PUSH1 0x0 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x138D SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1486 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2619 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x1567 PUSH2 0x2087 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x26C4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1701 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1765 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A19481CDA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BC DUP2 DUP12 PUSH2 0x1FED JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x181B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x186F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1881 PUSH2 0x187A PUSH2 0x1B09 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 PUSH2 0x1898 PUSH2 0x1B09 JUMP JUMPDEST DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1905 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x194A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1996 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x26C4 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0x208B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2522 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x267C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25AF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x5468652062616C616E6365206F766572666C6F7773 PUSH1 0x58 SHL DUP2 DUP4 ADD MSTORE SWAP4 DUP8 AND DUP4 MSTORE MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1D2A SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1DB3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E39 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 DUP6 DUP3 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x546865206275726E20616D6F756E7420657863656564732062616C616E636500 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1F53 SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1F7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x22E8 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FE9 SWAP3 AND SWAP1 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x2067 DUP3 DUP5 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 SHL DUP3 LT PUSH2 0x2083 JUMPI POP PUSH1 0x0 NOT PUSH2 0xBCF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2565 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x214D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x221F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220D DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E7420756E646572666C6F7773000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1DB8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x221B DUP7 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x225A JUMPI PUSH1 0x0 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DA DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E74206F766572666C6F777300000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1E4F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17C1 DUP6 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520626C6F636B206E756D62657220657863656564732033322062697473 DUP2 MSTORE POP PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x23B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420617070726F766520746F20746865 KECCAK256 PUSH27 0x65726F206164647265737354686520696E6372656173656420616C PUSH13 0x6F77616E6365206F766572666C PUSH16 0x77734F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F206164647265737343 PUSH2 0x6E6E PUSH16 0x7420617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737354 PUSH9 0x65207472616E736665 PUSH19 0x20616D6F756E7420657863656564732062616C PUSH2 0x6E63 PUSH6 0x546865206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F546865207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E657243616E6E6F PUSH21 0x207472616E736665722066726F6D20746865207A65 PUSH19 0x6F206164647265737343616E6E6F7420747261 PUSH15 0x7366657220746F20746865207A6572 PUSH16 0x206164647265737344656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 NUMBER PUSH2 0x6E6E PUSH16 0x74206275726E2066726F6D2074686520 PUSH27 0x65726F2061646472657373A265627A7A72315820BE94CA3C25B3D0 DUP10 SWAP4 0xF 0xB3 DUP14 0xC9 0xA9 0xDF MSTORE8 DUP5 0xDE 0xEC PUSH21 0xD8DCB8E846357D2C746AC4DA64736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "13447:15605:0:-;;;11956:1;11939:18;;-1:-1:-1;;;;11939:18:0;;;15938:276;5:2:-1;;;;30:1;27;20:12;5:2;15938:276:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15938:276:0;7541:17;7561:12;-1:-1:-1;;;;;7561:10:0;:12;:::i;:::-;7579:6;:18;;-1:-1:-1;;;;;;7579:18:0;-1:-1:-1;;;;;7579:18:0;;;;;;;7608:43;;7579:18;;-1:-1:-1;7579:18:0;7608:43;;7579:6;;7608:43;-1:-1:-1;15984:34:0;;;;;;;;;;;;;;;;;;;;;;;:5;;:34;:::i;:::-;-1:-1:-1;16028:17:0;;;;;;;;;;;;;-1:-1:-1;;;16028:17:0;;;;;;;;;:7;;:17;:::i;:::-;-1:-1:-1;16055:9:0;:14;;-1:-1:-1;;16055:14:0;16067:2;16055:14;;;16094:11;16079:12;:26;;;-1:-1:-1;;;;;16115:18:0;;16055:9;16115:18;;;:9;:18;;;;;;;;:33;;;16164:43;;;;;;16115:18;;16055:9;;16164:43;;;;;;;;;;15938:276;13447:15605;;6469:90;6544:10;6469:90;;:::o;13447:15605::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13447:15605:0;;;-1:-1:-1;13447:15605:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c8063782d6fe11161010f578063bd1870a3116100a2578063dd62ed3e11610071578063dd62ed3e146106a4578063e7a324dc146106d2578063f1127ed8146106da578063f2fde38b1461072c576101e5565b8063bd1870a314610556578063c3cda5201461057c578063cae9ca51146105c3578063d79725801461067e576101e5565b806395d89b41116100de57806395d89b41146104d0578063a457c2d7146104d8578063a9059cbb14610504578063b4b5ea5714610530576101e5565b8063782d6fe11461044d5780637ecebe001461049a578063893d20e8146104c05780638da5cb5b146104c8576101e5565b806342966c68116101875780636a28f000116101565780636a28f000146103d85780636fcfff45146103e057806370a082311461041f578063715018a614610445576101e5565b806342966c6814610349578063587cde1e146103665780635c19a95c146103a857806362a5af3b146103d0576101e5565b806320606b70116101c357806320606b70146102c157806323b872dd146102c9578063313ce567146102ff578063395093511461031d576101e5565b806306fdde03146101ea578063095ea7b31461026757806318160ddd146102a7575b600080fd5b6101f2610752565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356107e8565b604080519115158252519081900360200190f35b6102af6108aa565b60408051918252519081900360200190f35b6102af6108b0565b610293600480360360608110156102df57600080fd5b506001600160a01b038135811691602081013590911690604001356108cb565b6103076109f9565b6040805160ff9092168252519081900360200190f35b6102936004803603604081101561033357600080fd5b506001600160a01b038135169060200135610a02565b6102936004803603602081101561035f57600080fd5b5035610b14565b61038c6004803603602081101561037c57600080fd5b50356001600160a01b0316610bd4565b604080516001600160a01b039092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b0316610bef565b005b6103ce610ca8565b6103ce610d3c565b610406600480360360208110156103f657600080fd5b50356001600160a01b0316610dca565b6040805163ffffffff9092168252519081900360200190f35b6102af6004803603602081101561043557600080fd5b50356001600160a01b0316610de2565b6103ce610dfd565b6104796004803603604081101561046357600080fd5b506001600160a01b038135169060200135610e9f565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102af600480360360208110156104b057600080fd5b50356001600160a01b03166110cd565b61038c6110df565b61038c6110ee565b6101f26110fd565b610293600480360360408110156104ee57600080fd5b506001600160a01b03813516906020013561115e565b6102936004803603604081101561051a57600080fd5b506001600160a01b038135169060200135611270565b6104796004803603602081101561054657600080fd5b50356001600160a01b0316611328565b6103ce6004803603602081101561056c57600080fd5b50356001600160a01b0316611394565b6103ce600480360360c081101561059257600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135611435565b610293600480360360608110156105d957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117c9945050505050565b6103ce6004803603602081101561069457600080fd5b50356001600160a01b031661198e565b6102af600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516611a35565b6102af611a60565b61070c600480360360408110156106f057600080fd5b5080356001600160a01b0316906020013563ffffffff16611a7b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103ce6004803603602081101561074257600080fd5b50356001600160a01b0316611aa8565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050905090565b60008054600160a01b900460ff161561083a576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561088e576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610899611b09565b8484611b0d565b5060015b92915050565b60045490565b60405180604361261982396043019050604051809103902081565b60008054600160a01b900460ff161561091d576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610971576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61097c848484611bf9565b6000610986611b09565b6001600160a01b0380871660009081526003602090815260408083209385168352929052205490915060001981146109ed576109ed86836109e8876040518060600160405280602581526020016125f46025913986919063ffffffff611db816565b611b0d565b50600195945050505050565b60055460ff1690565b60008054600160a01b900460ff1615610a54576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610aa8576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0610ab3611b09565b846109e8856040518060600160405280602181526020016125446021913960036000610add611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611e4f16565b60008054600160a01b900460ff1615610b66576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610bba576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610bcb610bc5611b09565b83611ead565b5060015b919050565b6008602052600090815260409020546001600160a01b031681565b600054600160a01b900460ff1615610c40576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615610c94576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b610ca5610c9f611b09565b82611fed565b50565b610cb0611b09565b6000546001600160a01b03908116911614610d00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b610d44611b09565b6000546001600160a01b03908116911614610d94576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b600a6020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526002602052604090205490565b610e05611b09565b6000546001600160a01b03908116911614610e55576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000438210610eea576040805162461bcd60e51b8152602060048201526012602482015271139bdd0819195d195c9b5a5b9959081e595d60721b604482015290519081900360640190fd5b6001600160a01b0383166000908152600a602052604090205463ffffffff1680610f185760009150506108a4565b6001600160a01b038416600090815260096020908152604080832063ffffffff600019860181168552925290912054168310610f90576001600160a01b038416600090815260096020908152604080832063ffffffff6000198601168452909152902060010154610f889061206d565b9150506108a4565b6001600160a01b038416600090815260096020908152604080832083805290915290205463ffffffff16831015610fcb5760009150506108a4565b600060001982015b8163ffffffff168163ffffffff16111561108d57600282820363ffffffff16048103610ffd61250a565b506001600160a01b038716600090815260096020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152908714156110685761105c816020015161206d565b955050505050506108a4565b805163ffffffff1687111561107f57819350611086565b6001820392505b5050610fd3565b6001600160a01b038616600090815260096020908152604080832063ffffffff861684529091529020600101546110c39061206d565b9695505050505050565b600b6020526000908152604090205481565b60006110e96110ee565b905090565b6000546001600160a01b031690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107de5780601f106107b3576101008083540402835291602001916107de565b60008054600160a01b900460ff16156111b0576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611204576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a061120f611b09565b846109e8856040518060600160405280602281526020016125d26022913960036000611239611b09565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611db816565b60008054600160a01b900460ff16156112c2576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff1615611316576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b6108a0611321611b09565b8484611bf9565b6001600160a01b0381166000908152600a602052604081205463ffffffff168061135357600061138d565b6001600160a01b038316600090815260096020908152604080832063ffffffff600019860116845290915290206001015461138d9061206d565b9392505050565b61139c611b09565b6000546001600160a01b039081169116146113ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b600054600160a01b900460ff1615611486576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff16156114da576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b600060405180806126196043913960430190506040518091039020600760405180828054600181600116156101000203166002900480156115525780601f10611530576101008083540402835291820191611552565b820191906000526020600020905b81548152906001019060200180831161153e575b50509150506040518091039020611567612087565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b03168152602001945050505050604051602081830303815290604052805190602001209050600060405180806126c4603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa1580156116a5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611701576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b602052604090208054600181019091558914611765576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015290519081900360640190fd5b874211156117b2576040805162461bcd60e51b8152602060048201526015602482015274151a19481cda59db985d1d5c9948195e1c1a5c9959605a1b604482015290519081900360640190fd5b6117bc818b611fed565b505050505b505050505050565b60008054600160a01b900460ff161561181b576040805162461bcd60e51b815260206004820152600f60248201526e151bdad95b881a5cc81b1bd8dad959608a1b604482015290519081900360640190fd5b3360009081526001602052604090205460ff161561186f576040805162461bcd60e51b815260206004820152600c60248201526b213637b1b5b2b2103ab9b2b960a11b604482015290519081900360640190fd5b61188161187a611b09565b8585611b0d565b836001600160a01b0316638f4ffcb1611898611b09565b8530866040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561191d578181015183820152602001611905565b50505050905090810190601f16801561194a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561196c57600080fd5b505af1158015611980573d6000803e3d6000fd5b506001979650505050505050565b611996611b09565b6000546001600160a01b039081169116146119e6576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60405180603a6126c48239603a019050604051809103902081565b60096020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b611ab0611b09565b6000546001600160a01b03908116911614611b00576040805162461bcd60e51b8152602060048201819052602482015260008051602061265c833981519152604482015290519081900360640190fd5b610ca58161208b565b3390565b6001600160a01b038316611b525760405162461bcd60e51b815260040180806020018281038252602481526020018061258b6024913960400191505060405180910390fd5b6001600160a01b038216611b975760405162461bcd60e51b81526004018080602001828103825260228152602001806125226022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061267c6025913960400191505060405180910390fd5b6001600160a01b038216611c835760405162461bcd60e51b81526004018080602001828103825260238152602001806126a16023913960400191505060405180910390fd5b611cc6816040518060600160405280602381526020016125af602391396001600160a01b038616600090815260026020526040902054919063ffffffff611db816565b6001600160a01b038085166000908152600260208181526040808420959095558451808601865260158152745468652062616c616e6365206f766572666c6f777360581b818301529387168352529190912054611d2a91839063ffffffff611e4f16565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a36001600160a01b03808416600090815260086020526040808220548584168352912054611db39291821691168361212b565b505050565b60008184841115611e475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578181015183820152602001611df4565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008383018285821015611ea45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b50949350505050565b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260218152602001806126fe6021913960400191505060405180910390fd5b604080518082018252601f81527f546865206275726e20616d6f756e7420657863656564732062616c616e6365006020808301919091526001600160a01b038516600090815260029091529190912054611f5391839063ffffffff611db816565b6001600160a01b038316600090815260026020526040902055600454611f7f908263ffffffff6122e816565b6004556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a36001600160a01b03808316600090815260086020526040812054611fe99216908361212b565b5050565b6001600160a01b03808316600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461206782848361212b565b50505050565b6000600160601b82106120835750600019610bcf565b5090565b4690565b6001600160a01b0381166120d05760405162461bcd60e51b81526004018080602001828103825260268152602001806125656026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b816001600160a01b0316836001600160a01b03161415801561214d5750600081115b15611db3576001600160a01b0383161561221f576001600160a01b0383166000908152600a602052604081205463ffffffff16908161218d5760006121bf565b6001600160a01b038516600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b9050600061220d846040518060400160405280601a81526020017f54686520766f746520616d6f756e7420756e646572666c6f777300000000000081525084611db89092919063ffffffff16565b905061221b8684848461232a565b5050505b6001600160a01b03821615611db3576001600160a01b0382166000908152600a602052604081205463ffffffff16908161225a57600061228c565b6001600160a01b038416600090815260096020908152604080832063ffffffff60001987011684529091529020600101545b905060006122da846040518060400160405280601981526020017f54686520766f746520616d6f756e74206f766572666c6f77730000000000000081525084611e4f9092919063ffffffff16565b90506117c18584848461232a565b600061138d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611db8565b600061236b436040518060400160405280602081526020017f54686520626c6f636b206e756d626572206578636565647320333220626974738152506124ac565b905060008463ffffffff161180156123b457506001600160a01b038516600090815260096020908152604080832063ffffffff6000198901811685529252909120548282169116145b156123f1576001600160a01b038516600090815260096020908152604080832063ffffffff60001989011684529091529020600101829055612462565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600984528681208b8616825284528681209551865490861663ffffffff199182161787559251600196870155908152600a9092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106125025760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e0c578181015183820152602001611df4565b509192915050565b60408051808201909152600080825260208201529056fe43616e6e6f7420617070726f766520746f20746865207a65726f206164647265737354686520696e6372656173656420616c6c6f77616e6365206f766572666c6f77734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e7366657220616d6f756e7420657863656564732062616c616e63655468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f74207472616e736665722066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e7366657220746f20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792943616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a72315820be94ca3c25b3d089930fb38dc9a9df5384deec74d8dcb8e846357d2c746ac4da64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD1870A3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0x67E JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x530 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C8 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6A28F000 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x445 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x3D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x307 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x38C PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x115E JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x17C9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198E JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x899 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x2619 DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97C DUP5 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9ED JUMPI PUSH2 0x9ED DUP7 DUP4 PUSH2 0x9E8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F4 PUSH1 0x25 SWAP2 CODECOPY DUP7 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0xAB3 PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2544 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xADD PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBCB PUSH2 0xBC5 PUSH2 0x1B09 JUMP JUMPDEST DUP4 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 PUSH2 0xC9F PUSH2 0x1B09 JUMP JUMPDEST DUP3 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD94 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD0819195D195C9B5A5B9959081E595D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xF90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xFFD PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1068 JUMPI PUSH2 0x105C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x206D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x8A4 JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x107F JUMPI DUP2 SWAP4 POP PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10C3 SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1204 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x120F PUSH2 0x1B09 JUMP JUMPDEST DUP5 PUSH2 0x9E8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25D2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x1239 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH2 0x1321 PUSH2 0x1B09 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1353 JUMPI PUSH1 0x0 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x138D SWAP1 PUSH2 0x206D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1486 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2619 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x1567 PUSH2 0x2087 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x26C4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1701 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1765 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151A19481CDA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BC DUP2 DUP12 PUSH2 0x1FED JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x181B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881A5CC81B1BD8DAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x186F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213637B1B5B2B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1881 PUSH2 0x187A PUSH2 0x1B09 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 PUSH2 0x1898 PUSH2 0x1B09 JUMP JUMPDEST DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1905 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x194A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1996 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x19E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x26C4 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0x208B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2522 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x267C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A1 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25AF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x5468652062616C616E6365206F766572666C6F7773 PUSH1 0x58 SHL DUP2 DUP4 ADD MSTORE SWAP4 DUP8 AND DUP4 MSTORE MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1D2A SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E4F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1DB3 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E39 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 DUP6 DUP3 LT ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x546865206275726E20616D6F756E7420657863656564732062616C616E636500 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x1F53 SWAP2 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DB8 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1F7F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x22E8 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FE9 SWAP3 AND SWAP1 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x2067 DUP3 DUP5 DUP4 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 SHL DUP3 LT PUSH2 0x2083 JUMPI POP PUSH1 0x0 NOT PUSH2 0xBCF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2565 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x214D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x221F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x218D JUMPI PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x220D DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E7420756E646572666C6F7773000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1DB8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x221B DUP7 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x225A JUMPI PUSH1 0x0 PUSH2 0x228C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22DA DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520766F746520616D6F756E74206F766572666C6F777300000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1E4F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17C1 DUP6 DUP5 DUP5 DUP5 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236B NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686520626C6F636B206E756D62657220657863656564732033322062697473 DUP2 MSTORE POP PUSH2 0x24AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x23B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x2502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E0C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DF4 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420617070726F766520746F20746865 KECCAK256 PUSH27 0x65726F206164647265737354686520696E6372656173656420616C PUSH13 0x6F77616E6365206F766572666C PUSH16 0x77734F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F206164647265737343 PUSH2 0x6E6E PUSH16 0x7420617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737354 PUSH9 0x65207472616E736665 PUSH19 0x20616D6F756E7420657863656564732062616C PUSH2 0x6E63 PUSH6 0x546865206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F546865207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x454950373132 DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E7472616374294F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E657243616E6E6F PUSH21 0x207472616E736665722066726F6D20746865207A65 PUSH19 0x6F206164647265737343616E6E6F7420747261 PUSH15 0x7366657220746F20746865207A6572 PUSH16 0x206164647265737344656C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 NUMBER PUSH2 0x6E6E PUSH16 0x74206275726E2066726F6D2074686520 PUSH27 0x65726F2061646472657373A265627A7A72315820BE94CA3C25B3D0 DUP10 SWAP4 0xF 0xB3 DUP14 0xC9 0xA9 0xDF MSTORE8 DUP5 0xDE 0xEC PUSH21 0xD8DCB8E846357D2C746AC4DA64736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "13447:15605:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13447:15605:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16706:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16706:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18487:177;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18487:177:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16848:91;;;:::i;:::-;;;;;;;;;;;;;;;;14704:122;;;:::i;19553:469::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;19553:469:0;;;;;;;;;;;;;;;;;:::i;16420:83::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20473:270;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;20473:270:0;;;;;;;;:::i;21737:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21737:143:0;;:::i;14168:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14168:45:0;-1:-1:-1;;;;;14168:45:0;;:::i;:::-;;;;-1:-1:-1;;;;;14168:45:0;;;;;;;;;;;;;;22022:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22022:128:0;-1:-1:-1;;;;;22022:128:0;;:::i;:::-;;12107:97;;;:::i;12210:101::-;;;:::i;14585:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14585:49:0;-1:-1:-1;;;;;14585:49:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;17135:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17135:110:0;-1:-1:-1;;;;;17135:110:0;;:::i;8307:127::-;;;:::i;24170:1192::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;24170:1192:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15112:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15112:42:0;-1:-1:-1;;;;;15112:42:0;;:::i;16276:83::-;;;:::i;7724:71::-;;;:::i;16562:87::-;;;:::i;21202:281::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;21202:281:0;;;;;;;;:::i;17504:183::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17504:183:0;;;;;;;;:::i;23521:227::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23521:227:0;-1:-1:-1;;;;;23521:227:0;;:::i;13315:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13315:128:0;-1:-1:-1;;;;;13315:128:0;;:::i;22573:754::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;22573:754:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18945:301::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;18945:301:0;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;18945:301:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;18945:301:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;18945:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18945:301:0;;-1:-1:-1;18945:301:0;;-1:-1:-1;;;;;18945:301:0:i;13186:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13186:123:0;-1:-1:-1;;;;;13186:123:0;;:::i;17981:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17981:134:0;;;;;;;;;;:::i;14917:117::-;;;:::i;14449:70::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14449:70:0;;-1:-1:-1;;;;;14449:70:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;8573:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8573:101:0;-1:-1:-1;;;;;8573:101:0;;:::i;16706:83::-;16777:5;16770:12;;;;;;;;-1:-1:-1;;16770:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16745:13;;16770:12;;16777:5;;16770:12;;16777:5;16770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16706:83;:::o;18487:177::-;18581:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;18597:39;18606:12;:10;:12::i;:::-;18620:7;18629:6;18597:8;:39::i;:::-;-1:-1:-1;18653:4:0;13168:1;18487:177;;;;:::o;16848:91::-;16920:12;;16848:91;:::o;14704:122::-;14746:80;;;;;;;;;;;;;;;;;;14704:122;:::o;19553:469::-;19670:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;19686:36;19696:6;19704:9;19715:6;19686:9;:36::i;:::-;19732:15;19750:12;:10;:12::i;:::-;-1:-1:-1;;;;;19799:19:0;;;19772:24;19799:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;19732:30;;-1:-1:-1;;;19841:31:0;;19837:158;;19888:96;19897:6;19905:7;19914:69;19935:6;19914:69;;;;;;;;;;;;;;;;;:16;;:69;;:20;:69;:::i;:::-;19888:8;:96::i;:::-;-1:-1:-1;20011:4:0;;19553:469;-1:-1:-1;;;;;19553:469:0:o;16420:83::-;16487:9;;;;16420:83;:::o;20473:270::-;20579:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;20595:120;20604:12;:10;:12::i;:::-;20618:7;20627:87;20666:10;20627:87;;;;;;;;;;;;;;;;;:11;:25;20639:12;:10;:12::i;:::-;-1:-1:-1;;;;;20627:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;20627:25:0;;;:34;;;;;;;;;;;:87;;:38;:87;:::i;21737:143::-;21809:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;21825:27;21831:12;:10;:12::i;:::-;21845:6;21825:5;:27::i;:::-;-1:-1:-1;21869:4:0;13168:1;21737:143;;;:::o;14168:45::-;;;;;;;;;;;;-1:-1:-1;;;;;14168:45:0;;:::o;22022:128::-;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;22109:34;22119:12;:10;:12::i;:::-;22133:9;22109;:34::i;:::-;22022:128;:::o;12107:97::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;12152:8;:12;;-1:-1:-1;;;;12152:12:0;-1:-1:-1;;;12152:12:0;;;12188:9;;;;12152:8;12188:9;12107:97::o;12210:101::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;12268:1;12257:12;;-1:-1:-1;;;;12257:12:0;;;12293:11;;;;12268:1;12293:11;12210:101::o;14585:49::-;;;;;;;;;;;;;;;:::o;17135:110::-;-1:-1:-1;;;;;17220:18:0;17194:7;17220:18;;;:9;:18;;;;;;;17135:110::o;8307:127::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;8401:1;8385:6;;8364:40;;-1:-1:-1;;;;;8385:6:0;;;;8364:40;;8401:1;;8364:40;8427:1;8410:19;;-1:-1:-1;;;;;;8410:19:0;;;8307:127::o;24170:1192::-;24252:6;24292:12;24278:11;:26;24270:57;;;;;-1:-1:-1;;;24270:57:0;;;;;;;;;;;;-1:-1:-1;;;24270:57:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;24360:23:0;;24338:19;24360:23;;;:14;:23;;;;;;;;24397:17;24393:56;;24437:1;24430:8;;;;;24393:56;-1:-1:-1;;;;;24506:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;24527:16:0;;24506:38;;;;;;;;;:48;;:63;-1:-1:-1;24502:153:0;;-1:-1:-1;;;;;24599:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;24620:16:0;;24599:38;;;;;;;;24635:1;24599:44;;24592:52;;:6;:52::i;:::-;24585:59;;;;;24502:153;-1:-1:-1;;;;;24713:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;24709:86:0;;;24783:1;24776:8;;;;;24709:86;24805:12;-1:-1:-1;;24846:16:0;;24872:426;24887:5;24879:13;;:5;:13;;;24872:426;;;24950:1;24933:13;;;24932:19;;;24924:27;;24992:20;;:::i;:::-;-1:-1:-1;;;;;;25015:20:0;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;24992:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25061:27;;25057:231;;;25115:16;25122:2;:8;;;25115:6;:16::i;:::-;25108:23;;;;;;;;;25057:231;25156:12;;:26;;;-1:-1:-1;25152:136:0;;;25210:6;25202:14;;25152:136;;;25272:1;25263:6;:10;25255:18;;25152:136;24872:426;;;;;-1:-1:-1;;;;;25321:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;25314:41;;:6;:41::i;:::-;25307:48;24170:1192;-1:-1:-1;;;;;;24170:1192:0:o;15112:42::-;;;;;;;;;;;;;:::o;16276:83::-;16319:7;16345;:5;:7::i;:::-;16338:14;;16276:83;:::o;7724:71::-;7762:7;7784:6;-1:-1:-1;;;;;7784:6:0;7724:71;:::o;16562:87::-;16635:7;16628:14;;;;;;;;-1:-1:-1;;16628:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16603:13;;16628:14;;16635:7;;16628:14;;16635:7;16628:14;;;;;;;;;;;;;;;;;;;;;;;;21202:281;21313:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;21329:126;21338:12;:10;:12::i;:::-;21352:7;21361:93;21400:15;21361:93;;;;;;;;;;;;;;;;;:11;:25;21373:12;:10;:12::i;:::-;-1:-1:-1;;;;;21361:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;21361:25:0;;;:34;;;;;;;;;;;:93;;:38;:93;:::i;17504:183::-;17601:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;17617:42;17627:12;:10;:12::i;:::-;17641:9;17652:6;17617:9;:42::i;23521:227::-;-1:-1:-1;;;;;23626:23:0;;23586:6;23626:23;;;:14;:23;;;;;;;;23666:16;:75;;23740:1;23666:75;;;-1:-1:-1;;;;;23692:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;23713:16:0;;23692:38;;;;;;;;23728:1;23692:44;;23685:52;;:6;:52::i;:::-;23659:82;23521:227;-1:-1:-1;;;23521:227:0:o;13315:128::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13375:14:0;;13392:5;13375:14;;;:9;:14;;;;;;:22;;-1:-1:-1;;13375:22:0;;;13421:15;;;13392:5;13421:15;13315:128;:::o;22573:754::-;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;22720:23;14746:80;;;;;;;;;;;;;;;;;;;22800:5;22784:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22809:12;:10;:12::i;:::-;22831:4;22756:81;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22756:81:0;-1:-1:-1;;;;;22756:81:0;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22756:81:0;;;22746:92;;;;;;22720:118;;22848:18;14963:71;;;;;;;;;;;;;;;;;;;22879:57;;;;;;;;-1:-1:-1;;;;;22879:57:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;22879:57:0;;;;;22869:68;;;;;;-1:-1:-1;;;22974:57:0;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;22974:57:0;;;;;;22964:68;;;;;;;;;-1:-1:-1;23062:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22869:68;;-1:-1:-1;22964:68:0;;-1:-1:-1;;;23062:26:0;;;;;;;22879:57;-1:-1:-1;;23062:26:0;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;23062:26:0;;-1:-1:-1;;23062:26:0;;;-1:-1:-1;;;;;;;23106:23:0;;23098:53;;;;;-1:-1:-1;;;23098:53:0;;;;;;;;;;;;-1:-1:-1;;;23098:53:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;23178:17:0;;;;;;:6;:17;;;;;:19;;;;;;;;23169:28;;23161:54;;;;;-1:-1:-1;;;23161:54:0;;;;;;;;;;;;-1:-1:-1;;;23161:54:0;;;;;;;;;;;;;;;23240:6;23233:3;:13;;23225:47;;;;;-1:-1:-1;;;23225:47:0;;;;;;;;;;;;-1:-1:-1;;;23225:47:0;;;;;;;;;;;;;;;23289:31;23299:9;23310;23289;:31::i;:::-;23282:38;;;;13168:1;22573:754;;;;;;:::o;18945:301::-;19063:4;12046:8;;-1:-1:-1;;;12046:8:0;;;;:13;12038:41;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;-1:-1:-1;;;12038:41:0;;;;;;;;;;;;;;;13130:10;13120:21;;;;:9;:21;;;;;;;;13119:22;13111:47;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;-1:-1:-1;;;13111:47:0;;;;;;;;;;;;;;;19079:39;19088:12;:10;:12::i;:::-;19102:7;19111:6;19079:8;:39::i;:::-;19151:7;-1:-1:-1;;;;;19128:47:0;;19176:12;:10;:12::i;:::-;19190:6;19206:4;19213;19128:90;;;;;;;;;;;;;-1:-1:-1;;;;;19128:90:0;-1:-1:-1;;;;;19128:90:0;;;;;;;;;;;-1:-1:-1;;;;;19128:90:0;-1:-1:-1;;;;;19128:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;19128:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19128:90:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;19235:4:0;;18945:301;-1:-1:-1;;;;;;;18945:301:0:o;13186:123::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13244:14:0;;;;;;13261:4;13244:14;;;;;;;;:21;;-1:-1:-1;;13244:21:0;;;;;;;13289:13;;;13244:14;13289:13;13186:123;:::o;17981:134::-;-1:-1:-1;;;;;18081:18:0;;;18055:7;18081:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17981:134::o;14917:117::-;14963:71;;;;;;;;;;;;;;;;;;14917:117;:::o;14449:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8573:101::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;8641:28;8660:8;8641:18;:28::i;6469:90::-;6544:10;6469:90;:::o;25934:332::-;-1:-1:-1;;;;;26027:19:0;;26019:68;;;;-1:-1:-1;;;26019:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26105:21:0;;26097:68;;;;-1:-1:-1;;;26097:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26176:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;26227:32;;;;;;;;;;;;;;;;;25934:332;;;:::o;25368:560::-;-1:-1:-1;;;;;25465:20:0;;25457:70;;;;-1:-1:-1;;;25457:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25545:23:0;;25537:71;;;;-1:-1:-1;;;25537:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25639:68;25661:6;25639:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25639:17:0;;;;;;:9;:17;;;;;;;:68;;:21;:68;:::i;:::-;-1:-1:-1;;;;;25619:17:0;;;;;;;:9;:17;;;;;;;;:88;;;;25740:57;;;;;;;;;;-1:-1:-1;;;25740:57:0;;;;:20;;;;;;;;;;;:57;;25765:6;;25740:57;:24;:57;:::i;:::-;-1:-1:-1;;;;;25717:20:0;;;;;;;:9;:20;;;;;;;;;:80;;;;25812:35;;;;;;;25717:20;;25812:35;;;;;;;;;;;;;-1:-1:-1;;;;;25873:17:0;;;;;;;:9;:17;;;;;;;25892:20;;;;;;;;25858:63;;25873:17;;;;25892:20;25914:6;25858:14;:63::i;:::-;25368:560;;;:::o;2494:173::-;2580:7;2611:12;2603:6;;;;2595:29;;;;-1:-1:-1;;;2595:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2595:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2642:5:0;;;2494:173::o;1685:::-;1771:7;1798:5;;;1825:12;1817:6;;;;1809:29;;;;-1:-1:-1;;;1809:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1809:29:0;-1:-1:-1;1852:1:0;1685:173;-1:-1:-1;;;;1685:173:0:o;26272:404::-;-1:-1:-1;;;;;26347:21:0;;26339:67;;;;-1:-1:-1;;;26339:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26438:65;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26438:18:0;;-1:-1:-1;26438:18:0;;;:9;:18;;;;;;;;:65;;26461:6;;26438:65;:22;:65;:::i;:::-;-1:-1:-1;;;;;26417:18:0;;;;;;:9;:18;;;;;:86;26528:12;;:24;;26545:6;26528:24;:16;:24;:::i;:::-;26513:12;:39;26567:37;;;;;;;;26593:1;;-1:-1:-1;;;;;26567:37:0;;;;;;;;;;;;-1:-1:-1;;;;;26630:18:0;;;;;;;:9;:18;;;;;;26615:54;;26630:18;;26662:6;26615:14;:54::i;:::-;26272:404;;:::o;26682:369::-;-1:-1:-1;;;;;26784:20:0;;;26758:23;26784:20;;;:9;:20;;;;;;;;;;26841:9;:20;;;;;;26871;;;;:32;;;-1:-1:-1;;;;;;26871:32:0;;;;;;;26919:54;;26784:20;;;;;26841;;26871:32;;26784:20;;;26919:54;;26758:23;26919:54;26984:60;26999:15;27016:9;27027:16;26984:14;:60::i;:::-;26682:369;;;;:::o;28734:158::-;28784:6;-1:-1:-1;;;28806:1:0;:10;28802:58;;-1:-1:-1;;;28832:17:0;;28802:58;-1:-1:-1;28883:1:0;28734:158::o;28898:152::-;29009:9;28898:152;:::o;8767:211::-;-1:-1:-1;;;;;8836:22:0;;8828:73;;;;-1:-1:-1;;;8828:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8933:6;;;8912:38;;-1:-1:-1;;;;;8912:38:0;;;;8933:6;;;8912:38;;;8956:6;:17;;-1:-1:-1;;;;;;8956:17:0;-1:-1:-1;;;;;8956:17:0;;;;;;;;;;8767:211::o;27057:894::-;27162:6;-1:-1:-1;;;;;27152:16:0;:6;-1:-1:-1;;;;;27152:16:0;;;:30;;;;;27181:1;27172:6;:10;27152:30;27148:797;;;-1:-1:-1;;;;;27202:20:0;;;27198:362;;-1:-1:-1;;;;;27261:22:0;;27242:16;27261:22;;;:14;:22;;;;;;;;;27321:13;:60;;27380:1;27321:60;;;-1:-1:-1;;;;;27337:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;27357:13:0;;27337:34;;;;;;;;27369:1;27337:40;;27321:60;27301:80;;27399:17;27419:51;27433:6;27419:51;;;;;;;;;;;;;;;;;:9;:13;;:51;;;;;:::i;:::-;27399:71;;27488:57;27505:6;27513:9;27524;27535;27488:16;:57::i;:::-;27198:362;;;;-1:-1:-1;;;;;27578:20:0;;;27574:361;;-1:-1:-1;;;;;27637:22:0;;27618:16;27637:22;;;:14;:22;;;;;;;;;27697:13;:60;;27756:1;27697:60;;;-1:-1:-1;;;;;27713:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;27733:13:0;;27713:34;;;;;;;;27745:1;27713:40;;27697:60;27677:80;;27775:17;27795:50;27809:6;27795:50;;;;;;;;;;;;;;;;;:9;:13;;:50;;;;;:::i;:::-;27775:70;;27863:57;27880:6;27888:9;27899;27910;27863:16;:57::i;2102:128::-;2160:7;2182:43;2186:1;2189;2182:43;;;;;;;;;;;;;;;;;:3;:43::i;27957:600::-;28076:18;28097:56;28104:12;28097:56;;;;;;;;;;;;;;;;;:6;:56::i;:::-;28076:77;;28181:1;28166:12;:16;;;:85;;;;-1:-1:-1;;;;;;28186:22:0;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;28209:16:0;;28186:40;;;;;;;;;:50;:65;;;:50;;:65;28166:85;28162:324;;;-1:-1:-1;;;;;28265:22:0;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;28288:16:0;;28265:40;;;;;;;;28303:1;28265:46;:57;;;28162:324;;;28388:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28349:22:0;;-1:-1:-1;28349:22:0;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;28349:72:0;;;;;;;;;;;;;28433:25;;;:14;:25;;;;;;:44;;28461:16;;;28433:44;;;;;;;;;;28162:324;28499:51;;;;;;;;;;;;;;-1:-1:-1;;;;;28499:51:0;;;;;;;;;;;27957:600;;;;;:::o;28567:161::-;28645:6;28682:12;28675:5;28671:9;;28663:32;;;;-1:-1:-1;;;28663:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;28663:32:0;-1:-1:-1;28719:1:0;;28567:161;-1:-1:-1;;28567:161:0:o;13447:15605::-;;;;;;;;;;-1:-1:-1;13447:15605:0;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2013400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"allowance(address,address)": "1294",
								"approve(address,uint256)": "infinite",
								"approveAndCall(address,uint256,bytes)": "infinite",
								"balanceOf(address)": "1231",
								"burn(uint256)": "infinite",
								"checkpoints(address,uint32)": "2168",
								"decimals()": "1103",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1231",
								"freeze()": "infinite",
								"getCurrentVotes(address)": "2366",
								"getOwner()": "1162",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"lockUser(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1192",
								"numCheckpoints(address)": "1206",
								"owner()": "1149",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1089",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreeze()": "infinite",
								"unlockUser(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"ceil96(uint256)": "68",
								"getChainId()": "14",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "MSTORE"
								},
								{
									"begin": 11956,
									"end": 11957,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "DUP1"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "AND"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "SWAP1"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "SSTORE"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "POP"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "MLOAD"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "CODESIZE"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "SUB"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "DUP1"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "DUP4"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "CODECOPY"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "DUP2"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "DUP2"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "ADD"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "MLOAD"
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7561,
									"end": 7571,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "AND"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "JUMPDEST"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP1"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP4"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "AND"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP1"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP2"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "OR"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP3"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SSTORE"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "MLOAD"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP3"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP2"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "SWAP1"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "DUP3"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "SWAP1"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "DUP1"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "MLOAD"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "DUP1"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "DUP3"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "ADD"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "SWAP1"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "SWAP2"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "MSTORE"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "PUSH",
									"value": "18"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "DUP1"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "DUP3"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "MSTORE"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "PUSH",
									"value": "47697473686F636B2046696E616E636520546573746E65740000000000000000"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "SWAP1"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "SWAP3"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "ADD"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "SWAP2"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "DUP3"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "MSTORE"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "SWAP2"
								},
								{
									"begin": 15984,
									"end": 15989,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 15984,
									"end": 15989,
									"name": "SWAP2"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 15984,
									"end": 16018,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "DUP1"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "MLOAD"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "DUP1"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "DUP3"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "ADD"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "SWAP1"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "SWAP2"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "MSTORE"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "DUP1"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "DUP3"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E88EA88CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "DB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "SWAP1"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "SWAP3"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "ADD"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "SWAP2"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "DUP3"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "MSTORE"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "SWAP2"
								},
								{
									"begin": 16028,
									"end": 16035,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 16028,
									"end": 16035,
									"name": "SWAP2"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 16028,
									"end": 16045,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 16055,
									"end": 16064,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 16055,
									"end": 16069,
									"name": "DUP1"
								},
								{
									"begin": 16055,
									"end": 16069,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 16055,
									"end": 16069,
									"name": "AND"
								},
								{
									"begin": 16067,
									"end": 16069,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 16055,
									"end": 16069,
									"name": "OR"
								},
								{
									"begin": 16055,
									"end": 16069,
									"name": "SWAP1"
								},
								{
									"begin": 16055,
									"end": 16069,
									"name": "SSTORE"
								},
								{
									"begin": 16094,
									"end": 16105,
									"name": "PUSH",
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 16079,
									"end": 16091,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 16079,
									"end": 16105,
									"name": "DUP2"
								},
								{
									"begin": 16079,
									"end": 16105,
									"name": "SWAP1"
								},
								{
									"begin": 16079,
									"end": 16105,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "DUP3"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "AND"
								},
								{
									"begin": 16055,
									"end": 16064,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "DUP2"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "DUP2"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "MSTORE"
								},
								{
									"begin": 16115,
									"end": 16124,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "SWAP1"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "DUP2"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "MSTORE"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "DUP1"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "DUP4"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "KECCAK256"
								},
								{
									"begin": 16115,
									"end": 16148,
									"name": "DUP6"
								},
								{
									"begin": 16115,
									"end": 16148,
									"name": "SWAP1"
								},
								{
									"begin": 16115,
									"end": 16148,
									"name": "SSTORE"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "DUP1"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "MLOAD"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SWAP5"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "DUP6"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "MSTORE"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "MLOAD"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "SWAP3"
								},
								{
									"begin": 16115,
									"end": 16133,
									"name": "SWAP4"
								},
								{
									"begin": 16055,
									"end": 16064,
									"name": "SWAP2"
								},
								{
									"begin": 16055,
									"end": 16064,
									"name": "SWAP3"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SWAP3"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "DUP2"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SWAP1"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SUB"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SWAP1"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SWAP2"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "ADD"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "SWAP1"
								},
								{
									"begin": 16164,
									"end": 16207,
									"name": "LOG3"
								},
								{
									"begin": 15938,
									"end": 16214,
									"name": "POP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMP"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMPDEST"
								},
								{
									"begin": 6544,
									"end": 6554,
									"name": "CALLER"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMPDEST"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "SWAP1"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SLOAD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "AND"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ISZERO"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "MUL"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SUB"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "AND"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DIV"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "MSTORE"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "KECCAK256"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DIV"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "LT"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPI"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "MLOAD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "NOT"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "AND"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP4"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "OR"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP6"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SSTORE"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP6"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SSTORE"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ISZERO"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPI"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "GT"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ISZERO"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPI"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "MLOAD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SSTORE"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "POP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SWAP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP3"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "GT"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ISZERO"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPI"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP2"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "SSTORE"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "ADD"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMP"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "JUMPDEST"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "DUP1"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "CODECOPY"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 13447,
									"end": 29052,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820be94ca3c25b3d089930fb38dc9a9df5384deec74d8dcb8e846357d2c746ac4da64736f6c63430005110032",
									".code": [
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "MSTORE"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "POP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "LT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "SHR"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "CAE9CA51"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "D7972580"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "62A5AF3B"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "GT"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "EQ"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPI"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "REVERT"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMPDEST"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMPDEST"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP3"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP3"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP3"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP6"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "AND"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "ISZERO"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMPI"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP3"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP4"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "EXP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "NOT"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "AND"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMPDEST"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP3"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "RETURN"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "JUMPDEST"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "DUP1"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "DUP2"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "AND"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP1"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "ADD"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "JUMPDEST"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "DUP1"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "MLOAD"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP2"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "ISZERO"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "ISZERO"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "DUP3"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "MSTORE"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "MLOAD"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP1"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "DUP2"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP1"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SUB"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "ADD"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP1"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "RETURN"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "JUMPDEST"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "JUMPDEST"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "DUP1"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "MLOAD"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "SWAP2"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "DUP3"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "MSTORE"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "MLOAD"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "SWAP1"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "DUP2"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "SWAP1"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "SUB"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "ADD"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "SWAP1"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "RETURN"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "JUMPDEST"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "JUMPDEST"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "DUP1"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "DUP2"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "DUP2"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "AND"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "SWAP2"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "DUP2"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "ADD"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "SWAP1"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "SWAP2"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "AND"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "SWAP1"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "ADD"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "JUMPDEST"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "JUMPDEST"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "DUP1"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "MLOAD"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SWAP1"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SWAP3"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "AND"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "DUP3"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "MSTORE"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "MLOAD"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SWAP1"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "DUP2"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SWAP1"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SUB"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "ADD"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SWAP1"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "RETURN"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "JUMPDEST"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "DUP1"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "DUP2"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "AND"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "SWAP1"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "ADD"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "JUMPDEST"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "DUP1"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "JUMPDEST"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "DUP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "AND"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "JUMPDEST"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "DUP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP3"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "AND"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "DUP3"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "MLOAD"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SUB"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "ADD"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "RETURN"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "JUMPDEST"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "DUP1"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "AND"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "JUMPDEST"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "STOP"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMPDEST"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMPDEST"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "JUMPDEST"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "DUP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "AND"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "JUMPDEST"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "DUP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "MLOAD"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP3"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "AND"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "DUP3"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "MSTORE"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "MLOAD"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "DUP2"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SUB"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "ADD"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "RETURN"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "JUMPDEST"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "DUP1"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "AND"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "JUMPDEST"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "DUP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "DUP2"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "AND"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "ADD"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "JUMPDEST"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "DUP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "MLOAD"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP3"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "AND"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "DUP3"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "MSTORE"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "MLOAD"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "DUP2"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SUB"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "ADD"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP1"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "RETURN"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "JUMPDEST"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "DUP1"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "AND"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "JUMPDEST"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "JUMPDEST"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "JUMPDEST"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "DUP1"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "DUP2"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "AND"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "SWAP1"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "ADD"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "JUMPDEST"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "DUP1"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "DUP2"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "AND"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "SWAP1"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "ADD"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "JUMPDEST"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "DUP1"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "AND"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMPDEST"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "DUP1"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "AND"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "JUMPDEST"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "DUP1"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "DUP2"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "AND"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "SWAP1"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "DUP2"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "ADD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "SWAP1"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "DUP2"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "ADD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "SWAP1"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "DUP3"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "ADD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "AND"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "SWAP1"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "DUP2"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "ADD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "SWAP1"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "ADD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "JUMPDEST"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP3"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "AND"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP3"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP3"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DIV"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "MUL"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "MLOAD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "MSTORE"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP4"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP3"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP1"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP2"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "MSTORE"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "ADD"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP4"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP3"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMPDEST"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "DUP1"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "AND"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "JUMPDEST"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "DUP1"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "DUP2"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "DUP2"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "AND"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "SWAP2"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "ADD"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "AND"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "JUMPDEST"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "JUMPDEST"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "AND"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "ADD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "AND"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "JUMPDEST"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MLOAD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP4"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "AND"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP4"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MSTORE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP4"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "ADD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MSTORE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MLOAD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP3"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SUB"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "ADD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "RETURN"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMPDEST"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "DUP1"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "AND"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMPDEST"
										},
										{
											"begin": 16777,
											"end": 16782,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SLOAD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MLOAD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP9"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "AND"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ISZERO"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MUL"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP6"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "AND"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP5"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP5"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DIV"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP4"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP5"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DIV"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MUL"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MSTORE"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MSTORE"
										},
										{
											"begin": 16745,
											"end": 16758,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16745,
											"end": 16758,
											"name": "SWAP4"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP3"
										},
										{
											"begin": 16777,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16777,
											"end": 16782,
											"name": "SWAP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP4"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16777,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ISZERO"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMPI"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "LT"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMPI"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP4"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SLOAD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DIV"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MUL"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP4"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MSTORE"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMP"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMPDEST"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MSTORE"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "KECCAK256"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMPDEST"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SLOAD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "MSTORE"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP4"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "GT"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMPI"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SUB"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "AND"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "DUP3"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP2"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "JUMPDEST"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "POP"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "POP"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "POP"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "POP"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "POP"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16782,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16789,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "JUMPDEST"
										},
										{
											"begin": 18581,
											"end": 18585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 18597,
											"end": 18636,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 18606,
											"end": 18618,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 18606,
											"end": 18616,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 18606,
											"end": 18618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18606,
											"end": 18618,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 18606,
											"end": 18618,
											"name": "JUMPDEST"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "DUP5"
										},
										{
											"begin": 18629,
											"end": 18635,
											"name": "DUP5"
										},
										{
											"begin": 18597,
											"end": 18605,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 18597,
											"end": 18636,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18597,
											"end": 18636,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 18597,
											"end": 18636,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18653,
											"end": 18657,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "JUMPDEST"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP3"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "SWAP2"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "POP"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "POP"
										},
										{
											"begin": 18487,
											"end": 18664,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "JUMPDEST"
										},
										{
											"begin": 16920,
											"end": 16932,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16920,
											"end": 16932,
											"name": "SLOAD"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "SWAP1"
										},
										{
											"begin": 16848,
											"end": 16939,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "JUMPDEST"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "MLOAD"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "DUP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "DUP3"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "CODECOPY"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "ADD"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "POP"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "MLOAD"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "DUP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP2"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SUB"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "KECCAK256"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "DUP2"
										},
										{
											"begin": 14704,
											"end": 14826,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "JUMPDEST"
										},
										{
											"begin": 19670,
											"end": 19674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 19686,
											"end": 19722,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 19696,
											"end": 19702,
											"name": "DUP5"
										},
										{
											"begin": 19704,
											"end": 19713,
											"name": "DUP5"
										},
										{
											"begin": 19715,
											"end": 19721,
											"name": "DUP5"
										},
										{
											"begin": 19686,
											"end": 19695,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 19686,
											"end": 19722,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19686,
											"end": 19722,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 19686,
											"end": 19722,
											"name": "JUMPDEST"
										},
										{
											"begin": 19732,
											"end": 19747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19750,
											"end": 19762,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 19750,
											"end": 19760,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19750,
											"end": 19762,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19750,
											"end": 19762,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 19750,
											"end": 19762,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "DUP1"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "DUP8"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "AND"
										},
										{
											"begin": 19772,
											"end": 19796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "SWAP1"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "DUP2"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "MSTORE"
										},
										{
											"begin": 19799,
											"end": 19810,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "SWAP1"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "DUP2"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "MSTORE"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "DUP1"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "DUP4"
										},
										{
											"begin": 19799,
											"end": 19818,
											"name": "KECCAK256"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "SWAP4"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "DUP6"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "AND"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "DUP4"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "MSTORE"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "SWAP3"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "SWAP1"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "MSTORE"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "KECCAK256"
										},
										{
											"begin": 19799,
											"end": 19827,
											"name": "SLOAD"
										},
										{
											"begin": 19732,
											"end": 19762,
											"name": "SWAP1"
										},
										{
											"begin": 19732,
											"end": 19762,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 19841,
											"end": 19872,
											"name": "DUP2"
										},
										{
											"begin": 19841,
											"end": 19872,
											"name": "EQ"
										},
										{
											"begin": 19837,
											"end": 19995,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 19837,
											"end": 19995,
											"name": "JUMPI"
										},
										{
											"begin": 19888,
											"end": 19984,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 19897,
											"end": 19903,
											"name": "DUP7"
										},
										{
											"begin": 19905,
											"end": 19912,
											"name": "DUP4"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 19935,
											"end": 19941,
											"name": "DUP8"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "MLOAD"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "DUP1"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "ADD"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "MSTORE"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "DUP1"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "DUP2"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "MSTORE"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "ADD"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH data",
											"value": "5E83471B3A3D1FE92BFF19912BAB84DCC2C92190AF741E7C33D886D7EC91F5D1"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "SWAP2"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "CODECOPY"
										},
										{
											"begin": 19914,
											"end": 19930,
											"name": "DUP7"
										},
										{
											"begin": 19914,
											"end": 19930,
											"name": "SWAP2"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "SWAP1"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19914,
											"end": 19934,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "AND"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 19914,
											"end": 19983,
											"name": "JUMPDEST"
										},
										{
											"begin": 19888,
											"end": 19896,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 19888,
											"end": 19984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19888,
											"end": 19984,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 19888,
											"end": 19984,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 20011,
											"end": 20015,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20011,
											"end": 20015,
											"name": "SWAP6"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19553,
											"end": 20022,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "JUMPDEST"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "SLOAD"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "AND"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "SWAP1"
										},
										{
											"begin": 16420,
											"end": 16503,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 20473,
											"end": 20743,
											"name": "JUMPDEST"
										},
										{
											"begin": 20579,
											"end": 20583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 20595,
											"end": 20715,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 20604,
											"end": 20616,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 20604,
											"end": 20614,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 20604,
											"end": 20616,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20604,
											"end": 20616,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 20604,
											"end": 20616,
											"name": "JUMPDEST"
										},
										{
											"begin": 20618,
											"end": 20625,
											"name": "DUP5"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 20666,
											"end": 20676,
											"name": "DUP6"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "MLOAD"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "DUP1"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "ADD"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "MSTORE"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "DUP1"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "DUP2"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "MSTORE"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "ADD"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH data",
											"value": "AC444B4635A35929A68A5C8FA43076F8FD9D5DD9C52546538D69B2042F34C77"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "SWAP2"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "CODECOPY"
										},
										{
											"begin": 20627,
											"end": 20638,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20639,
											"end": 20651,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 20639,
											"end": 20649,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 20639,
											"end": 20651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20639,
											"end": 20651,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 20639,
											"end": 20651,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "SWAP1"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "DUP2"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "AND"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "DUP3"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "MSTORE"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "DUP1"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "DUP4"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "ADD"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "SWAP4"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "SWAP1"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "SWAP4"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "MSTORE"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "SWAP2"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "DUP3"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "SWAP1"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "DUP2"
										},
										{
											"begin": 20627,
											"end": 20652,
											"name": "KECCAK256"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "SWAP2"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "DUP14"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "AND"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "DUP2"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "MSTORE"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "SWAP3"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "MSTORE"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "SWAP1"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "KECCAK256"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "SLOAD"
										},
										{
											"begin": 20627,
											"end": 20661,
											"name": "SWAP2"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "SWAP1"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20627,
											"end": 20665,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "AND"
										},
										{
											"begin": 20627,
											"end": 20714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "JUMPDEST"
										},
										{
											"begin": 21809,
											"end": 21813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 21825,
											"end": 21852,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 21831,
											"end": 21843,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 21831,
											"end": 21841,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21831,
											"end": 21843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21831,
											"end": 21843,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 21831,
											"end": 21843,
											"name": "JUMPDEST"
										},
										{
											"begin": 21845,
											"end": 21851,
											"name": "DUP4"
										},
										{
											"begin": 21825,
											"end": 21830,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 21825,
											"end": 21852,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21825,
											"end": 21852,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 21825,
											"end": 21852,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21869,
											"end": 21873,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "JUMPDEST"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "SWAP2"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "SWAP1"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "POP"
										},
										{
											"begin": 21737,
											"end": 21880,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "JUMPDEST"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "MSTORE"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "KECCAK256"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "AND"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14168,
											"end": 14213,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "JUMPDEST"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 22109,
											"end": 22143,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 22119,
											"end": 22131,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 22119,
											"end": 22129,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 22119,
											"end": 22131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22119,
											"end": 22131,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 22119,
											"end": 22131,
											"name": "JUMPDEST"
										},
										{
											"begin": 22133,
											"end": 22142,
											"name": "DUP3"
										},
										{
											"begin": 22109,
											"end": 22118,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 22109,
											"end": 22143,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22109,
											"end": 22143,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 22109,
											"end": 22143,
											"name": "JUMPDEST"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "POP"
										},
										{
											"begin": 22022,
											"end": 22150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 12152,
											"end": 12160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "DUP1"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "OR"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "DUP2"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "SSTORE"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "MLOAD"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "PUSH",
											"value": "962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "SWAP2"
										},
										{
											"begin": 12152,
											"end": 12160,
											"name": "SWAP1"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "LOG1"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "DUP1"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "AND"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "DUP2"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "SSTORE"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "MLOAD"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "PUSH",
											"value": "F0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "SWAP2"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "SWAP1"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "LOG1"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "JUMPDEST"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "MSTORE"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "DUP2"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "MSTORE"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SWAP1"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "KECCAK256"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "SLOAD"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "AND"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "DUP2"
										},
										{
											"begin": 14585,
											"end": 14634,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "AND"
										},
										{
											"begin": 17194,
											"end": 17201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "SWAP1"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "DUP2"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "MSTORE"
										},
										{
											"begin": 17220,
											"end": 17229,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "MSTORE"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "SWAP1"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "KECCAK256"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "SLOAD"
										},
										{
											"begin": 17220,
											"end": 17238,
											"name": "SWAP1"
										},
										{
											"begin": 17135,
											"end": 17245,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "DUP1"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SLOAD"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP2"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "AND"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "DUP4"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "SWAP1"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "LOG3"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "DUP1"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "AND"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SWAP1"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SSTORE"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "JUMPDEST"
										},
										{
											"begin": 24252,
											"end": 24258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24292,
											"end": 24304,
											"name": "NUMBER"
										},
										{
											"begin": 24278,
											"end": 24289,
											"name": "DUP3"
										},
										{
											"begin": 24278,
											"end": 24304,
											"name": "LT"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "JUMPI"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "DUP1"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "DUP2"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "MSTORE"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "DUP3"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "ADD"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "MSTORE"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "DUP3"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "ADD"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "139BDD0819195D195C9B5A5B9959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "DUP3"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "ADD"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "MSTORE"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "SWAP1"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "MLOAD"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "SWAP1"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "DUP2"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "SWAP1"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "SUB"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "ADD"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "SWAP1"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "REVERT"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 24270,
											"end": 24327,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "DUP4"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "AND"
										},
										{
											"begin": 24338,
											"end": 24357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "SWAP1"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "DUP2"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "MSTORE"
										},
										{
											"begin": 24360,
											"end": 24374,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "MSTORE"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "SWAP1"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "KECCAK256"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "SLOAD"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24360,
											"end": 24383,
											"name": "AND"
										},
										{
											"begin": 24397,
											"end": 24414,
											"name": "DUP1"
										},
										{
											"begin": 24393,
											"end": 24449,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 24393,
											"end": 24449,
											"name": "JUMPI"
										},
										{
											"begin": 24437,
											"end": 24438,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24430,
											"end": 24438,
											"name": "SWAP2"
										},
										{
											"begin": 24430,
											"end": 24438,
											"name": "POP"
										},
										{
											"begin": 24430,
											"end": 24438,
											"name": "POP"
										},
										{
											"begin": 24430,
											"end": 24438,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24430,
											"end": 24438,
											"name": "JUMP"
										},
										{
											"begin": 24393,
											"end": 24449,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 24393,
											"end": 24449,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "DUP5"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "AND"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "SWAP1"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "DUP2"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "MSTORE"
										},
										{
											"begin": 24506,
											"end": 24517,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "SWAP1"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "DUP2"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "MSTORE"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "DUP1"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "DUP4"
										},
										{
											"begin": 24506,
											"end": 24526,
											"name": "KECCAK256"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24527,
											"end": 24543,
											"name": "DUP7"
										},
										{
											"begin": 24527,
											"end": 24543,
											"name": "ADD"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "DUP2"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "AND"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "DUP6"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "MSTORE"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "SWAP3"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "MSTORE"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "SWAP1"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "SWAP2"
										},
										{
											"begin": 24506,
											"end": 24544,
											"name": "KECCAK256"
										},
										{
											"begin": 24506,
											"end": 24554,
											"name": "SLOAD"
										},
										{
											"begin": 24506,
											"end": 24554,
											"name": "AND"
										},
										{
											"begin": 24506,
											"end": 24569,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24502,
											"end": 24655,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 24502,
											"end": 24655,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "DUP5"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "AND"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "SWAP1"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "DUP2"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "MSTORE"
										},
										{
											"begin": 24599,
											"end": 24610,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "SWAP1"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "DUP2"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "MSTORE"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "DUP1"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "DUP4"
										},
										{
											"begin": 24599,
											"end": 24619,
											"name": "KECCAK256"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24620,
											"end": 24636,
											"name": "DUP7"
										},
										{
											"begin": 24620,
											"end": 24636,
											"name": "ADD"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "AND"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "DUP5"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "MSTORE"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "SWAP1"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "SWAP2"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "MSTORE"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "SWAP1"
										},
										{
											"begin": 24599,
											"end": 24637,
											"name": "KECCAK256"
										},
										{
											"begin": 24635,
											"end": 24636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24599,
											"end": 24643,
											"name": "ADD"
										},
										{
											"begin": 24599,
											"end": 24643,
											"name": "SLOAD"
										},
										{
											"begin": 24592,
											"end": 24644,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 24592,
											"end": 24644,
											"name": "SWAP1"
										},
										{
											"begin": 24592,
											"end": 24598,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 24592,
											"end": 24644,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24592,
											"end": 24644,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 24592,
											"end": 24644,
											"name": "JUMPDEST"
										},
										{
											"begin": 24585,
											"end": 24644,
											"name": "SWAP2"
										},
										{
											"begin": 24585,
											"end": 24644,
											"name": "POP"
										},
										{
											"begin": 24585,
											"end": 24644,
											"name": "POP"
										},
										{
											"begin": 24585,
											"end": 24644,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24585,
											"end": 24644,
											"name": "JUMP"
										},
										{
											"begin": 24502,
											"end": 24655,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 24502,
											"end": 24655,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "DUP5"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "AND"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "SWAP1"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "DUP2"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "MSTORE"
										},
										{
											"begin": 24713,
											"end": 24724,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "SWAP1"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "DUP2"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "MSTORE"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "DUP1"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "DUP4"
										},
										{
											"begin": 24713,
											"end": 24733,
											"name": "KECCAK256"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "DUP4"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "DUP1"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "MSTORE"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "SWAP1"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "SWAP2"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "MSTORE"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "SWAP1"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "KECCAK256"
										},
										{
											"begin": 24713,
											"end": 24746,
											"name": "SLOAD"
										},
										{
											"begin": 24713,
											"end": 24736,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24713,
											"end": 24746,
											"name": "AND"
										},
										{
											"begin": 24713,
											"end": 24760,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24709,
											"end": 24795,
											"name": "ISZERO"
										},
										{
											"begin": 24709,
											"end": 24795,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 24709,
											"end": 24795,
											"name": "JUMPI"
										},
										{
											"begin": 24783,
											"end": 24784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24776,
											"end": 24784,
											"name": "SWAP2"
										},
										{
											"begin": 24776,
											"end": 24784,
											"name": "POP"
										},
										{
											"begin": 24776,
											"end": 24784,
											"name": "POP"
										},
										{
											"begin": 24776,
											"end": 24784,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 24776,
											"end": 24784,
											"name": "JUMP"
										},
										{
											"begin": 24709,
											"end": 24795,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 24709,
											"end": 24795,
											"name": "JUMPDEST"
										},
										{
											"begin": 24805,
											"end": 24817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 24846,
											"end": 24862,
											"name": "DUP3"
										},
										{
											"begin": 24846,
											"end": 24862,
											"name": "ADD"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "JUMPDEST"
										},
										{
											"begin": 24887,
											"end": 24892,
											"name": "DUP2"
										},
										{
											"begin": 24879,
											"end": 24892,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24879,
											"end": 24892,
											"name": "AND"
										},
										{
											"begin": 24879,
											"end": 24884,
											"name": "DUP2"
										},
										{
											"begin": 24879,
											"end": 24892,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24879,
											"end": 24892,
											"name": "AND"
										},
										{
											"begin": 24879,
											"end": 24892,
											"name": "GT"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "ISZERO"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "JUMPI"
										},
										{
											"begin": 24950,
											"end": 24951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24933,
											"end": 24946,
											"name": "DUP3"
										},
										{
											"begin": 24933,
											"end": 24946,
											"name": "DUP3"
										},
										{
											"begin": 24933,
											"end": 24946,
											"name": "SUB"
										},
										{
											"begin": 24932,
											"end": 24951,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24932,
											"end": 24951,
											"name": "AND"
										},
										{
											"begin": 24932,
											"end": 24951,
											"name": "DIV"
										},
										{
											"begin": 24924,
											"end": 24951,
											"name": "DUP2"
										},
										{
											"begin": 24924,
											"end": 24951,
											"name": "SUB"
										},
										{
											"begin": 24992,
											"end": 25012,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 24992,
											"end": 25012,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 24992,
											"end": 25012,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24992,
											"end": 25012,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 24992,
											"end": 25012,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "DUP8"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "AND"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "SWAP1"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "DUP2"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "MSTORE"
										},
										{
											"begin": 25015,
											"end": 25026,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "SWAP1"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "DUP2"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "MSTORE"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "DUP1"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "DUP4"
										},
										{
											"begin": 25015,
											"end": 25035,
											"name": "KECCAK256"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "DUP1"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "DUP7"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "AND"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "DUP6"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "MSTORE"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "DUP4"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "MSTORE"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "SWAP3"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "DUP2"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 25015,
											"end": 25043,
											"name": "KECCAK256"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP2"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "MLOAD"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP4"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "ADD"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP3"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "MSTORE"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SLOAD"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP4"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "AND"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP3"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "MSTORE"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP4"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "ADD"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SLOAD"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP2"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "DUP2"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "ADD"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP2"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP2"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "MSTORE"
										},
										{
											"begin": 24992,
											"end": 25043,
											"name": "SWAP1"
										},
										{
											"begin": 25061,
											"end": 25088,
											"name": "DUP8"
										},
										{
											"begin": 25061,
											"end": 25088,
											"name": "EQ"
										},
										{
											"begin": 25057,
											"end": 25288,
											"name": "ISZERO"
										},
										{
											"begin": 25057,
											"end": 25288,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 25057,
											"end": 25288,
											"name": "JUMPI"
										},
										{
											"begin": 25115,
											"end": 25131,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 25122,
											"end": 25124,
											"name": "DUP2"
										},
										{
											"begin": 25122,
											"end": 25130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25122,
											"end": 25130,
											"name": "ADD"
										},
										{
											"begin": 25122,
											"end": 25130,
											"name": "MLOAD"
										},
										{
											"begin": 25115,
											"end": 25121,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 25115,
											"end": 25131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25115,
											"end": 25131,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 25115,
											"end": 25131,
											"name": "JUMPDEST"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "SWAP6"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "POP"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "POP"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "POP"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "POP"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "POP"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "POP"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 25108,
											"end": 25131,
											"name": "JUMP"
										},
										{
											"begin": 25057,
											"end": 25288,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 25057,
											"end": 25288,
											"name": "JUMPDEST"
										},
										{
											"begin": 25156,
											"end": 25168,
											"name": "DUP1"
										},
										{
											"begin": 25156,
											"end": 25168,
											"name": "MLOAD"
										},
										{
											"begin": 25156,
											"end": 25182,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25156,
											"end": 25182,
											"name": "AND"
										},
										{
											"begin": 25156,
											"end": 25182,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "ISZERO"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "JUMPI"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "DUP2"
										},
										{
											"begin": 25202,
											"end": 25216,
											"name": "SWAP4"
										},
										{
											"begin": 25202,
											"end": 25216,
											"name": "POP"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "JUMP"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "JUMPDEST"
										},
										{
											"begin": 25272,
											"end": 25273,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25263,
											"end": 25269,
											"name": "DUP3"
										},
										{
											"begin": 25263,
											"end": 25273,
											"name": "SUB"
										},
										{
											"begin": 25255,
											"end": 25273,
											"name": "SWAP3"
										},
										{
											"begin": 25255,
											"end": 25273,
											"name": "POP"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 25152,
											"end": 25288,
											"name": "JUMPDEST"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "POP"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "POP"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "JUMP"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 24872,
											"end": 25298,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "DUP7"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "AND"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "SWAP1"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "DUP2"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "MSTORE"
										},
										{
											"begin": 25321,
											"end": 25332,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "SWAP1"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "DUP2"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "MSTORE"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "DUP1"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "DUP4"
										},
										{
											"begin": 25321,
											"end": 25341,
											"name": "KECCAK256"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "DUP7"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "AND"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "DUP5"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "MSTORE"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "SWAP1"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "SWAP2"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "MSTORE"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "SWAP1"
										},
										{
											"begin": 25321,
											"end": 25348,
											"name": "KECCAK256"
										},
										{
											"begin": 25321,
											"end": 25354,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25321,
											"end": 25354,
											"name": "ADD"
										},
										{
											"begin": 25321,
											"end": 25354,
											"name": "SLOAD"
										},
										{
											"begin": 25314,
											"end": 25355,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 25314,
											"end": 25355,
											"name": "SWAP1"
										},
										{
											"begin": 25314,
											"end": 25320,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 25314,
											"end": 25355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25314,
											"end": 25355,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 25314,
											"end": 25355,
											"name": "JUMPDEST"
										},
										{
											"begin": 25307,
											"end": 25355,
											"name": "SWAP7"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24170,
											"end": 25362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "JUMPDEST"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "MSTORE"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "SWAP1"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "DUP2"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "MSTORE"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "SWAP1"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "KECCAK256"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "SLOAD"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "DUP2"
										},
										{
											"begin": 15112,
											"end": 15154,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "JUMPDEST"
										},
										{
											"begin": 16319,
											"end": 16326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16345,
											"end": 16352,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 16345,
											"end": 16350,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 16345,
											"end": 16352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16345,
											"end": 16352,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 16345,
											"end": 16352,
											"name": "JUMPDEST"
										},
										{
											"begin": 16338,
											"end": 16352,
											"name": "SWAP1"
										},
										{
											"begin": 16338,
											"end": 16352,
											"name": "POP"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "SWAP1"
										},
										{
											"begin": 16276,
											"end": 16359,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "AND"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 16562,
											"end": 16649,
											"name": "JUMPDEST"
										},
										{
											"begin": 16635,
											"end": 16642,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SLOAD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP9"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "AND"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ISZERO"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MUL"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP6"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "AND"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP5"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP5"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DIV"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP4"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP5"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DIV"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MUL"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP3"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16603,
											"end": 16616,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16603,
											"end": 16616,
											"name": "SWAP4"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP3"
										},
										{
											"begin": 16635,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16635,
											"end": 16642,
											"name": "SWAP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP4"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16635,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ISZERO"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "JUMPI"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "LT"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "JUMPI"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP4"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SLOAD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DIV"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MUL"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "DUP4"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "SWAP2"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "JUMP"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 21202,
											"end": 21483,
											"name": "JUMPDEST"
										},
										{
											"begin": 21313,
											"end": 21317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 21329,
											"end": 21455,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 21338,
											"end": 21350,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 21338,
											"end": 21348,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21338,
											"end": 21350,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21338,
											"end": 21350,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 21338,
											"end": 21350,
											"name": "JUMPDEST"
										},
										{
											"begin": 21352,
											"end": 21359,
											"name": "DUP5"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 21400,
											"end": 21415,
											"name": "DUP6"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "MLOAD"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "DUP1"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "ADD"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "MSTORE"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "DUP1"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "DUP2"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "MSTORE"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "ADD"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH data",
											"value": "42D9A8E134AF3312DAACAC2D2003D2E3A900F5F05EB0DE35B651F1E9CE1C4E5B"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "SWAP2"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "CODECOPY"
										},
										{
											"begin": 21361,
											"end": 21372,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21373,
											"end": 21385,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 21373,
											"end": 21383,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 21373,
											"end": 21385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21373,
											"end": 21385,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 21373,
											"end": 21385,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "SWAP1"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "DUP2"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "AND"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "DUP3"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "MSTORE"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "DUP1"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "DUP4"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "ADD"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "SWAP4"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "SWAP1"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "SWAP4"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "MSTORE"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "SWAP2"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "DUP3"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "SWAP1"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "DUP2"
										},
										{
											"begin": 21361,
											"end": 21386,
											"name": "KECCAK256"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "SWAP2"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "DUP14"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "AND"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "DUP2"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "MSTORE"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "SWAP3"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "MSTORE"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "SWAP1"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "KECCAK256"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "SLOAD"
										},
										{
											"begin": 21361,
											"end": 21395,
											"name": "SWAP2"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "SWAP1"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21361,
											"end": 21399,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "AND"
										},
										{
											"begin": 21361,
											"end": 21454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 17504,
											"end": 17687,
											"name": "JUMPDEST"
										},
										{
											"begin": 17601,
											"end": 17605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 17617,
											"end": 17659,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 17627,
											"end": 17639,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 17627,
											"end": 17637,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 17627,
											"end": 17639,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17627,
											"end": 17639,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 17627,
											"end": 17639,
											"name": "JUMPDEST"
										},
										{
											"begin": 17641,
											"end": 17650,
											"name": "DUP5"
										},
										{
											"begin": 17652,
											"end": 17658,
											"name": "DUP5"
										},
										{
											"begin": 17617,
											"end": 17626,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 17617,
											"end": 17659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "DUP2"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "AND"
										},
										{
											"begin": 23586,
											"end": 23592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "SWAP1"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "DUP2"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "MSTORE"
										},
										{
											"begin": 23626,
											"end": 23640,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "MSTORE"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "DUP2"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "KECCAK256"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "SLOAD"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "AND"
										},
										{
											"begin": 23666,
											"end": 23682,
											"name": "DUP1"
										},
										{
											"begin": 23666,
											"end": 23741,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 23666,
											"end": 23741,
											"name": "JUMPI"
										},
										{
											"begin": 23740,
											"end": 23741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23666,
											"end": 23741,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 23666,
											"end": 23741,
											"name": "JUMP"
										},
										{
											"begin": 23666,
											"end": 23741,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 23666,
											"end": 23741,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "DUP4"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "AND"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "SWAP1"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "DUP2"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "MSTORE"
										},
										{
											"begin": 23692,
											"end": 23703,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "SWAP1"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "DUP2"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "MSTORE"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "DUP1"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "DUP4"
										},
										{
											"begin": 23692,
											"end": 23712,
											"name": "KECCAK256"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23713,
											"end": 23729,
											"name": "DUP7"
										},
										{
											"begin": 23713,
											"end": 23729,
											"name": "ADD"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "AND"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "DUP5"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "MSTORE"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "SWAP1"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "SWAP2"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "MSTORE"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "SWAP1"
										},
										{
											"begin": 23692,
											"end": 23730,
											"name": "KECCAK256"
										},
										{
											"begin": 23728,
											"end": 23729,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23692,
											"end": 23736,
											"name": "ADD"
										},
										{
											"begin": 23692,
											"end": 23736,
											"name": "SLOAD"
										},
										{
											"begin": 23685,
											"end": 23737,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 23685,
											"end": 23737,
											"name": "SWAP1"
										},
										{
											"begin": 23685,
											"end": 23691,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 23685,
											"end": 23737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23685,
											"end": 23737,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 23685,
											"end": 23737,
											"name": "JUMPDEST"
										},
										{
											"begin": 23659,
											"end": 23741,
											"name": "SWAP4"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23521,
											"end": 23748,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "AND"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "MSTORE"
										},
										{
											"begin": 13375,
											"end": 13384,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "MSTORE"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP1"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP3"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "KECCAK256"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "DUP1"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SWAP1"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SSTORE"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "MLOAD"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "PUSH",
											"value": "687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "SWAP2"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "SWAP1"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "LOG2"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "POP"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "JUMPDEST"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 22720,
											"end": 22743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "MLOAD"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "DUP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "DUP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP2"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "CODECOPY"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "ADD"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "POP"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "MLOAD"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "DUP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP2"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SUB"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "SWAP1"
										},
										{
											"begin": 14746,
											"end": 14826,
											"name": "KECCAK256"
										},
										{
											"begin": 22800,
											"end": 22805,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MLOAD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP3"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SLOAD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "AND"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "ISZERO"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MUL"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SUB"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "AND"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DIV"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "ISZERO"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMPI"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "LT"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMPI"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP4"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SLOAD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DIV"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MUL"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP4"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MSTORE"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP3"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "ADD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMP"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMPDEST"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP3"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "ADD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MSTORE"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "KECCAK256"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMPDEST"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SLOAD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MSTORE"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "ADD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "ADD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP4"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "GT"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMPI"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "JUMPDEST"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "POP"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "POP"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "POP"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "POP"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "MLOAD"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "DUP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP2"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SUB"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "SWAP1"
										},
										{
											"begin": 22784,
											"end": 22807,
											"name": "KECCAK256"
										},
										{
											"begin": 22809,
											"end": 22821,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 22809,
											"end": 22819,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 22809,
											"end": 22821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22809,
											"end": 22821,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 22809,
											"end": 22821,
											"name": "JUMPDEST"
										},
										{
											"begin": 22831,
											"end": 22835,
											"name": "ADDRESS"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MLOAD"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "ADD"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP1"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP6"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP2"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MSTORE"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "ADD"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP5"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP2"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MSTORE"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "ADD"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP4"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP2"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MSTORE"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "ADD"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "AND"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "DUP2"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MSTORE"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "ADD"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "SWAP5"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "POP"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "POP"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "POP"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "POP"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "POP"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "SWAP1"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22756,
											"end": 22837,
											"name": "MSTORE"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "DUP1"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "MLOAD"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "SWAP1"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "ADD"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "KECCAK256"
										},
										{
											"begin": 22720,
											"end": 22838,
											"name": "SWAP1"
										},
										{
											"begin": 22720,
											"end": 22838,
											"name": "POP"
										},
										{
											"begin": 22848,
											"end": 22866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "MLOAD"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SWAP2"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "CODECOPY"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "MLOAD"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SWAP2"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP3"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SWAP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SUB"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "ADD"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP3"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "KECCAK256"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP1"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP5"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "ADD"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "SWAP2"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "SWAP1"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "SWAP2"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP13"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "AND"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP4"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP4"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "ADD"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "MSTORE"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP4"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "ADD"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP12"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "SWAP1"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "MSTORE"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP1"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP5"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "ADD"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP12"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "SWAP1"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "MSTORE"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP3"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP5"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "ADD"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "DUP4"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "MSTORE"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "DUP1"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "MLOAD"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "SWAP1"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "DUP3"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "ADD"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP6"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "ADD"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "MSTORE"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "PUSH",
											"value": "C2"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP5"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "ADD"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP8"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "SWAP1"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "MSTORE"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "PUSH",
											"value": "E2"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP1"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP6"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "ADD"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP3"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "SWAP1"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "MSTORE"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP4"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP6"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "ADD"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP1"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "DUP6"
										},
										{
											"begin": 22974,
											"end": 23031,
											"name": "MSTORE"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "DUP2"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "MLOAD"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "SWAP2"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "DUP5"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "ADD"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "SWAP2"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "SWAP1"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "SWAP2"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP2"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP3"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MSTORE"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP7"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP7"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MSTORE"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP2"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MSTORE"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP13"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "AND"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP8"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MSTORE"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP7"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP12"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MSTORE"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP7"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP11"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MSTORE"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP4"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MLOAD"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "SWAP2"
										},
										{
											"begin": 22869,
											"end": 22937,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "SWAP3"
										},
										{
											"begin": 22964,
											"end": 23032,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP3"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP4"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP4"
										},
										{
											"begin": 22879,
											"end": 22936,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP4"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP3"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP2"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SUB"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP2"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP1"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "DUP6"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "GAS"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "STATICCALL"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "ADD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "MLOAD"
										},
										{
											"begin": 23062,
											"end": 23088,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23106,
											"end": 23129,
											"name": "DUP2"
										},
										{
											"begin": 23106,
											"end": 23129,
											"name": "AND"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "JUMPI"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "DUP1"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "DUP2"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "MSTORE"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "DUP3"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "ADD"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "MSTORE"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "DUP3"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "ADD"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "496E76616C6964207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "DUP3"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "ADD"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "MSTORE"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "SWAP1"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "MLOAD"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "SWAP1"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "DUP2"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "SWAP1"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "SUB"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "ADD"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "SWAP1"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "REVERT"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 23098,
											"end": 23151,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "DUP2"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "AND"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "SWAP1"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "DUP2"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "MSTORE"
										},
										{
											"begin": 23178,
											"end": 23184,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "MSTORE"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "SWAP1"
										},
										{
											"begin": 23178,
											"end": 23195,
											"name": "KECCAK256"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "DUP1"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "SLOAD"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "DUP2"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "ADD"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "SWAP1"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "SWAP2"
										},
										{
											"begin": 23178,
											"end": 23197,
											"name": "SSTORE"
										},
										{
											"begin": 23169,
											"end": 23197,
											"name": "DUP10"
										},
										{
											"begin": 23169,
											"end": 23197,
											"name": "EQ"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "JUMPI"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "DUP1"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "DUP2"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "MSTORE"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "DUP3"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "ADD"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "MSTORE"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "DUP3"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "ADD"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "496E76616C6964206E6F6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "DUP3"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "ADD"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "MSTORE"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "SWAP1"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "MLOAD"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "SWAP1"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "DUP2"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "SWAP1"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "SUB"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "ADD"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "SWAP1"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "REVERT"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 23161,
											"end": 23215,
											"name": "JUMPDEST"
										},
										{
											"begin": 23240,
											"end": 23246,
											"name": "DUP8"
										},
										{
											"begin": 23233,
											"end": 23236,
											"name": "TIMESTAMP"
										},
										{
											"begin": 23233,
											"end": 23246,
											"name": "GT"
										},
										{
											"begin": 23233,
											"end": 23246,
											"name": "ISZERO"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "JUMPI"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "DUP1"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "DUP2"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "MSTORE"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "DUP3"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "ADD"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "MSTORE"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "DUP3"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "ADD"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151A19481CDA59DB985D1D5C9948195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "DUP3"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "ADD"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "MSTORE"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "SWAP1"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "MLOAD"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "SWAP1"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "DUP2"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "SWAP1"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "SUB"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "ADD"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "SWAP1"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "REVERT"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 23225,
											"end": 23272,
											"name": "JUMPDEST"
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 23299,
											"end": 23308,
											"name": "DUP2"
										},
										{
											"begin": 23310,
											"end": 23319,
											"name": "DUP12"
										},
										{
											"begin": 23289,
											"end": 23298,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "JUMPDEST"
										},
										{
											"begin": 23282,
											"end": 23320,
											"name": "POP"
										},
										{
											"begin": 23282,
											"end": 23320,
											"name": "POP"
										},
										{
											"begin": 23282,
											"end": 23320,
											"name": "POP"
										},
										{
											"begin": 23282,
											"end": 23320,
											"name": "POP"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "JUMPDEST"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "POP"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "POP"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "POP"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "POP"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "POP"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "POP"
										},
										{
											"begin": 22573,
											"end": 23327,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "JUMPDEST"
										},
										{
											"begin": 19063,
											"end": 19067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DUP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "SWAP1"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "DIV"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12046,
											"end": 12054,
											"name": "AND"
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "ISZERO"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPI"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "151BDAD95B881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP3"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MSTORE"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "MLOAD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "DUP2"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SUB"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "REVERT"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 12038,
											"end": 12079,
											"name": "JUMPDEST"
										},
										{
											"begin": 13130,
											"end": 13140,
											"name": "CALLER"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "DUP2"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "MSTORE"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "KECCAK256"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "SLOAD"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13120,
											"end": 13141,
											"name": "AND"
										},
										{
											"begin": 13119,
											"end": 13141,
											"name": "ISZERO"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPI"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "213637B1B5B2B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "REVERT"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 13111,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 19079,
											"end": 19118,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 19088,
											"end": 19100,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 19088,
											"end": 19098,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19088,
											"end": 19100,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19088,
											"end": 19100,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 19088,
											"end": 19100,
											"name": "JUMPDEST"
										},
										{
											"begin": 19102,
											"end": 19109,
											"name": "DUP6"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "DUP6"
										},
										{
											"begin": 19079,
											"end": 19087,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 19079,
											"end": 19118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19079,
											"end": 19118,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 19079,
											"end": 19118,
											"name": "JUMPDEST"
										},
										{
											"begin": 19151,
											"end": 19158,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19175,
											"name": "AND"
										},
										{
											"begin": 19128,
											"end": 19175,
											"name": "PUSH",
											"value": "8F4FFCB1"
										},
										{
											"begin": 19176,
											"end": 19188,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 19176,
											"end": 19186,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 19176,
											"end": 19188,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19176,
											"end": 19188,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 19176,
											"end": 19188,
											"name": "JUMPDEST"
										},
										{
											"begin": 19190,
											"end": 19196,
											"name": "DUP6"
										},
										{
											"begin": 19206,
											"end": 19210,
											"name": "ADDRESS"
										},
										{
											"begin": 19213,
											"end": 19217,
											"name": "DUP7"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MLOAD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP6"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SHL"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP5"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP3"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP3"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP4"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MLOAD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MLOAD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP4"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ISZERO"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "JUMPI"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP3"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MLOAD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP4"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "EXP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "NOT"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "AND"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MSTORE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ADD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "JUMPDEST"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SWAP6"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "MLOAD"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP4"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "SUB"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP2"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP8"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "DUP1"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "POP"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "GAS"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "CALL"
										},
										{
											"begin": 19128,
											"end": 19218,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19235,
											"end": 19239,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19235,
											"end": 19239,
											"name": "SWAP8"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18945,
											"end": 19246,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "MSTORE"
										},
										{
											"begin": 13261,
											"end": 13265,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "SWAP1"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "MSTORE"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP1"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP4"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "KECCAK256"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "DUP1"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP1"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP3"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "OR"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP1"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP2"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SSTORE"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "MLOAD"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "PUSH",
											"value": "169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "SWAP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "SWAP1"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "LOG2"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "POP"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "SWAP2"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "DUP3"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "AND"
										},
										{
											"begin": 18055,
											"end": 18062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "SWAP1"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "DUP2"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "MSTORE"
										},
										{
											"begin": 18081,
											"end": 18092,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "SWAP1"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "DUP2"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "MSTORE"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "DUP1"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "DUP4"
										},
										{
											"begin": 18081,
											"end": 18099,
											"name": "KECCAK256"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP4"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP1"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP5"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "AND"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "DUP3"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "MSTORE"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP2"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP1"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP2"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "MSTORE"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "KECCAK256"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SLOAD"
										},
										{
											"begin": 18081,
											"end": 18108,
											"name": "SWAP1"
										},
										{
											"begin": 17981,
											"end": 18115,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "JUMPDEST"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "MLOAD"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP3"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "CODECOPY"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "ADD"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SWAP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "POP"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "MLOAD"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "DUP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SWAP2"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SUB"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "SWAP1"
										},
										{
											"begin": 14963,
											"end": 15034,
											"name": "KECCAK256"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "DUP2"
										},
										{
											"begin": 14917,
											"end": 15034,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "JUMPDEST"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MSTORE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP3"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP4"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MSTORE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP5"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "KECCAK256"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MSTORE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP3"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "MSTORE"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "KECCAK256"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SLOAD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "ADD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SLOAD"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP2"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "AND"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "SWAP1"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "DUP3"
										},
										{
											"begin": 14449,
											"end": 14519,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 8660,
											"end": 8668,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "JUMPDEST"
										},
										{
											"begin": 6544,
											"end": 6554,
											"name": "CALLER"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25934,
											"end": 26266,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 25934,
											"end": 26266,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26027,
											"end": 26046,
											"name": "DUP4"
										},
										{
											"begin": 26027,
											"end": 26046,
											"name": "AND"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "JUMPI"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP2"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "MSTORE"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "ADD"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP1"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP1"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "ADD"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP3"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP2"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "SUB"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP3"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "MSTORE"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP2"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "MSTORE"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "ADD"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP1"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH data",
											"value": "36CE88BA958E2B0D44CDA35791945F0A281D35D6E350D9C9F8EEDD2B2359D57D"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "SWAP2"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "CODECOPY"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "ADD"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "SWAP2"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "POP"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "POP"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "MLOAD"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "DUP1"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "SWAP2"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "SUB"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "SWAP1"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "REVERT"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 26019,
											"end": 26087,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26105,
											"end": 26126,
											"name": "DUP3"
										},
										{
											"begin": 26105,
											"end": 26126,
											"name": "AND"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "JUMPI"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP2"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "MSTORE"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "ADD"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP1"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP1"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "ADD"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP3"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP2"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "SUB"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP3"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "MSTORE"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP2"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "MSTORE"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "ADD"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP1"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH data",
											"value": "2CD250AFF92BA04A009213390107E53E83F14A04575E595AF9230B9654AFED9"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "SWAP2"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "CODECOPY"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "ADD"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "SWAP2"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "POP"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "POP"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "MLOAD"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "DUP1"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "SWAP2"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "SUB"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "SWAP1"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "REVERT"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 26097,
											"end": 26165,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP1"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP5"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "AND"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP2"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP2"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "MSTORE"
										},
										{
											"begin": 26176,
											"end": 26187,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "SWAP1"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP2"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "MSTORE"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP1"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "DUP4"
										},
										{
											"begin": 26176,
											"end": 26194,
											"name": "KECCAK256"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "SWAP5"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "DUP8"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "AND"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "DUP1"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "DUP5"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "MSTORE"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "SWAP5"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "DUP3"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "MSTORE"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "SWAP2"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "DUP3"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "SWAP1"
										},
										{
											"begin": 26176,
											"end": 26203,
											"name": "KECCAK256"
										},
										{
											"begin": 26176,
											"end": 26212,
											"name": "DUP6"
										},
										{
											"begin": 26176,
											"end": 26212,
											"name": "SWAP1"
										},
										{
											"begin": 26176,
											"end": 26212,
											"name": "SSTORE"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "DUP2"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "MLOAD"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "DUP6"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "DUP2"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "MSTORE"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SWAP2"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "MLOAD"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SWAP3"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "DUP2"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SWAP1"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SUB"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SWAP1"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SWAP2"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "ADD"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "SWAP1"
										},
										{
											"begin": 26227,
											"end": 26259,
											"name": "LOG3"
										},
										{
											"begin": 25934,
											"end": 26266,
											"name": "POP"
										},
										{
											"begin": 25934,
											"end": 26266,
											"name": "POP"
										},
										{
											"begin": 25934,
											"end": 26266,
											"name": "POP"
										},
										{
											"begin": 25934,
											"end": 26266,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25368,
											"end": 25928,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 25368,
											"end": 25928,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25465,
											"end": 25485,
											"name": "DUP4"
										},
										{
											"begin": 25465,
											"end": 25485,
											"name": "AND"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "JUMPI"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP2"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "MSTORE"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "ADD"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP1"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP1"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "ADD"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP3"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP2"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "SUB"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP3"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "MSTORE"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP2"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "MSTORE"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "ADD"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP1"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH data",
											"value": "BD9517161462829BE5A3D25154AE5230E5AD2E2AAAB3C9BF15E6E48716B4A12E"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "SWAP2"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "CODECOPY"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "ADD"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "SWAP2"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "POP"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "POP"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "MLOAD"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "DUP1"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "SWAP2"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "SUB"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "SWAP1"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "REVERT"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 25457,
											"end": 25527,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25545,
											"end": 25568,
											"name": "DUP3"
										},
										{
											"begin": 25545,
											"end": 25568,
											"name": "AND"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "JUMPI"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP2"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "MSTORE"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "ADD"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP1"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP1"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "ADD"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP3"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP2"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "SUB"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP3"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "MSTORE"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP2"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "MSTORE"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "ADD"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP1"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH data",
											"value": "DEEA2FA463CDACA7BCC6C65F53B7AE24609806E88CA4FDB7ADE049DC06112288"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "SWAP2"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "CODECOPY"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "ADD"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "SWAP2"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "POP"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "POP"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "MLOAD"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "DUP1"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "SWAP2"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "SUB"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "SWAP1"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "REVERT"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 25537,
											"end": 25608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 25661,
											"end": 25667,
											"name": "DUP2"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "MLOAD"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "DUP1"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "ADD"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "MSTORE"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "DUP1"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "DUP2"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "MSTORE"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "ADD"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH data",
											"value": "3FC916DC37CF2CF07A856AD1473AD93B10F9A58E0AD4DC3C2FF0CEABBA196973"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "SWAP2"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "DUP7"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "AND"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "SWAP1"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "DUP2"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "MSTORE"
										},
										{
											"begin": 25639,
											"end": 25648,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "MSTORE"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "SWAP1"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "KECCAK256"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "SLOAD"
										},
										{
											"begin": 25639,
											"end": 25656,
											"name": "SWAP2"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "SWAP1"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25639,
											"end": 25660,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "AND"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 25639,
											"end": 25707,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP1"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP6"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "AND"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "SWAP1"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP2"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "MSTORE"
										},
										{
											"begin": 25619,
											"end": 25628,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP2"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP2"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "MSTORE"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP1"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "DUP5"
										},
										{
											"begin": 25619,
											"end": 25636,
											"name": "KECCAK256"
										},
										{
											"begin": 25619,
											"end": 25707,
											"name": "SWAP6"
										},
										{
											"begin": 25619,
											"end": 25707,
											"name": "SWAP1"
										},
										{
											"begin": 25619,
											"end": 25707,
											"name": "SWAP6"
										},
										{
											"begin": 25619,
											"end": 25707,
											"name": "SSTORE"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP5"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "MLOAD"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP1"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP7"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "ADD"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP7"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "MSTORE"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP2"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "5468652062616C616E6365206F766572666C6F7773"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP2"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "DUP4"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "ADD"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "MSTORE"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "SWAP4"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "DUP8"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "AND"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "DUP4"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "MSTORE"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "MSTORE"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "SWAP2"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "SWAP1"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "SWAP2"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "KECCAK256"
										},
										{
											"begin": 25740,
											"end": 25760,
											"name": "SLOAD"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "SWAP2"
										},
										{
											"begin": 25765,
											"end": 25771,
											"name": "DUP4"
										},
										{
											"begin": 25765,
											"end": 25771,
											"name": "SWAP1"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25740,
											"end": 25764,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "AND"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 25740,
											"end": 25797,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "DUP1"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "DUP5"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "AND"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "DUP2"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "DUP2"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "MSTORE"
										},
										{
											"begin": 25717,
											"end": 25726,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "SWAP1"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "DUP2"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "MSTORE"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "SWAP2"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "DUP3"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "SWAP1"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "KECCAK256"
										},
										{
											"begin": 25717,
											"end": 25797,
											"name": "SWAP5"
										},
										{
											"begin": 25717,
											"end": 25797,
											"name": "SWAP1"
										},
										{
											"begin": 25717,
											"end": 25797,
											"name": "SWAP5"
										},
										{
											"begin": 25717,
											"end": 25797,
											"name": "SSTORE"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "DUP1"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "MLOAD"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "DUP6"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "DUP2"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "MSTORE"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP1"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "MLOAD"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "SWAP2"
										},
										{
											"begin": 25717,
											"end": 25737,
											"name": "SWAP4"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP3"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "DUP8"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "AND"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP3"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP3"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP2"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "DUP3"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP1"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SUB"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "ADD"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "SWAP1"
										},
										{
											"begin": 25812,
											"end": 25847,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "DUP1"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "DUP5"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "AND"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "SWAP1"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "DUP2"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "MSTORE"
										},
										{
											"begin": 25873,
											"end": 25882,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "MSTORE"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "DUP1"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "DUP3"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "KECCAK256"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "SLOAD"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "DUP6"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "DUP5"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "AND"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "DUP4"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "MSTORE"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "SWAP2"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "KECCAK256"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "SLOAD"
										},
										{
											"begin": 25858,
											"end": 25921,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 25858,
											"end": 25921,
											"name": "SWAP3"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "SWAP2"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "DUP3"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "AND"
										},
										{
											"begin": 25873,
											"end": 25890,
											"name": "SWAP2"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "AND"
										},
										{
											"begin": 25914,
											"end": 25920,
											"name": "DUP4"
										},
										{
											"begin": 25858,
											"end": 25872,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 25858,
											"end": 25921,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25858,
											"end": 25921,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 25858,
											"end": 25921,
											"name": "JUMPDEST"
										},
										{
											"begin": 25368,
											"end": 25928,
											"name": "POP"
										},
										{
											"begin": 25368,
											"end": 25928,
											"name": "POP"
										},
										{
											"begin": 25368,
											"end": 25928,
											"name": "POP"
										},
										{
											"begin": 25368,
											"end": 25928,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2494,
											"end": 2667,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2494,
											"end": 2667,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "DUP2"
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP5"
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP5"
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "GT"
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "ISZERO"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "JUMPI"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP3"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SUB"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP3"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP4"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MLOAD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MLOAD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP4"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "AND"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ISZERO"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "JUMPI"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP3"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SUB"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MLOAD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP4"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SUB"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "EXP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SUB"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "NOT"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "AND"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "JUMPDEST"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP3"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "POP"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "MLOAD"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP2"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SUB"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "REVERT"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 2595,
											"end": 2624,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "SWAP1"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "SUB"
										},
										{
											"begin": 2642,
											"end": 2647,
											"name": "SWAP1"
										},
										{
											"begin": 2494,
											"end": 2667,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1685,
											"end": 1858,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 1685,
											"end": 1858,
											"name": "JUMPDEST"
										},
										{
											"begin": 1771,
											"end": 1778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1803,
											"name": "DUP4"
										},
										{
											"begin": 1798,
											"end": 1803,
											"name": "DUP4"
										},
										{
											"begin": 1798,
											"end": 1803,
											"name": "ADD"
										},
										{
											"begin": 1825,
											"end": 1837,
											"name": "DUP3"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP6"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "LT"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "ISZERO"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMPI"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP2"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MSTORE"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP3"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "ADD"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP2"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP2"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MSTORE"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MLOAD"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP5"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "ADD"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MSTORE"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "MLOAD"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP3"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP3"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP2"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "ADD"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP2"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP6"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "ADD"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP1"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "DUP4"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 1809,
											"end": 1838,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "SWAP5"
										},
										{
											"begin": 1685,
											"end": 1858,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1685,
											"end": 1858,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26272,
											"end": 26676,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 26272,
											"end": 26676,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26347,
											"end": 26368,
											"name": "DUP3"
										},
										{
											"begin": 26347,
											"end": 26368,
											"name": "AND"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "JUMPI"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP2"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "MSTORE"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "ADD"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP1"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP1"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "ADD"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP3"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP2"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "SUB"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP3"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "MSTORE"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP2"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "MSTORE"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "ADD"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP1"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH data",
											"value": "F5CEF2FE2A70CA222ED18C80624B418B6D950CFD5CB46A9F7C5AB6B4AB537CEE"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "SWAP2"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "CODECOPY"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "ADD"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "SWAP2"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "POP"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "POP"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "MLOAD"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "DUP1"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "SWAP2"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "SUB"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "SWAP1"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "REVERT"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 26339,
											"end": 26406,
											"name": "JUMPDEST"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP1"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "MLOAD"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP1"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP3"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "ADD"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP3"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "MSTORE"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP2"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "MSTORE"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "PUSH",
											"value": "546865206275726E20616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP1"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "DUP4"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "ADD"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "SWAP2"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "SWAP1"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "SWAP2"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "DUP6"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SWAP1"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "DUP2"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "MSTORE"
										},
										{
											"begin": 26438,
											"end": 26447,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SWAP1"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SWAP2"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "MSTORE"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SWAP2"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SWAP1"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SWAP2"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "KECCAK256"
										},
										{
											"begin": 26438,
											"end": 26456,
											"name": "SLOAD"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "SWAP2"
										},
										{
											"begin": 26461,
											"end": 26467,
											"name": "DUP4"
										},
										{
											"begin": 26461,
											"end": 26467,
											"name": "SWAP1"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26438,
											"end": 26460,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "AND"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 26438,
											"end": 26503,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "DUP4"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "AND"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "SWAP1"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "DUP2"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "MSTORE"
										},
										{
											"begin": 26417,
											"end": 26426,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "MSTORE"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "SWAP1"
										},
										{
											"begin": 26417,
											"end": 26435,
											"name": "KECCAK256"
										},
										{
											"begin": 26417,
											"end": 26503,
											"name": "SSTORE"
										},
										{
											"begin": 26528,
											"end": 26540,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26528,
											"end": 26540,
											"name": "SLOAD"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "SWAP1"
										},
										{
											"begin": 26545,
											"end": 26551,
											"name": "DUP3"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26528,
											"end": 26544,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "AND"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 26528,
											"end": 26552,
											"name": "JUMPDEST"
										},
										{
											"begin": 26513,
											"end": 26525,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26513,
											"end": 26552,
											"name": "SSTORE"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "DUP1"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "MLOAD"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "DUP3"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "DUP2"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "MSTORE"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "SWAP1"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "MLOAD"
										},
										{
											"begin": 26593,
											"end": 26594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26593,
											"end": 26594,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "DUP6"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "AND"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "SWAP2"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "SWAP2"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "DUP2"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "SWAP1"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "SUB"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "ADD"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "SWAP1"
										},
										{
											"begin": 26567,
											"end": 26604,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "DUP1"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "DUP4"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "AND"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "SWAP1"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "DUP2"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "MSTORE"
										},
										{
											"begin": 26630,
											"end": 26639,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "MSTORE"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "DUP2"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "KECCAK256"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "SLOAD"
										},
										{
											"begin": 26615,
											"end": 26669,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 26615,
											"end": 26669,
											"name": "SWAP3"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "AND"
										},
										{
											"begin": 26630,
											"end": 26648,
											"name": "SWAP1"
										},
										{
											"begin": 26662,
											"end": 26668,
											"name": "DUP4"
										},
										{
											"begin": 26615,
											"end": 26629,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 26615,
											"end": 26669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26615,
											"end": 26669,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 26615,
											"end": 26669,
											"name": "JUMPDEST"
										},
										{
											"begin": 26272,
											"end": 26676,
											"name": "POP"
										},
										{
											"begin": 26272,
											"end": 26676,
											"name": "POP"
										},
										{
											"begin": 26272,
											"end": 26676,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP1"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP4"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "AND"
										},
										{
											"begin": 26758,
											"end": 26781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP2"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP2"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "MSTORE"
										},
										{
											"begin": 26784,
											"end": 26793,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP2"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP2"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "MSTORE"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP1"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP5"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "KECCAK256"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP1"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SLOAD"
										},
										{
											"begin": 26841,
											"end": 26850,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "DUP5"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "MSTORE"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "DUP3"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "DUP7"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "KECCAK256"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "SLOAD"
										},
										{
											"begin": 26871,
											"end": 26891,
											"name": "SWAP5"
										},
										{
											"begin": 26871,
											"end": 26891,
											"name": "SWAP1"
										},
										{
											"begin": 26871,
											"end": 26891,
											"name": "SWAP4"
										},
										{
											"begin": 26871,
											"end": 26891,
											"name": "MSTORE"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "DUP8"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "DUP8"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "DUP5"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "AND"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "DUP2"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "OR"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "SWAP1"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "SWAP2"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "SSTORE"
										},
										{
											"begin": 26919,
											"end": 26973,
											"name": "SWAP1"
										},
										{
											"begin": 26919,
											"end": 26973,
											"name": "MLOAD"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SWAP2"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SWAP1"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SWAP6"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "AND"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SWAP5"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "SWAP2"
										},
										{
											"begin": 26841,
											"end": 26861,
											"name": "SWAP4"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "SWAP2"
										},
										{
											"begin": 26871,
											"end": 26903,
											"name": "SWAP3"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "DUP6"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SWAP3"
										},
										{
											"begin": 26784,
											"end": 26804,
											"name": "SWAP2"
										},
										{
											"begin": 26919,
											"end": 26973,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 26919,
											"end": 26973,
											"name": "SWAP2"
										},
										{
											"begin": 26758,
											"end": 26781,
											"name": "SWAP1"
										},
										{
											"begin": 26919,
											"end": 26973,
											"name": "LOG4"
										},
										{
											"begin": 26984,
											"end": 27044,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 26999,
											"end": 27014,
											"name": "DUP3"
										},
										{
											"begin": 27016,
											"end": 27025,
											"name": "DUP5"
										},
										{
											"begin": 27027,
											"end": 27043,
											"name": "DUP4"
										},
										{
											"begin": 26984,
											"end": 26998,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 26984,
											"end": 27044,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26984,
											"end": 27044,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 26984,
											"end": 27044,
											"name": "JUMPDEST"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "POP"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "POP"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "POP"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "POP"
										},
										{
											"begin": 26682,
											"end": 27051,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28734,
											"end": 28892,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 28734,
											"end": 28892,
											"name": "JUMPDEST"
										},
										{
											"begin": 28784,
											"end": 28790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 28806,
											"end": 28807,
											"name": "DUP3"
										},
										{
											"begin": 28806,
											"end": 28816,
											"name": "LT"
										},
										{
											"begin": 28802,
											"end": 28860,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 28802,
											"end": 28860,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28832,
											"end": 28849,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 28832,
											"end": 28849,
											"name": "JUMP"
										},
										{
											"begin": 28802,
											"end": 28860,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 28802,
											"end": 28860,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28883,
											"end": 28884,
											"name": "SWAP1"
										},
										{
											"begin": 28734,
											"end": 28892,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28898,
											"end": 29050,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 28898,
											"end": 29050,
											"name": "JUMPDEST"
										},
										{
											"begin": 29009,
											"end": 29018,
											"name": "CHAINID"
										},
										{
											"begin": 28898,
											"end": 29050,
											"name": "SWAP1"
										},
										{
											"begin": 28898,
											"end": 29050,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8836,
											"end": 8858,
											"name": "DUP2"
										},
										{
											"begin": 8836,
											"end": 8858,
											"name": "AND"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "JUMPI"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP3"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SUB"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP3"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "CODECOPY"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SUB"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "REVERT"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "JUMPDEST"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "DUP1"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SLOAD"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "DUP6"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "AND"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "SWAP4"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SWAP3"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "AND"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "LOG3"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "DUP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP3"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP3"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP2"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP2"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "OR"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SSTORE"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 27057,
											"end": 27951,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 27057,
											"end": 27951,
											"name": "JUMPDEST"
										},
										{
											"begin": 27162,
											"end": 27168,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27152,
											"end": 27168,
											"name": "AND"
										},
										{
											"begin": 27152,
											"end": 27158,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27152,
											"end": 27168,
											"name": "AND"
										},
										{
											"begin": 27152,
											"end": 27168,
											"name": "EQ"
										},
										{
											"begin": 27152,
											"end": 27168,
											"name": "ISZERO"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "DUP1"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "ISZERO"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "JUMPI"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "POP"
										},
										{
											"begin": 27181,
											"end": 27182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27178,
											"name": "DUP2"
										},
										{
											"begin": 27172,
											"end": 27182,
											"name": "GT"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 27152,
											"end": 27182,
											"name": "JUMPDEST"
										},
										{
											"begin": 27148,
											"end": 27945,
											"name": "ISZERO"
										},
										{
											"begin": 27148,
											"end": 27945,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 27148,
											"end": 27945,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27202,
											"end": 27222,
											"name": "DUP4"
										},
										{
											"begin": 27202,
											"end": 27222,
											"name": "AND"
										},
										{
											"begin": 27202,
											"end": 27222,
											"name": "ISZERO"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "DUP4"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "AND"
										},
										{
											"begin": 27242,
											"end": 27258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "SWAP1"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "DUP2"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "MSTORE"
										},
										{
											"begin": 27261,
											"end": 27275,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "MSTORE"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "DUP2"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "KECCAK256"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "SLOAD"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "AND"
										},
										{
											"begin": 27261,
											"end": 27283,
											"name": "SWAP1"
										},
										{
											"begin": 27321,
											"end": 27334,
											"name": "DUP2"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "JUMPI"
										},
										{
											"begin": 27380,
											"end": 27381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "JUMP"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "DUP6"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "AND"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "SWAP1"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "DUP2"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "MSTORE"
										},
										{
											"begin": 27337,
											"end": 27348,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "SWAP1"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "DUP2"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "MSTORE"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "DUP1"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "DUP4"
										},
										{
											"begin": 27337,
											"end": 27356,
											"name": "KECCAK256"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 27357,
											"end": 27370,
											"name": "DUP8"
										},
										{
											"begin": 27357,
											"end": 27370,
											"name": "ADD"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "AND"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "DUP5"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "MSTORE"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "SWAP1"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "SWAP2"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "MSTORE"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "SWAP1"
										},
										{
											"begin": 27337,
											"end": 27371,
											"name": "KECCAK256"
										},
										{
											"begin": 27369,
											"end": 27370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27337,
											"end": 27377,
											"name": "ADD"
										},
										{
											"begin": 27337,
											"end": 27377,
											"name": "SLOAD"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 27321,
											"end": 27381,
											"name": "JUMPDEST"
										},
										{
											"begin": 27301,
											"end": 27381,
											"name": "SWAP1"
										},
										{
											"begin": 27301,
											"end": 27381,
											"name": "POP"
										},
										{
											"begin": 27399,
											"end": 27416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 27433,
											"end": 27439,
											"name": "DUP5"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "MLOAD"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "DUP1"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "ADD"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "DUP1"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "ADD"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "54686520766F746520616D6F756E7420756E646572666C6F7773000000000000"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "DUP2"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "MSTORE"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "POP"
										},
										{
											"begin": 27419,
											"end": 27428,
											"name": "DUP5"
										},
										{
											"begin": 27419,
											"end": 27432,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 27419,
											"end": 27432,
											"name": "SWAP1"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "SWAP3"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "SWAP2"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "SWAP1"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "AND"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 27419,
											"end": 27470,
											"name": "JUMPDEST"
										},
										{
											"begin": 27399,
											"end": 27470,
											"name": "SWAP1"
										},
										{
											"begin": 27399,
											"end": 27470,
											"name": "POP"
										},
										{
											"begin": 27488,
											"end": 27545,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 27505,
											"end": 27511,
											"name": "DUP7"
										},
										{
											"begin": 27513,
											"end": 27522,
											"name": "DUP5"
										},
										{
											"begin": 27524,
											"end": 27533,
											"name": "DUP5"
										},
										{
											"begin": 27535,
											"end": 27544,
											"name": "DUP5"
										},
										{
											"begin": 27488,
											"end": 27504,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 27488,
											"end": 27545,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27488,
											"end": 27545,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 27488,
											"end": 27545,
											"name": "JUMPDEST"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "POP"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "POP"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "POP"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 27198,
											"end": 27560,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27578,
											"end": 27598,
											"name": "DUP3"
										},
										{
											"begin": 27578,
											"end": 27598,
											"name": "AND"
										},
										{
											"begin": 27578,
											"end": 27598,
											"name": "ISZERO"
										},
										{
											"begin": 27574,
											"end": 27935,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 27574,
											"end": 27935,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "DUP3"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "AND"
										},
										{
											"begin": 27618,
											"end": 27634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "SWAP1"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "DUP2"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "MSTORE"
										},
										{
											"begin": 27637,
											"end": 27651,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "MSTORE"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "DUP2"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "KECCAK256"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "SLOAD"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "AND"
										},
										{
											"begin": 27637,
											"end": 27659,
											"name": "SWAP1"
										},
										{
											"begin": 27697,
											"end": 27710,
											"name": "DUP2"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "JUMPI"
										},
										{
											"begin": 27756,
											"end": 27757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "JUMP"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "DUP5"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "AND"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "SWAP1"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "DUP2"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "MSTORE"
										},
										{
											"begin": 27713,
											"end": 27724,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "SWAP1"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "DUP2"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "MSTORE"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "DUP1"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "DUP4"
										},
										{
											"begin": 27713,
											"end": 27732,
											"name": "KECCAK256"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 27733,
											"end": 27746,
											"name": "DUP8"
										},
										{
											"begin": 27733,
											"end": 27746,
											"name": "ADD"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "AND"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "DUP5"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "MSTORE"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "SWAP1"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "SWAP2"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "MSTORE"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "SWAP1"
										},
										{
											"begin": 27713,
											"end": 27747,
											"name": "KECCAK256"
										},
										{
											"begin": 27745,
											"end": 27746,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27713,
											"end": 27753,
											"name": "ADD"
										},
										{
											"begin": 27713,
											"end": 27753,
											"name": "SLOAD"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 27697,
											"end": 27757,
											"name": "JUMPDEST"
										},
										{
											"begin": 27677,
											"end": 27757,
											"name": "SWAP1"
										},
										{
											"begin": 27677,
											"end": 27757,
											"name": "POP"
										},
										{
											"begin": 27775,
											"end": 27792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 27809,
											"end": 27815,
											"name": "DUP5"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "MLOAD"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "DUP1"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "ADD"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "MSTORE"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "DUP1"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "DUP2"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "MSTORE"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "ADD"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "54686520766F746520616D6F756E74206F766572666C6F777300000000000000"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "DUP2"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "MSTORE"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "POP"
										},
										{
											"begin": 27795,
											"end": 27804,
											"name": "DUP5"
										},
										{
											"begin": 27795,
											"end": 27808,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 27795,
											"end": 27808,
											"name": "SWAP1"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "SWAP3"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "SWAP2"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "SWAP1"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "AND"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 27795,
											"end": 27845,
											"name": "JUMPDEST"
										},
										{
											"begin": 27775,
											"end": 27845,
											"name": "SWAP1"
										},
										{
											"begin": 27775,
											"end": 27845,
											"name": "POP"
										},
										{
											"begin": 27863,
											"end": 27920,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 27880,
											"end": 27886,
											"name": "DUP6"
										},
										{
											"begin": 27888,
											"end": 27897,
											"name": "DUP5"
										},
										{
											"begin": 27899,
											"end": 27908,
											"name": "DUP5"
										},
										{
											"begin": 27910,
											"end": 27919,
											"name": "DUP5"
										},
										{
											"begin": 27863,
											"end": 27879,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 27863,
											"end": 27920,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2230,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 2102,
											"end": 2230,
											"name": "JUMPDEST"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "DUP4"
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "DUP4"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "MLOAD"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "DUP1"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "ADD"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "DUP1"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "ADD"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "POP"
										},
										{
											"begin": 2182,
											"end": 2185,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2182,
											"end": 2225,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "JUMPDEST"
										},
										{
											"begin": 28076,
											"end": 28094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 28104,
											"end": 28116,
											"name": "NUMBER"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "MLOAD"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "DUP1"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "ADD"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "MSTORE"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "DUP1"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "DUP2"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "MSTORE"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "ADD"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "PUSH",
											"value": "54686520626C6F636B206E756D62657220657863656564732033322062697473"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "DUP2"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "MSTORE"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "POP"
										},
										{
											"begin": 28097,
											"end": 28103,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 28097,
											"end": 28153,
											"name": "JUMPDEST"
										},
										{
											"begin": 28076,
											"end": 28153,
											"name": "SWAP1"
										},
										{
											"begin": 28076,
											"end": 28153,
											"name": "POP"
										},
										{
											"begin": 28181,
											"end": 28182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28166,
											"end": 28178,
											"name": "DUP5"
										},
										{
											"begin": 28166,
											"end": 28182,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28166,
											"end": 28182,
											"name": "AND"
										},
										{
											"begin": 28166,
											"end": 28182,
											"name": "GT"
										},
										{
											"begin": 28166,
											"end": 28251,
											"name": "DUP1"
										},
										{
											"begin": 28166,
											"end": 28251,
											"name": "ISZERO"
										},
										{
											"begin": 28166,
											"end": 28251,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 28166,
											"end": 28251,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "DUP6"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "AND"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "SWAP1"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "DUP2"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "MSTORE"
										},
										{
											"begin": 28186,
											"end": 28197,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "SWAP1"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "DUP2"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "MSTORE"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "DUP1"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "DUP4"
										},
										{
											"begin": 28186,
											"end": 28208,
											"name": "KECCAK256"
										},
										{
											"begin": 28186,
											"end": 28251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28209,
											"end": 28225,
											"name": "DUP10"
										},
										{
											"begin": 28209,
											"end": 28225,
											"name": "ADD"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "DUP2"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "AND"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "DUP6"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "MSTORE"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "SWAP3"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "MSTORE"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "SWAP1"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "SWAP2"
										},
										{
											"begin": 28186,
											"end": 28226,
											"name": "KECCAK256"
										},
										{
											"begin": 28186,
											"end": 28236,
											"name": "SLOAD"
										},
										{
											"begin": 28186,
											"end": 28251,
											"name": "DUP3"
										},
										{
											"begin": 28186,
											"end": 28251,
											"name": "DUP3"
										},
										{
											"begin": 28186,
											"end": 28251,
											"name": "AND"
										},
										{
											"begin": 28186,
											"end": 28236,
											"name": "SWAP2"
										},
										{
											"begin": 28186,
											"end": 28236,
											"name": "AND"
										},
										{
											"begin": 28186,
											"end": 28251,
											"name": "EQ"
										},
										{
											"begin": 28166,
											"end": 28251,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 28166,
											"end": 28251,
											"name": "JUMPDEST"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "ISZERO"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "DUP6"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "AND"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "SWAP1"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "DUP2"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "MSTORE"
										},
										{
											"begin": 28265,
											"end": 28276,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "SWAP1"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "DUP2"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "MSTORE"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "DUP1"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "DUP4"
										},
										{
											"begin": 28265,
											"end": 28287,
											"name": "KECCAK256"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28288,
											"end": 28304,
											"name": "DUP10"
										},
										{
											"begin": 28288,
											"end": 28304,
											"name": "ADD"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "AND"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "DUP5"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "MSTORE"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "SWAP1"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "SWAP2"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "MSTORE"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "SWAP1"
										},
										{
											"begin": 28265,
											"end": 28305,
											"name": "KECCAK256"
										},
										{
											"begin": 28303,
											"end": 28304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28265,
											"end": 28311,
											"name": "ADD"
										},
										{
											"begin": 28265,
											"end": 28322,
											"name": "DUP3"
										},
										{
											"begin": 28265,
											"end": 28322,
											"name": "SWAP1"
										},
										{
											"begin": 28265,
											"end": 28322,
											"name": "SSTORE"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "JUMP"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "JUMPDEST"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP1"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "MLOAD"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP1"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP3"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "ADD"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP3"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "MSTORE"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP1"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP5"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "AND"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP3"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "MSTORE"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP1"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP4"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "ADD"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP7"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "DUP2"
										},
										{
											"begin": 28388,
											"end": 28421,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "DUP11"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "DUP2"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "DUP2"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "MSTORE"
										},
										{
											"begin": 28349,
											"end": 28360,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "DUP5"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "MSTORE"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "DUP7"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "DUP2"
										},
										{
											"begin": 28349,
											"end": 28371,
											"name": "KECCAK256"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "DUP12"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "DUP7"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "AND"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "DUP3"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "MSTORE"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "DUP5"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "MSTORE"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "DUP7"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "DUP2"
										},
										{
											"begin": 28349,
											"end": 28385,
											"name": "KECCAK256"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SWAP6"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "MLOAD"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "DUP7"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SLOAD"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SWAP1"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "DUP7"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SWAP2"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "DUP3"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "AND"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "OR"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "DUP8"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SSTORE"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SWAP3"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "MLOAD"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SWAP7"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "DUP8"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "ADD"
										},
										{
											"begin": 28349,
											"end": 28421,
											"name": "SSTORE"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "SWAP1"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "DUP2"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "MSTORE"
										},
										{
											"begin": 28433,
											"end": 28447,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "SWAP1"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "SWAP3"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "MSTORE"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "SWAP4"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "SWAP1"
										},
										{
											"begin": 28433,
											"end": 28458,
											"name": "KECCAK256"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "DUP1"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SLOAD"
										},
										{
											"begin": 28461,
											"end": 28477,
											"name": "SWAP3"
										},
										{
											"begin": 28461,
											"end": 28477,
											"name": "DUP9"
										},
										{
											"begin": 28461,
											"end": 28477,
											"name": "ADD"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SWAP1"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SWAP2"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "AND"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SWAP2"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SWAP1"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SWAP3"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "AND"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "OR"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SWAP1"
										},
										{
											"begin": 28433,
											"end": 28477,
											"name": "SSTORE"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 28162,
											"end": 28486,
											"name": "JUMPDEST"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP1"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "MLOAD"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP5"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP2"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "MSTORE"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP2"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "ADD"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP5"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "SWAP1"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "MSTORE"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP2"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP9"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "AND"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "SWAP3"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "SWAP3"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "DUP3"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "SWAP1"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "SUB"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "ADD"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "SWAP1"
										},
										{
											"begin": 28499,
											"end": 28550,
											"name": "LOG2"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "POP"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "POP"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "POP"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "POP"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "POP"
										},
										{
											"begin": 27957,
											"end": 28557,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28567,
											"end": 28728,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 28567,
											"end": 28728,
											"name": "JUMPDEST"
										},
										{
											"begin": 28645,
											"end": 28651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28682,
											"end": 28694,
											"name": "DUP2"
										},
										{
											"begin": 28675,
											"end": 28680,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 28671,
											"end": 28680,
											"name": "DUP5"
										},
										{
											"begin": 28671,
											"end": 28680,
											"name": "LT"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "JUMPI"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP2"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "MSTORE"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP3"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "ADD"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP2"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP2"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "MSTORE"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP4"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "MLOAD"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP5"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "ADD"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "MSTORE"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP4"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "MLOAD"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP1"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP3"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP4"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP3"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP1"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP2"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "ADD"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP2"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP1"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP6"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "ADD"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "SWAP1"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP1"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP4"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "DUP4"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 28663,
											"end": 28695,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28719,
											"end": 28720,
											"name": "SWAP2"
										},
										{
											"begin": 28719,
											"end": 28720,
											"name": "SWAP3"
										},
										{
											"begin": 28567,
											"end": 28728,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28567,
											"end": 28728,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMPDEST"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "MLOAD"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "ADD"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "SWAP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "SWAP2"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "MSTORE"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "DUP3"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "ADD"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "MSTORE"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "SWAP1"
										},
										{
											"begin": 13447,
											"end": 29052,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2CD250AFF92BA04A009213390107E53E83F14A04575E595AF9230B9654AFED9": "43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373",
										"36CE88BA958E2B0D44CDA35791945F0A281D35D6E350D9C9F8EEDD2B2359D57D": "43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373",
										"3FC916DC37CF2CF07A856AD1473AD93B10F9A58E0AD4DC3C2FF0CEABBA196973": "546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"42D9A8E134AF3312DAACAC2D2003D2E3A900F5F05EB0DE35B651F1E9CE1C4E5B": "5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"5E83471B3A3D1FE92BFF19912BAB84DCC2C92190AF741E7C33D886D7EC91F5D1": "546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"AC444B4635A35929A68A5C8FA43076F8FD9D5DD9C52546538D69B2042F34C77": "54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773",
										"BD9517161462829BE5A3D25154AE5230E5AD2E2AAAB3C9BF15E6E48716B4A12E": "43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEEA2FA463CDACA7BCC6C65F53B7AE24609806E88CA4FDB7ADE049DC06112288": "43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
										"E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
										"F5CEF2FE2A70CA222ED18C80624B418B6D950CFD5CB46A9F7C5AB6B4AB537CEE": "43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"freeze()": "62a5af3b",
							"getCurrentVotes(address)": "b4b5ea57",
							"getOwner()": "893d20e8",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"lockUser(address)": "d7972580",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze()": "6a28f000",
							"unlockUser(address)": "bd1870a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"LockUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"UnlockUser\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`\",\"params\":{\"amount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"receiveApproval(...) is executed.\",\"params\":{\"amount\":\"The number of tokens that are approved\",\"data\":\"The data to pass to receiveApproval(...)\"},\"return\":\"true\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"burn(uint256)\":{\"details\":\"The amount must be greater than balance, total supply.\",\"params\":{\"amount\":\"The number of tokens that are burnt\"},\"return\":\"true\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.\",\"params\":{\"spender\":\"The address of the account which may transfer tokens\",\"subtractedValue\":\"The subtractional number of tokens to allow which may be spent\"},\"return\":\"Whether or not the approval succeeded\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"increaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.\",\"params\":{\"addedValue\":\"The additional number of tokens to allow which may be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the total supply.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"recipient\":\"The address of the destination account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"recipient\":\"The address of the destination account\",\"sender\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Approve the spender to transferFrom(...) with the amount.\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"burn(uint256)\":{\"notice\":\"Destroy the amount of tokens from the sender, reducing the total supply.\"},\"constructor\":\"Construct a new GTFX Testnet token\",\"decreaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"GTFX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "isLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 487,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "blacklist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 558,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 564,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 566,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 568,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 570,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 572,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "_name",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 576,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "delegates",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 587,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "checkpoints",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)581_storage))"
							},
							{
								"astId": 591,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 605,
								"contract": "contracts/4_SmartGTFX.sol:GTFX",
								"label": "nonces",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)581_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)581_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)581_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct GTFX.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)581_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)581_storage": {
								"encoding": "inplace",
								"label": "struct GTFX.Checkpoint",
								"members": [
									{
										"astId": 578,
										"contract": "contracts/4_SmartGTFX.sol:GTFX",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 580,
										"contract": "contracts/4_SmartGTFX.sol:GTFX",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"approveAndCall(address,uint256,bytes)": {
								"notice": "Approve the spender to transferFrom(...) with the amount."
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"burn(uint256)": {
								"notice": "Destroy the amount of tokens from the sender, reducing the total supply."
							},
							"constructor": "Construct a new GTFX Testnet token",
							"decreaseAllowance(address,uint256)": {
								"notice": "Atomically increases the allowance granted to `spender` by the caller"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"increaseAllowance(address,uint256)": {
								"notice": "Atomically increases the allowance granted to `spender` by the caller"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":1071:5765  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":1071:5765  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158203ddb446e689ff61dba87acc66469a608d2275145a9ae309ba3c55c87ff509bbf64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203ddb446e689ff61dba87acc66469a608d2275145a9ae309ba3c55c87ff509bbf64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 RETURNDATASIZE 0xDB DIFFICULTY PUSH15 0x689FF61DBA87ACC66469A608D22751 GASLIMIT 0xA9 0xAE ADDRESS SWAP12 LOG3 0xC5 0x5C DUP8 SELFDESTRUCT POP SWAP12 0xBF PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "1071:4694:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203ddb446e689ff61dba87acc66469a608d2275145a9ae309ba3c55c87ff509bbf64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 RETURNDATASIZE 0xDB DIFFICULTY PUSH15 0x689FF61DBA87ACC66469A608D22751 GASLIMIT 0xA9 0xAE ADDRESS SWAP12 LOG3 0xC5 0x5C DUP8 SELFDESTRUCT POP SWAP12 0xBF PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "1071:4694:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"add(uint256,uint256,string memory)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1071,
									"end": 5765,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1071,
									"end": 5765,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203ddb446e689ff61dba87acc66469a608d2275145a9ae309ba3c55c87ff509bbf64736f6c63430005110032",
									".code": [
										{
											"begin": 1071,
											"end": 5765,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "ADDRESS"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "EQ"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "MSTORE"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "DUP1"
										},
										{
											"begin": 1071,
											"end": 5765,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Tokenlock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "Freezed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "UnFreezed",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":11858:12313  contract Tokenlock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":11956:11957  0 */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":11939:11957  uint8 isLocked = 0 */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7561:7573  _msgSender() */\n  tag_5\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7561:7571  _msgSender */\n  tag_6\n    /* \"contracts/4_SmartGTFX.sol\":7561:7573  _msgSender() */\n  and\n  jump\t// in\ntag_5:\n    /* \"contracts/4_SmartGTFX.sol\":7579:7585  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7579:7597  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7579:7597  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7579:7585  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":7511:7656  constructor () internal {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":11858:12313  contract Tokenlock is Ownable {... */\n  jump(tag_7)\n    /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/4_SmartGTFX.sol\":6544:6554  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":11858:12313  contract Tokenlock is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":11858:12313  contract Tokenlock is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":11858:12313  contract Tokenlock is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62a5af3b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6a28f000\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":12107:12204  function freeze() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":12210:12311  function unfreeze() public onlyOwner {... */\n    tag_4:\n      tag_8\n      tag_11\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_8\n      tag_13\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":12107:12204  function freeze() public onlyOwner {... */\n    tag_9:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_20\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_22\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/4_SmartGTFX.sol\":12152:12160  isLocked */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12152:12164  isLocked = 1 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12188:12197  Freezed() */\n      mload(0x40)\n      0x962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12152:12160  isLocked */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12188:12197  Freezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12107:12204  function freeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":12210:12311  function unfreeze() public onlyOwner {... */\n    tag_11:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_25\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/4_SmartGTFX.sol\":12268:12269  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":12257:12269  isLocked = 0 */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":12293:12304  UnFreezed() */\n      mload(0x40)\n      0xf0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":12268:12269  0 */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":12293:12304  UnFreezed() */\n      log1\n        /* \"contracts/4_SmartGTFX.sol\":12210:12311  function unfreeze() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n    tag_13:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_29\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_29:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_30\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_30:\n        /* \"contracts/4_SmartGTFX.sol\":8401:8402  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8385:8391  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8385:8391  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8401:8402  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8427:8428  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8410:8429  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n    tag_15:\n        /* \"contracts/4_SmartGTFX.sol\":7762:7769  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7784:7790  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_34\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_21\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_34:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_35\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/4_SmartGTFX.sol\":8641:8669  _transferOwnership(newOwner) */\n      tag_37\n        /* \"contracts/4_SmartGTFX.sol\":8660:8668  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8641:8659  _transferOwnership */\n      tag_38\n        /* \"contracts/4_SmartGTFX.sol\":8641:8669  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n    tag_21:\n        /* \"contracts/4_SmartGTFX.sol\":6544:6554  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8767:8978  function _transferOwnership(address newOwner) internal {... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8836:8858  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8828:8901  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/4_SmartGTFX.sol\":8933:8939  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8912:8950  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8933:8939  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8912:8950  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8956:8962  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8956:8973  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8767:8978  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa265627a7a72315820c5032186987e17695b5000020995cef20260c0440cf04078d1dcb06e42dc8fab64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b191681556100226001600160e01b0361007116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610075565b3390565b610416806100846000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806362a5af3b1461005c5780636a28f00014610066578063715018a61461006e5780638da5cb5b14610076578063f2fde38b1461009a575b600080fd5b6100646100c0565b005b610064610154565b6100646101e2565b61007e610284565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100b057600080fd5b50356001600160a01b0316610293565b6100c86102f7565b6000546001600160a01b03908116911614610118576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b61015c6102f7565b6000546001600160a01b039081169116146101ac576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b6101ea6102f7565b6000546001600160a01b0390811691161461023a576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029b6102f7565b6000546001600160a01b039081169116146102eb576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6102f4816102fb565b50565b3390565b6001600160a01b0381166103405760405162461bcd60e51b815260040180806020018281038252602681526020018061039c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72315820c5032186987e17695b5000020995cef20260c0440cf04078d1dcb06e42dc8fab64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH2 0x22 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x71 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x75 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x416 DUP1 PUSH2 0x84 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A72315820C50321 DUP7 SWAP9 PUSH31 0x17695B5000020995CEF20260C0440CF04078D1DCB06E42DC8FAB64736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "11858:455:0:-;;;11956:1;11939:18;;-1:-1:-1;;;;11939:18:0;;;7561:12;-1:-1:-1;;;;;7561:10:0;:12;:::i;:::-;7579:6;:18;;-1:-1:-1;;;;;;7579:18:0;-1:-1:-1;;;;;7579:18:0;;;;;;;7608:43;;7579:18;;-1:-1:-1;7579:18:0;7608:43;;7579:6;;7608:43;7511:145;11858:455;;6469:90;6544:10;6469:90;:::o;11858:455::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806362a5af3b1461005c5780636a28f00014610066578063715018a61461006e5780638da5cb5b14610076578063f2fde38b1461009a575b600080fd5b6100646100c0565b005b610064610154565b6100646101e2565b61007e610284565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100b057600080fd5b50356001600160a01b0316610293565b6100c86102f7565b6000546001600160a01b03908116911614610118576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1781556040517f962a6139ca22015759d0878e2cf5d770dcb8152e1d5ba08e46a969dd9b154a9c9190a1565b61015c6102f7565b6000546001600160a01b039081169116146101ac576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6000805460ff60a01b191681556040517ff0daac2271a735ea786b9adf80dfcbd6a3cbd52f3cab0a78337114692d5faf5d9190a1565b6101ea6102f7565b6000546001600160a01b0390811691161461023a576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029b6102f7565b6000546001600160a01b039081169116146102eb576040805162461bcd60e51b815260206004820181905260248201526000805160206103c2833981519152604482015290519081900360640190fd5b6102f4816102fb565b50565b3390565b6001600160a01b0381166103405760405162461bcd60e51b815260040180806020018281038252602681526020018061039c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72315820c5032186987e17695b5000020995cef20260c0440cf04078d1dcb06e42dc8fab64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A5AF3B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6A28F000 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A72315820C50321 DUP7 SWAP9 PUSH31 0x17695B5000020995CEF20260C0440CF04078D1DCB06E42DC8FAB64736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "11858:455:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11858:455:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12107:97;;;:::i;:::-;;12210:101;;;:::i;8307:127::-;;;:::i;7724:71::-;;;:::i;:::-;;;;-1:-1:-1;;;;;7724:71:0;;;;;;;;;;;;;;8573:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8573:101:0;-1:-1:-1;;;;;8573:101:0;;:::i;12107:97::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;12152:8;:12;;-1:-1:-1;;;;12152:12:0;-1:-1:-1;;;12152:12:0;;;12188:9;;;;12152:8;12188:9;12107:97::o;12210:101::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;12268:1;12257:12;;-1:-1:-1;;;;12257:12:0;;;12293:11;;;;12268:1;12293:11;12210:101::o;8307:127::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;8401:1;8385:6;;8364:40;;-1:-1:-1;;;;;8385:6:0;;;;8364:40;;8401:1;;8364:40;8427:1;8410:19;;-1:-1:-1;;;;;;8410:19:0;;;8307:127::o;7724:71::-;7762:7;7784:6;-1:-1:-1;;;;;7784:6:0;7724:71;:::o;8573:101::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;8641:28;8660:8;8641:18;:28::i;:::-;8573:101;:::o;6469:90::-;6544:10;6469:90;:::o;8767:211::-;-1:-1:-1;;;;;8836:22:0;;8828:73;;;;-1:-1:-1;;;8828:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8933:6;;;8912:38;;-1:-1:-1;;;;;8912:38:0;;;;8933:6;;;8912:38;;;8956:6;:17;;-1:-1:-1;;;;;;8956:17:0;-1:-1:-1;;;;;8956:17:0;;;;;;;;;;8767:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"freeze()": "infinite",
								"owner()": "1081",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreeze()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "MSTORE"
								},
								{
									"begin": 11956,
									"end": 11957,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "DUP1"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "AND"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "DUP2"
								},
								{
									"begin": 11939,
									"end": 11957,
									"name": "SSTORE"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7561,
									"end": 7571,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "AND"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "JUMPDEST"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP1"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP4"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "AND"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP1"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP2"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "OR"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP3"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SSTORE"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "MLOAD"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP3"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP2"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "SWAP1"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "DUP3"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "SWAP1"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "LOG3"
								},
								{
									"begin": 7511,
									"end": 7656,
									"name": "POP"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "JUMP"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMPDEST"
								},
								{
									"begin": 6544,
									"end": 6554,
									"name": "CALLER"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "SWAP1"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "JUMPDEST"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "DUP1"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "CODECOPY"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11858,
									"end": 12313,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c5032186987e17695b5000020995cef20260c0440cf04078d1dcb06e42dc8fab64736f6c63430005110032",
									".code": [
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "MSTORE"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "POP"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "LT"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "SHR"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "DUP1"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "62A5AF3B"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "EQ"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "DUP1"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "6A28F000"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "EQ"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "DUP1"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "EQ"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "DUP1"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "EQ"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "DUP1"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "EQ"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPI"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "JUMPDEST"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "DUP1"
										},
										{
											"begin": 11858,
											"end": 12313,
											"name": "REVERT"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMPDEST"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMPDEST"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "STOP"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMPDEST"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "DUP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP3"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "AND"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "DUP3"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "MSTORE"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "MLOAD"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "DUP2"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SUB"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "ADD"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "RETURN"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMPDEST"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "DUP1"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "AND"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 12152,
											"end": 12160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "DUP1"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "OR"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "DUP2"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "SSTORE"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "MLOAD"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "PUSH",
											"value": "962A6139CA22015759D0878E2CF5D770DCB8152E1D5BA08E46A969DD9B154A9C"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "SWAP2"
										},
										{
											"begin": 12152,
											"end": 12160,
											"name": "SWAP1"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "LOG1"
										},
										{
											"begin": 12107,
											"end": 12204,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "DUP1"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "AND"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "DUP2"
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "SSTORE"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "MLOAD"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "PUSH",
											"value": "F0DAAC2271A735EA786B9ADF80DFCBD6A3CBD52F3CAB0A78337114692D5FAF5D"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "SWAP2"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "SWAP1"
										},
										{
											"begin": 12293,
											"end": 12304,
											"name": "LOG1"
										},
										{
											"begin": 12210,
											"end": 12311,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "DUP1"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SLOAD"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP2"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "AND"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "DUP4"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "SWAP1"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "LOG3"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "DUP1"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "AND"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SWAP1"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SSTORE"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "AND"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8660,
											"end": 8668,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "JUMPDEST"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "POP"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "JUMPDEST"
										},
										{
											"begin": 6544,
											"end": 6554,
											"name": "CALLER"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8836,
											"end": 8858,
											"name": "DUP2"
										},
										{
											"begin": 8836,
											"end": 8858,
											"name": "AND"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "JUMPI"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP3"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SUB"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP3"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "CODECOPY"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SUB"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "REVERT"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "JUMPDEST"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "DUP1"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SLOAD"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "DUP6"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "AND"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "SWAP4"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SWAP3"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "AND"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "LOG3"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "DUP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP3"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP3"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP2"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP2"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "OR"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SSTORE"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"freeze()": "62a5af3b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unfreeze()": "6a28f000"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"Tokenlock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:Tokenlock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "contracts/4_SmartGTFX.sol:Tokenlock",
								"label": "isLocked",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"UserLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "LockUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "UnlockUser",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "lockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "unlockUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/4_SmartGTFX.sol\":12907:13445  contract UserLock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_SmartGTFX.sol\":7541:7558  address msgSender */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7561:7573  _msgSender() */\n  tag_5\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/4_SmartGTFX.sol\":7561:7571  _msgSender */\n  tag_6\n    /* \"contracts/4_SmartGTFX.sol\":7561:7573  _msgSender() */\n  and\n  jump\t// in\ntag_5:\n    /* \"contracts/4_SmartGTFX.sol\":7579:7585  _owner */\n  0x00\n    /* \"contracts/4_SmartGTFX.sol\":7579:7597  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/4_SmartGTFX.sol\":7579:7597  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7579:7585  _owner */\n  dup3\n  swap1\n    /* \"contracts/4_SmartGTFX.sol\":7608:7651  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/4_SmartGTFX.sol\":7511:7656  constructor () internal {... */\n  pop\n    /* \"contracts/4_SmartGTFX.sol\":12907:13445  contract UserLock is Ownable {... */\n  jump(tag_7)\n    /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/4_SmartGTFX.sol\":6544:6554  msg.sender */\n  caller\n    /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_SmartGTFX.sol\":12907:13445  contract UserLock is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_SmartGTFX.sol\":12907:13445  contract UserLock is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/4_SmartGTFX.sol\":12907:13445  contract UserLock is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbd1870a3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd7972580\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n    tag_5:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_14\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n    tag_6:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_17\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n      pop\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n    tag_9:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_22\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_24\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_24:\n        /* \"contracts/4_SmartGTFX.sol\":8401:8402  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8385:8391  _owner */\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8385:8391  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8401:8402  0 */\n      dup4\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":8364:8404  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8427:8428  0 */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8410:8429  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8307:8434  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n    tag_11:\n        /* \"contracts/4_SmartGTFX.sol\":7762:7769  address */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":7784:7790  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7724:7795  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n    tag_14:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_28\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_29\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13375:13389  blacklist[who] */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":13392:13397  false */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":13375:13389  blacklist[who] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13375:13384  blacklist */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13375:13389  blacklist[who] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13375:13397  blacklist[who] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13421:13436  UnlockUser(who) */\n      mload\n      0x687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea1\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13392:13397  false */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13421:13436  UnlockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13315:13443  function unlockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n    tag_17:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_32\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_33\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":13244:13258  blacklist[who] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/4_SmartGTFX.sol\":13261:13265  true */\n      0x01\n        /* \"contracts/4_SmartGTFX.sol\":13244:13258  blacklist[who] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/4_SmartGTFX.sol\":13244:13265  blacklist[who] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":13289:13302  LockUser(who) */\n      mload\n      0x169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":13244:13258  blacklist[who] */\n      swap1\n        /* \"contracts/4_SmartGTFX.sol\":13289:13302  LockUser(who) */\n      log2\n        /* \"contracts/4_SmartGTFX.sol\":13186:13309  function lockUser(address who) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      tag_36\n        /* \"contracts/4_SmartGTFX.sol\":7920:7930  _msgSender */\n      tag_23\n        /* \"contracts/4_SmartGTFX.sol\":7920:7932  _msgSender() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/4_SmartGTFX.sol\":7910:7916  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":7910:7932  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/4_SmartGTFX.sol\":7902:7969  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_37\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/4_SmartGTFX.sol\":8641:8669  _transferOwnership(newOwner) */\n      tag_39\n        /* \"contracts/4_SmartGTFX.sol\":8660:8668  newOwner */\n      dup2\n        /* \"contracts/4_SmartGTFX.sol\":8641:8659  _transferOwnership */\n      tag_40\n        /* \"contracts/4_SmartGTFX.sol\":8641:8669  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/4_SmartGTFX.sol\":8573:8674  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n    tag_23:\n        /* \"contracts/4_SmartGTFX.sol\":6544:6554  msg.sender */\n      caller\n        /* \"contracts/4_SmartGTFX.sol\":6469:6559  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/4_SmartGTFX.sol\":8767:8978  function _transferOwnership(address newOwner) internal {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/4_SmartGTFX.sol\":8836:8858  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/4_SmartGTFX.sol\":8828:8901  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/4_SmartGTFX.sol\":8933:8939  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/4_SmartGTFX.sol\":8912:8950  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/4_SmartGTFX.sol\":8933:8939  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/4_SmartGTFX.sol\":8912:8950  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/4_SmartGTFX.sol\":8956:8962  _owner */\n      0x00\n        /* \"contracts/4_SmartGTFX.sol\":8956:8973  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/4_SmartGTFX.sol\":8767:8978  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa265627a7a723158206d0808fd0ae73686124b1923d810a087a4906c006ef517c8b653ed8a86887a4064736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b610478806100796000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063bd1870a31461008a578063d7972580146100b0578063f2fde38b146100d6575b600080fd5b6100646100fc565b005b61006e61019e565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100a057600080fd5b50356001600160a01b03166101ad565b610064600480360360208110156100c657600080fd5b50356001600160a01b031661024e565b610064600480360360208110156100ec57600080fd5b50356001600160a01b03166102f5565b610104610359565b6000546001600160a01b03908116911614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101b5610359565b6000546001600160a01b03908116911614610205576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b610256610359565b6000546001600160a01b039081169116146102a6576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6102fd610359565b6000546001600160a01b0390811691161461034d576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6103568161035d565b50565b3390565b6001600160a01b0381166103a25760405162461bcd60e51b81526004018080602001828103825260268152602001806103fe6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158206d0808fd0ae73686124b1923d810a087a4906c006ef517c8b653ed8a86887a4064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x17 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x66 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x478 DUP1 PUSH2 0x79 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24E JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x205 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x34D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x35D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A723158206D0808 REVERT EXP 0xE7 CALLDATASIZE DUP7 SLT 0x4B NOT 0x23 0xD8 LT LOG0 DUP8 LOG4 SWAP1 PUSH13 0x6EF517C8B653ED8A86887A40 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "12907:538:0:-;;;7541:17;7561:12;-1:-1:-1;;;;;7561:10:0;:12;:::i;:::-;7579:6;:18;;-1:-1:-1;;;;;;7579:18:0;-1:-1:-1;;;;;7579:18:0;;;;;;;7608:43;;7579:18;;-1:-1:-1;7579:18:0;7608:43;;7579:6;;7608:43;7511:145;12907:538;;6469:90;6544:10;6469:90;:::o;12907:538::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063bd1870a31461008a578063d7972580146100b0578063f2fde38b146100d6575b600080fd5b6100646100fc565b005b61006e61019e565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100a057600080fd5b50356001600160a01b03166101ad565b610064600480360360208110156100c657600080fd5b50356001600160a01b031661024e565b610064600480360360208110156100ec57600080fd5b50356001600160a01b03166102f5565b610104610359565b6000546001600160a01b03908116911614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6101b5610359565b6000546001600160a01b03908116911614610205576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517f687691c08a3e67a160ba20a32cb1c56791955f12c5ff5d5fcf62bc456ad79ea19190a250565b610256610359565b6000546001600160a01b039081169116146102a6576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f169aadf55dc2098830ccf9f334e3ce3933b6e895b9114fc9f49242f2be61fe8e9190a250565b6102fd610359565b6000546001600160a01b0390811691161461034d576040805162461bcd60e51b81526020600482018190526024820152600080516020610424833981519152604482015290519081900360640190fd5b6103568161035d565b50565b3390565b6001600160a01b0381166103a25760405162461bcd60e51b81526004018080602001828103825260268152602001806103fe6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158206d0808fd0ae73686124b1923d810a087a4906c006ef517c8b653ed8a86887a4064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD1870A3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7972580 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24E JUMP JUMPDEST PUSH2 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x205 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x34D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x424 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x35D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A723158206D0808 REVERT EXP 0xE7 CALLDATASIZE DUP7 SLT 0x4B NOT 0x23 0xD8 LT LOG0 DUP8 LOG4 SWAP1 PUSH13 0x6EF517C8B653ED8A86887A40 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "12907:538:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12907:538:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8307:127;;;:::i;:::-;;7724:71;;;:::i;:::-;;;;-1:-1:-1;;;;;7724:71:0;;;;;;;;;;;;;;13315:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13315:128:0;-1:-1:-1;;;;;13315:128:0;;:::i;13186:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13186:123:0;-1:-1:-1;;;;;13186:123:0;;:::i;8573:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8573:101:0;-1:-1:-1;;;;;8573:101:0;;:::i;8307:127::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;8401:1;8385:6;;8364:40;;-1:-1:-1;;;;;8385:6:0;;;;8364:40;;8401:1;;8364:40;8427:1;8410:19;;-1:-1:-1;;;;;;8410:19:0;;;8307:127::o;7724:71::-;7762:7;7784:6;-1:-1:-1;;;;;7784:6:0;7724:71;:::o;13315:128::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13375:14:0;;13392:5;13375:14;;;:9;:14;;;;;;:22;;-1:-1:-1;;13375:22:0;;;13421:15;;;13392:5;13421:15;13315:128;:::o;13186:123::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13244:14:0;;;;;;13261:4;13244:14;;;;;;;;:21;;-1:-1:-1;;13244:21:0;;;;;;;13289:13;;;13244:14;13289:13;13186:123;:::o;8573:101::-;7920:12;:10;:12::i;:::-;7910:6;;-1:-1:-1;;;;;7910:6:0;;;:22;;;7902:67;;;;;-1:-1:-1;;;7902:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7902:67:0;;;;;;;;;;;;;;;8641:28;8660:8;8641:18;:28::i;:::-;8573:101;:::o;6469:90::-;6544:10;6469:90;:::o;8767:211::-;-1:-1:-1;;;;;8836:22:0;;8828:73;;;;-1:-1:-1;;;8828:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8933:6;;;8912:38;;-1:-1:-1;;;;;8912:38:0;;;;8933:6;;;8912:38;;;8956:6;:17;;-1:-1:-1;;;;;;8956:17:0;-1:-1:-1;;;;;8956:17:0;;;;;;;;;;8767:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "228800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"lockUser(address)": "infinite",
								"owner()": "1037",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockUser(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "MSTORE"
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7561,
									"end": 7571,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "AND"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7561,
									"end": 7573,
									"name": "JUMPDEST"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP1"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP4"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "AND"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP1"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP2"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "OR"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "DUP3"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SSTORE"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "MLOAD"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP3"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 7579,
									"end": 7597,
									"name": "SWAP2"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "SWAP1"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "DUP3"
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "SWAP1"
								},
								{
									"begin": 7608,
									"end": 7651,
									"name": "LOG3"
								},
								{
									"begin": 7511,
									"end": 7656,
									"name": "POP"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "JUMP"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMPDEST"
								},
								{
									"begin": 6544,
									"end": 6554,
									"name": "CALLER"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "SWAP1"
								},
								{
									"begin": 6469,
									"end": 6559,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "JUMPDEST"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "DUP1"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "CODECOPY"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12907,
									"end": 13445,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206d0808fd0ae73686124b1923d810a087a4906c006ef517c8b653ed8a86887a4064736f6c63430005110032",
									".code": [
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "MSTORE"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "POP"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "LT"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPI"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "SHR"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "EQ"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPI"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "EQ"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPI"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "BD1870A3"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "EQ"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPI"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "D7972580"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "EQ"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPI"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "EQ"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPI"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "JUMPDEST"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 13445,
											"name": "REVERT"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "STOP"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "DUP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP3"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "AND"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "DUP3"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "MSTORE"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "MLOAD"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "DUP2"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SUB"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "ADD"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "RETURN"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMPDEST"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "DUP1"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "AND"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMPDEST"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "DUP1"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "AND"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMPDEST"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "DUP1"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "AND"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "DUP1"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SLOAD"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP2"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "AND"
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "SWAP1"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "SWAP1"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "DUP4"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "SWAP1"
										},
										{
											"begin": 8364,
											"end": 8404,
											"name": "LOG3"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "DUP1"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "AND"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SWAP1"
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SSTORE"
										},
										{
											"begin": 8307,
											"end": 8434,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMPDEST"
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "AND"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "SWAP1"
										},
										{
											"begin": 7724,
											"end": 7795,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "AND"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "MSTORE"
										},
										{
											"begin": 13375,
											"end": 13384,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "MSTORE"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP1"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "DUP3"
										},
										{
											"begin": 13375,
											"end": 13389,
											"name": "KECCAK256"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "DUP1"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SWAP1"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SSTORE"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "MLOAD"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "PUSH",
											"value": "687691C08A3E67A160BA20A32CB1C56791955F12C5FF5D5FCF62BC456AD79EA1"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "SWAP2"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "SWAP1"
										},
										{
											"begin": 13421,
											"end": 13436,
											"name": "LOG2"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "POP"
										},
										{
											"begin": 13315,
											"end": 13443,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "MSTORE"
										},
										{
											"begin": 13261,
											"end": 13265,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "SWAP1"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "MSTORE"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP1"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "DUP4"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "KECCAK256"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "DUP1"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP1"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP3"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "OR"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP1"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SWAP2"
										},
										{
											"begin": 13244,
											"end": 13265,
											"name": "SSTORE"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "MLOAD"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "PUSH",
											"value": "169AADF55DC2098830CCF9F334E3CE3933B6E895B9114FC9F49242F2BE61FE8E"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "SWAP2"
										},
										{
											"begin": 13244,
											"end": 13258,
											"name": "SWAP1"
										},
										{
											"begin": 13289,
											"end": 13302,
											"name": "LOG2"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "POP"
										},
										{
											"begin": 13186,
											"end": 13309,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMPDEST"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7920,
											"end": 7930,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "SWAP1"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP2"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "SWAP2"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "AND"
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "EQ"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP3"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MSTORE"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "MLOAD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SUB"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "ADD"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 7902,
											"end": 7969,
											"name": "JUMPDEST"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8660,
											"end": 8668,
											"name": "DUP2"
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8641,
											"end": 8669,
											"name": "JUMPDEST"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "POP"
										},
										{
											"begin": 8573,
											"end": 8674,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "JUMPDEST"
										},
										{
											"begin": 6544,
											"end": 6554,
											"name": "CALLER"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6469,
											"end": 6559,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8836,
											"end": 8858,
											"name": "DUP2"
										},
										{
											"begin": 8836,
											"end": 8858,
											"name": "AND"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "JUMPI"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP3"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SUB"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP3"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MSTORE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "CODECOPY"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "ADD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "POP"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "MLOAD"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "DUP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP2"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SUB"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "SWAP1"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "REVERT"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8828,
											"end": 8901,
											"name": "JUMPDEST"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "DUP1"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SLOAD"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "DUP1"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "DUP6"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "AND"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "SWAP4"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SWAP3"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "AND"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "SWAP2"
										},
										{
											"begin": 8912,
											"end": 8950,
											"name": "LOG3"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "DUP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP3"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP3"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP2"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP2"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "OR"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SWAP1"
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "SSTORE"
										},
										{
											"begin": 8767,
											"end": 8978,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"lockUser(address)": "d7972580",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unlockUser(address)": "bd1870a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"LockUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"UnlockUser\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/4_SmartGTFX.sol\":\"UserLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_SmartGTFX.sol\":{\"keccak256\":\"0xd96f39a4db5d7d3aeec392070a729b469fb8fedabffef6f990b6f601d04add30\",\"urls\":[\"bzz-raw://50d7341dc2e854f2eb4e67b297095d7f78da549ba90e4d2a311698ec9c938af9\",\"dweb:/ipfs/QmWwyk2ttoWztgmSW9wgDa2nvSEmWrYqGLi8MizkXq7SVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 233,
								"contract": "contracts/4_SmartGTFX.sol:UserLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 487,
								"contract": "contracts/4_SmartGTFX.sol:UserLock",
								"label": "blacklist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/4_SmartGTFX.sol": {
				"ast": {
					"absolutePath": "contracts/4_SmartGTFX.sol",
					"exportedSymbols": {
						"ApproveAndCallFallBack": [
							481
						],
						"BEP20Interface": [
							422
						],
						"Context": [
							229
						],
						"GTFX": [
							1692
						],
						"Ownable": [
							335
						],
						"SafeMath": [
							204
						],
						"Tokenlock": [
							469
						],
						"UserLock": [
							545
						]
					},
					"id": 1693,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1363:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 11,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1380:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 12,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1386:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 10,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															17,
															44
														],
														"referencedDeclaration": 44,
														"src": "1376:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1369:47:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1309:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1320:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1308:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1354:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1353:9:0"
									},
									"scope": 204,
									"src": "1296:125:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1780:78:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "1786:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1798:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1802:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1786:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1817:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1817:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1825:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "1809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1809:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1852:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 27,
												"id": 42,
												"nodeType": "Return",
												"src": "1845:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1698:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1697:50:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1771:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1770:9:0"
									},
									"scope": 204,
									"src": "1685:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2169:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 54,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2186:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 55,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2189:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 53,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															60,
															87
														],
														"referencedDeclaration": 87,
														"src": "2182:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2182:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "2175:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2115:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2126:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2114:22:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2160:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2159:9:0"
									},
									"scope": 204,
									"src": "2102:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2589:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 72,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "2603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2603:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 75,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2611:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "2595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2595:29:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "2630:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 78,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2642:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2646:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2642:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2630:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 79,
													"src": "2661:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 70,
												"id": 85,
												"nodeType": "Return",
												"src": "2654:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2507:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2518:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2529:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 65,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2529:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2506:50:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2579:9:0"
									},
									"scope": 204,
									"src": "2494:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2954:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 96,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3175:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3170:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 102,
												"nodeType": "IfStatement",
												"src": "3166:35:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "3178:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3193:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 95,
															"id": 100,
															"nodeType": "Return",
															"src": "3186:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 120,
														"src": "3207:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 105,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 106,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3223:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3207:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "3238:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "3242:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3238:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3238:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3250:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "3230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "3230:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 104,
													"src": "3300:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 119,
												"nodeType": "Return",
												"src": "3293:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2900:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2911:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2899:22:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2945:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2944:9:0"
									},
									"scope": 204,
									"src": "2887:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3804:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 131,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3821:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 132,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3824:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3827:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 130,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															137,
															164
														],
														"referencedDeclaration": 164,
														"src": "3817:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3817:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 135,
												"nodeType": "Return",
												"src": "3810:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3761:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:22:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3795:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3794:9:0"
									},
									"scope": 204,
									"src": "3737:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4407:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "4483:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 152,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "4490:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "4475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4475:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "4475:28:0"
											},
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "4509:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4521:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4525:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4509:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "4622:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 162,
												"nodeType": "Return",
												"src": "4615:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4325:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4336:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4347:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4324:50:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4397:9:0"
									},
									"scope": 204,
									"src": "4312:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "5115:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 174,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5135:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5138:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 173,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															180,
															203
														],
														"referencedDeclaration": 203,
														"src": "5128:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 178,
												"nodeType": "Return",
												"src": "5121:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5061:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5072:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5060:22:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5106:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5105:9:0"
									},
									"scope": 204,
									"src": "5048:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5705:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "5719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5724:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5719:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5727:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "5711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5711:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "5753:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "5757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5753:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "5746:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5623:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5634:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5645:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5622:50:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5695:9:0"
									},
									"scope": 204,
									"src": "5610:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "1071:4694:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "6462:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6450:2:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6462:0:0"
									},
									"scope": 229,
									"src": "6438:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "6531:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 213,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6544:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6544:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 212,
												"id": 215,
												"nodeType": "Return",
												"src": "6537:17:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6488:2:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6514:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6513:17:0"
									},
									"scope": 229,
									"src": "6469:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6620:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1723,
													"src": "6626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$229",
														"typeString": "contract Context"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6626:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 224,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6762:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6762:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 221,
												"id": 226,
												"nodeType": "Return",
												"src": "6755:15:0"
											}
										]
									},
									"documentation": null,
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6580:2:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6606:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6605:14:0"
									},
									"scope": 229,
									"src": "6563:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "6267:510:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 230,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 229,
										"src": "7294:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$229",
											"typeString": "contract Context"
										}
									},
									"id": 231,
									"nodeType": "InheritanceSpecifier",
									"src": "7294:7:0"
								}
							],
							"contractDependencies": [
								229
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								229
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 233,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "7306:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 232,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7306:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 239,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7360:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7391:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7359:57:0"
									},
									"src": "7333:84:0"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "7535:121:0",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "7541:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 242,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7541:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 244,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "7561:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7561:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7541:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 247,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7579:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 248,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "7588:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7579:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "7579:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7637:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7629:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7629:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 255,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7641:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 251,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "7608:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7608:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "EmitStatement",
												"src": "7603:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 259,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7523:2:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7535:0:0"
									},
									"scope": 335,
									"src": "7511:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7771:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 233,
													"src": "7784:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "7777:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7761:9:0"
									},
									"scope": 335,
									"src": "7724:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "7896:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7910:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 271,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7920:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7920:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7910:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7934:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "7902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7902:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "7902:67:0"
											},
											{
												"id": 277,
												"nodeType": "PlaceholderStatement",
												"src": "7975:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 279,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7893:2:0"
									},
									"src": "7875:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "8353:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8401:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8393:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 284,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8364:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8364:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "EmitStatement",
												"src": "8359:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 291,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "8410:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8427:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8419:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8410:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "8410:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 282,
											"modifierName": {
												"argumentTypes": null,
												"id": 281,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "8343:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8343:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8333:2:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8353:0:0"
									},
									"scope": 335,
									"src": "8307:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8635:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 306,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8660:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 305,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "8641:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "8641:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 303,
											"modifierName": {
												"argumentTypes": null,
												"id": 302,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "8625:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8625:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8599:18:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8635:0:0"
									},
									"scope": 335,
									"src": "8573:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "8822:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "8836:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8856:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8848:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8836:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8860:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "8828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8828:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "8828:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 325,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "8933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 326,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8941:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 324,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8912:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8912:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "EmitStatement",
												"src": "8907:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 329,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "8956:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "8965:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8956:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8956:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "8795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8794:18:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8822:0:0"
									},
									"scope": 335,
									"src": "8767:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "7274:1706:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 422,
							"linearizedBaseContracts": [
								422
							],
							"name": "BEP20Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9096:2:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9122:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9121:9:0"
									},
									"scope": 422,
									"src": "9076:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9202:2:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "9228:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9227:7:0"
									},
									"scope": 422,
									"src": "9185:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9302:2:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "9328:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9327:15:0"
									},
									"scope": 422,
									"src": "9287:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9404:2:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9429:15:0"
									},
									"scope": 422,
									"src": "9391:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9517:2:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "9543:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9542:9:0"
									},
									"scope": 422,
									"src": "9500:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9646:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9645:17:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9686:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9685:9:0"
									},
									"scope": 422,
									"src": "9627:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9917:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9916:35:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9969:6:0"
									},
									"scope": 422,
									"src": "9899:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10253:33:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "10310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10309:9:0"
									},
									"scope": 422,
									"src": "10235:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "10976:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10958:33:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "11010:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11009:6:0"
									},
									"scope": 422,
									"src": "10942:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11325:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11341:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11360:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11324:51:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11393:6:0"
									},
									"scope": 422,
									"src": "11303:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 413,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11570:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11612:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11569:57:0"
									},
									"src": "11555:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 421,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11791:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11814:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "11839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11790:63:0"
									},
									"src": "11776:78:0"
								}
							],
							"scope": 1693,
							"src": "8982:2874:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 423,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "11880:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$335",
											"typeString": "contract Ownable"
										}
									},
									"id": 424,
									"nodeType": "InheritanceSpecifier",
									"src": "11880:7:0"
								}
							],
							"contractDependencies": [
								229,
								335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469,
								335,
								229
							],
							"name": "Tokenlock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 427,
									"name": "isLocked",
									"nodeType": "VariableDeclaration",
									"scope": 469,
									"src": "11939:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 425,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11939:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11956:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 429,
									"name": "Freezed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11977:2:0"
									},
									"src": "11964:16:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 431,
									"name": "UnFreezed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12000:2:0"
									},
									"src": "11985:18:0"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12028:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "isLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "12046:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12058:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12046:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e206973206c6f636b6564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12061:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc",
																"typeString": "literal_string \"Token is locked\""
															},
															"value": "Token is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c155d8b557b639650aeb1688cea4d6667aacb37ade93a2b50026347958e229dc",
																"typeString": "literal_string \"Token is locked\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "12038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12038:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "12038:41:0"
											},
											{
												"id": 440,
												"nodeType": "PlaceholderStatement",
												"src": "12089:1:0"
											}
										]
									},
									"documentation": null,
									"id": 442,
									"name": "validLock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12028:0:0"
									},
									"src": "12009:88:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "12142:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "isLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12152:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12163:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12152:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "12152:12:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "Freezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "12188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12188:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "12183:14:0"
											}
										]
									},
									"documentation": null,
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 445,
											"modifierName": {
												"argumentTypes": null,
												"id": 444,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12132:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12132:9:0"
										}
									],
									"name": "freeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12122:2:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12142:0:0"
									},
									"scope": 469,
									"src": "12107:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "12247:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "isLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12257:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12268:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12257:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12257:12:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "UnFreezed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "12293:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12293:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "EmitStatement",
												"src": "12288:16:0"
											}
										]
									},
									"documentation": null,
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 458,
											"modifierName": {
												"argumentTypes": null,
												"id": 457,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "12237:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12237:9:0"
										}
									],
									"name": "unfreeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12227:2:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12247:0:0"
									},
									"scope": 469,
									"src": "12210:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "11858:455:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 481,
							"linearizedBaseContracts": [
								481
							],
							"name": "ApproveAndCallFallBack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12644:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "tokens",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "12689:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12643:64:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12714:0:0"
									},
									"scope": 481,
									"src": "12619:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "12581:136:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 482,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 335,
										"src": "12928:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$335",
											"typeString": "contract Ownable"
										}
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "12928:7:0"
								}
							],
							"contractDependencies": [
								229,
								335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545,
								335,
								229
							],
							"name": "UserLock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 487,
									"name": "blacklist",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "12942:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 486,
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12950:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12942:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 485,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "12961:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 491,
									"name": "LockUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "13006:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13005:21:0"
									},
									"src": "12991:36:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 495,
									"name": "UnlockUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "13049:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13048:21:0"
									},
									"src": "13032:38:0"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "13101:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "13119:22:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 498,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "13120:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "13130:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13130:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13120:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426c6f636b65642075736572",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13143:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bdb92a57ecffe6ca16cf18b3af53652b4050f8c932a93a989fb44d81102ba57",
																"typeString": "literal_string \"Blocked user\""
															},
															"value": "Blocked user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bdb92a57ecffe6ca16cf18b3af53652b4050f8c932a93a989fb44d81102ba57",
																"typeString": "literal_string \"Blocked user\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "13111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13111:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "13111:47:0"
											},
											{
												"id": 506,
												"nodeType": "PlaceholderStatement",
												"src": "13168:1:0"
											}
										]
									},
									"documentation": null,
									"id": 508,
									"name": "permissionCheck",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13101:0:0"
									},
									"src": "13076:100:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "13234:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "13244:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "13254:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13244:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13261:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13244:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "13244:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 522,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "13298:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 521,
														"name": "LockUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "13289:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13289:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "13284:18:0"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 513,
											"modifierName": {
												"argumentTypes": null,
												"id": 512,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "13224:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13224:9:0"
										}
									],
									"name": "lockUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "13204:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13203:13:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13234:0:0"
									},
									"scope": 545,
									"src": "13186:123:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "13365:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 533,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "13375:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 535,
														"indexExpression": {
															"argumentTypes": null,
															"id": 534,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13385:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13375:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13392:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13375:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "13375:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 540,
															"name": "who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13432:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "UnlockUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "13421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13421:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "13416:20:0"
											}
										]
									},
									"documentation": null,
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 531,
											"modifierName": {
												"argumentTypes": null,
												"id": 530,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 279,
												"src": "13355:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13355:9:0"
										}
									],
									"name": "unlockUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "13335:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13334:13:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13365:0:0"
									},
									"scope": 545,
									"src": "13315:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1693,
							"src": "12907:538:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 546,
										"name": "BEP20Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 422,
										"src": "13464:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BEP20Interface_$422",
											"typeString": "contract BEP20Interface"
										}
									},
									"id": 547,
									"nodeType": "InheritanceSpecifier",
									"src": "13464:14:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 548,
										"name": "Tokenlock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 469,
										"src": "13480:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Tokenlock_$469",
											"typeString": "contract Tokenlock"
										}
									},
									"id": 549,
									"nodeType": "InheritanceSpecifier",
									"src": "13480:9:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 550,
										"name": "UserLock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 545,
										"src": "13491:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UserLock_$545",
											"typeString": "contract UserLock"
										}
									},
									"id": 551,
									"nodeType": "InheritanceSpecifier",
									"src": "13491:8:0"
								}
							],
							"contractDependencies": [
								229,
								335,
								422,
								469,
								545
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								545,
								469,
								335,
								229,
								422
							],
							"name": "GTFX",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 554,
									"libraryName": {
										"contractScope": null,
										"id": 552,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 204,
										"src": "13512:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$204",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "13506:27:0",
									"typeName": {
										"id": 553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13525:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 558,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13606:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 557,
										"keyType": {
											"id": 555,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13615:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13606:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 556,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13626:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 564,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13713:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 563,
										"keyType": {
											"id": 559,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13722:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13713:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 562,
											"keyType": {
												"id": 560,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13742:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "13733:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 561,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13753:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 566,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13843:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 568,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "13931:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 567,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "13931:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 570,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14012:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 569,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14012:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 572,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14090:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 571,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14090:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 576,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14168:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 575,
										"keyType": {
											"id": 573,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14177:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14168:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 574,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14188:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "GTFX.Checkpoint",
									"id": 581,
									"members": [
										{
											"constant": false,
											"id": 578,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 581,
											"src": "14324:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 577,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "14324:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 580,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 581,
											"src": "14350:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 579,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "14350:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1692,
									"src": "14296:74:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 587,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14449:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))"
									},
									"typeName": {
										"id": 586,
										"keyType": {
											"id": 582,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14458:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14449:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint))"
										},
										"valueType": {
											"id": 585,
											"keyType": {
												"id": 583,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "14478:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "14469:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
												"typeString": "mapping(uint32 => struct GTFX.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 584,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 581,
												"src": "14488:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$581_storage_ptr",
													"typeString": "struct GTFX.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 591,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14585:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 590,
										"keyType": {
											"id": 588,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14594:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14585:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 589,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "14605:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 596,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14704:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 592,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14704:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 594,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14756:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 593,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1701,
											"src": "14746:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 595,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14746:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 601,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "14917:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 597,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14917:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 599,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14973:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 598,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1701,
											"src": "14963:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 600,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14963:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 605,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "15112:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 604,
										"keyType": {
											"id": 602,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15121:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15112:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 603,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "15132:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 613,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15259:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15286:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "15316:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15258:85:0"
									},
									"src": "15237:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 621,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15463:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15489:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "15514:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15462:71:0"
									},
									"src": "15436:98:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard BEP-20 transfer event",
									"id": 629,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15606:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15628:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "15648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15605:58:0"
									},
									"src": "15591:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard BEP-20 approval event",
									"id": 637,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15736:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15759:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "15784:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15735:64:0"
									},
									"src": "15721:79:0"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "15974:240:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 642,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15984:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "47697473686f636b2046696e616e636520546573746e6574",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15992:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3c84f5804bd650ef7c490921c6272b0e7a9fad9cb5919875bc9a07b9897ed799",
															"typeString": "literal_string \"Gitshock Finance Testnet\""
														},
														"value": "Gitshock Finance Testnet"
													},
													"src": "15984:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "15984:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 646,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "16028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "7447544658",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16038:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_39134a984f253f4a6a9831dbbe46d173e22941e3158f0d6292450d2d23b0765c",
															"typeString": "literal_string \"tGTFX\""
														},
														"value": "tGTFX"
													},
													"src": "16028:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "16028:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 650,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "16055:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16067:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "16055:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "16055:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 654,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "16079:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3530303030303030653138",
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16094:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
															"typeString": "int_const 50000000000000000000000000"
														},
														"value": "50000000e18"
													},
													"src": "16079:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "16079:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 658,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "16115:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 660,
														"indexExpression": {
															"argumentTypes": null,
															"id": 659,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "16125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16115:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 661,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "16136:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16115:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "16115:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16181:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16173:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "16185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 669,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "16194:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "16164:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16164:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "EmitStatement",
												"src": "16159:48:0"
											}
										]
									},
									"documentation": "@notice Construct a new GTFX Testnet token\n@param account The initial account to grant all the tokens",
									"id": 673,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "15950:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15949:17:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15974:0:0"
									},
									"scope": 1692,
									"src": "15938:276:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16328:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 678,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "16345:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 677,
												"id": 680,
												"nodeType": "Return",
												"src": "16338:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16293:2:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16319:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16318:9:0"
									},
									"scope": 1692,
									"src": "16276:83:0",
									"stateMutability": "view",
									"superFunction": 360,
									"visibility": "external"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "16470:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 687,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "16487:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 686,
												"id": 688,
												"nodeType": "Return",
												"src": "16480:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16437:2:0"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "16463:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16462:7:0"
									},
									"scope": 1692,
									"src": "16420:83:0",
									"stateMutability": "view",
									"superFunction": 345,
									"visibility": "external"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "16618:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 695,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 570,
													"src": "16635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 694,
												"id": 696,
												"nodeType": "Return",
												"src": "16628:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16577:2:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "16603:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 692,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16602:15:0"
									},
									"scope": 1692,
									"src": "16562:87:0",
									"stateMutability": "view",
									"superFunction": 350,
									"visibility": "external"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "16760:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 703,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 572,
													"src": "16777:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "16770:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16719:2:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "16745:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16744:15:0"
									},
									"scope": 1692,
									"src": "16706:83:0",
									"stateMutability": "view",
									"superFunction": 355,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "16903:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 711,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 566,
													"src": "16920:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 712,
												"nodeType": "Return",
												"src": "16913:19:0"
											}
										]
									},
									"documentation": "@dev Returns the total supply.",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16868:2:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "16894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16893:9:0"
									},
									"scope": 1692,
									"src": "16848:91:0",
									"stateMutability": "view",
									"superFunction": 340,
									"visibility": "external"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "17203:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 721,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "17220:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 723,
													"indexExpression": {
														"argumentTypes": null,
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "17230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17220:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 724,
												"nodeType": "Return",
												"src": "17213:25:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "17154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17153:17:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "17194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17193:9:0"
									},
									"scope": 1692,
									"src": "17135:110:0",
									"stateMutability": "view",
									"superFunction": 367,
									"visibility": "external"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "17607:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 740,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "17627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17627:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 742,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "17641:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "17652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "17617:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17617:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "17617:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17676:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 738,
												"id": 747,
												"nodeType": "Return",
												"src": "17669:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param recipient The address of the destination account\n@param amount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 733,
											"modifierName": {
												"argumentTypes": null,
												"id": 732,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "17566:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17566:9:0"
										},
										{
											"arguments": null,
											"id": 735,
											"modifierName": {
												"argumentTypes": null,
												"id": 734,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "17576:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17576:15:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17521:35:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17601:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17601:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17600:6:0"
									},
									"scope": 1692,
									"src": "17504:183:0",
									"stateMutability": "nonpayable",
									"superFunction": 376,
									"visibility": "external"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "18064:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "18081:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "18093:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"argumentTypes": null,
														"id": 761,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "18100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18081:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "18074:34:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param owner The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "18000:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "18015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17999:32:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "18055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18054:9:0"
									},
									"scope": 1692,
									"src": "17981:134:0",
									"stateMutability": "view",
									"superFunction": 385,
									"visibility": "external"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "18587:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 779,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "18606:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18606:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 781,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "18620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "18629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "18597:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18597:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "18597:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18653:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 777,
												"id": 786,
												"nodeType": "Return",
												"src": "18646:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n@param spender The address of the account which may transfer tokens\n@param amount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 772,
											"modifierName": {
												"argumentTypes": null,
												"id": 771,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "18546:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18546:9:0"
										},
										{
											"arguments": null,
											"id": 774,
											"modifierName": {
												"argumentTypes": null,
												"id": 773,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "18556:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18556:15:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18521:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18503:33:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "18581:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18580:6:0"
									},
									"scope": 1692,
									"src": "18487:177:0",
									"stateMutability": "nonpayable",
									"superFunction": 394,
									"visibility": "external"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "19069:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 804,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "19088:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19088:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 806,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "19102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "19111:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 803,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "19079:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19079:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "19079:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 814,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "19176:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19176:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "19190:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "19206:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GTFX_$1692",
																		"typeString": "contract GTFX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GTFX_$1692",
																		"typeString": "contract GTFX"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19198:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19198:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 820,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "19213:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 811,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "19151:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 810,
																"name": "ApproveAndCallFallBack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "19128:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ApproveAndCallFallBack_$481_$",
																	"typeString": "type(contract ApproveAndCallFallBack)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19128:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ApproveAndCallFallBack_$481",
																"typeString": "contract ApproveAndCallFallBack"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "receiveApproval",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "19128:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,address,bytes memory) external"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19128:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "19128:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19235:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 802,
												"id": 824,
												"nodeType": "Return",
												"src": "19228:11:0"
											}
										]
									},
									"documentation": "@notice Approve the spender to transferFrom(...) with the amount.\n@dev receiveApproval(...) is executed.\n@param amount The number of tokens that are approved\n@param data The data to pass to receiveApproval(...)\n@return true",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 797,
											"modifierName": {
												"argumentTypes": null,
												"id": 796,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "19028:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19028:9:0"
										},
										{
											"arguments": null,
											"id": 799,
											"modifierName": {
												"argumentTypes": null,
												"id": 798,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "19038:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19038:15:0"
										}
									],
									"name": "approveAndCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "18986:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19002:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18968:52:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19062:6:0"
									},
									"scope": 1692,
									"src": "18945:301:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "19676:346:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 842,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "19696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "19704:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 844,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "19715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "19686:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19686:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "19686:36:0"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "19732:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 847,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19732:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 849,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "19750:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19750:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19732:30:0"
											},
											{
												"assignments": [
													853
												],
												"declarations": [
													{
														"constant": false,
														"id": 853,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "19772:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 854,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "19799:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 856,
														"indexExpression": {
															"argumentTypes": null,
															"id": 855,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "19811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19799:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 858,
													"indexExpression": {
														"argumentTypes": null,
														"id": 857,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "19819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19799:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19772:55:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 860,
														"name": "spenderAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "19841:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "19869:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19870:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19861:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19841:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 877,
												"nodeType": "IfStatement",
												"src": "19837:158:0",
												"trueBody": {
													"id": 876,
													"nodeType": "Block",
													"src": "19874:121:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "19897:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "19905:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 871,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "19935:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "546865207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19943:39:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1",
																					"typeString": "literal_string \"The transfer amount exceeds allowance\""
																				},
																				"value": "The transfer amount exceeds allowance"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_5e83471b3a3d1fe92bff19912bab84dcc2c92190af741e7c33d886d7ec91f5d1",
																					"typeString": "literal_string \"The transfer amount exceeds allowance\""
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 869,
																				"name": "spenderAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "19914:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 87,
																			"src": "19914:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19914:69:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 866,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "19888:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19888:96:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 875,
															"nodeType": "ExpressionStatement",
															"src": "19888:96:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20011:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 879,
												"nodeType": "Return",
												"src": "20004:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param sender The address of the source account\n@param recipient The address of the destination account\n@param amount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 835,
											"modifierName": {
												"argumentTypes": null,
												"id": 834,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "19635:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19635:9:0"
										},
										{
											"arguments": null,
											"id": 837,
											"modifierName": {
												"argumentTypes": null,
												"id": 836,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "19645:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19645:15:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19591:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19574:51:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "19670:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19670:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19669:6:0"
									},
									"scope": 1692,
									"src": "19553:469:0",
									"stateMutability": "nonpayable",
									"superFunction": 405,
									"visibility": "external"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "20585:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "20604:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20604:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 897,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "20618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 905,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "20666:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "54686520696e6372656173656420616c6c6f77616e6365206f766572666c6f7773",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20678:35:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77",
																		"typeString": "literal_string \"The increased allowance overflows\""
																	},
																	"value": "The increased allowance overflows"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0ac444b4635a35929a68a5c8fa43076f8fd9d5dd9c52546538d69b2042f34c77",
																		"typeString": "literal_string \"The increased allowance overflows\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 898,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "20627:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 901,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 899,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "20639:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20639:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20627:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 903,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 902,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "20653:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20627:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "20627:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20627:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "20595:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20595:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "20595:120:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20732:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 893,
												"id": 911,
												"nodeType": "Return",
												"src": "20725:11:0"
											}
										]
									},
									"documentation": "@notice Atomically increases the allowance granted to `spender` by the caller\n@dev This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n@param spender The address of the account which may transfer tokens\n@param addedValue The additional number of tokens to allow which may be spent\n@return Whether or not the approval succeeded",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 888,
											"modifierName": {
												"argumentTypes": null,
												"id": 887,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "20544:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20544:9:0"
										},
										{
											"arguments": null,
											"id": 890,
											"modifierName": {
												"argumentTypes": null,
												"id": 889,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "20554:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20554:15:0"
										}
									],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20500:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20517:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20499:37:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "20579:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20578:6:0"
									},
									"scope": 1692,
									"src": "20473:270:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "21319:164:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 927,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "21338:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21338:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 929,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "21352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 937,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "21400:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "5468652064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21417:36:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b",
																		"typeString": "literal_string \"The decreased allowance below zero\""
																	},
																	"value": "The decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_42d9a8e134af3312daacac2d2003d2e3a900f5f05eb0de35b651f1e9ce1c4e5b",
																		"typeString": "literal_string \"The decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 930,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "21361:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 933,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 931,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 217,
																				"src": "21373:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21373:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21361:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 935,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 934,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "21387:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21361:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 87,
																"src": "21361:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21361:93:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "21329:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21329:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "21329:126:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21472:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 925,
												"id": 943,
												"nodeType": "Return",
												"src": "21465:11:0"
											}
										]
									},
									"documentation": "@notice Atomically increases the allowance granted to `spender` by the caller\n@dev This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n@param spender The address of the account which may transfer tokens\n@param subtractedValue The subtractional number of tokens to allow which may be spent\n@return Whether or not the approval succeeded",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 920,
											"modifierName": {
												"argumentTypes": null,
												"id": 919,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "21278:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21278:9:0"
										},
										{
											"arguments": null,
											"id": 922,
											"modifierName": {
												"argumentTypes": null,
												"id": 921,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "21288:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21288:15:0"
										}
									],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21229:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21246:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21228:42:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "21313:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21312:6:0"
									},
									"scope": 1692,
									"src": "21202:281:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "21815:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 957,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "21831:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21831:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 959,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "21845:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "21825:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21825:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "21825:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21869:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 955,
												"id": 963,
												"nodeType": "Return",
												"src": "21862:11:0"
											}
										]
									},
									"documentation": "@notice Destroy the amount of tokens from the sender, reducing the total supply.\n@dev The amount must be greater than balance, total supply.\n@param amount The number of tokens that are burnt\n@return true",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 950,
											"modifierName": {
												"argumentTypes": null,
												"id": 949,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "21774:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21774:9:0"
										},
										{
											"arguments": null,
											"id": 952,
											"modifierName": {
												"argumentTypes": null,
												"id": 951,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "21784:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21784:15:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "21751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21750:16:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "21809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21808:6:0"
									},
									"scope": 1692,
									"src": "21737:143:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "22092:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 975,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "22119:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22119:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 977,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "22133:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 974,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "22109:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22109:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 973,
												"id": 979,
												"nodeType": "Return",
												"src": "22102:41:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 970,
											"modifierName": {
												"argumentTypes": null,
												"id": 969,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "22066:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22066:9:0"
										},
										{
											"arguments": null,
											"id": 972,
											"modifierName": {
												"argumentTypes": null,
												"id": 971,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "22076:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22076:15:0"
										}
									],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "22040:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22039:19:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22092:0:0"
									},
									"scope": 1692,
									"src": "22022:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "22710:617:0",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22720:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1005,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "22767:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1008,
																					"name": "_name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 572,
																					"src": "22800:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22794:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22794:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 1006,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "22784:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22784:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1011,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "22809:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22809:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1014,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "22831:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GTFX_$1692",
																				"typeString": "contract GTFX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GTFX_$1692",
																				"typeString": "contract GTFX"
																			}
																		],
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22823:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22823:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1003,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22756:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22756:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22756:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1002,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22746:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22746:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22720:118:0"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22848:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1019,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22848:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "22890:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1025,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "22911:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "22922:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "22929:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1022,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22879:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22879:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22879:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1021,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22869:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22869:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22848:89:0"
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "22947:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1031,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22991:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1037,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "23003:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1038,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "23020:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1034,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "22974:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22974:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22974:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1033,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "22964:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22964:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22947:85:0"
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "23042:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1042,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23042:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1045,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "23072:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1046,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "23080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "23083:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "23086:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1044,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "23062:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23062:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23042:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1052,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "23106:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23127:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23119:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23119:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23106:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23131:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23098:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "23098:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1061,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "23169:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "23178:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1062,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "23178:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1064,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1063,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "23185:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23178:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23169:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c6964206e6f6e6365",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23199:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															},
															"value": "Invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23161:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "23161:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1071,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "23233:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1072,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "23240:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23233:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546865207369676e61747572652065787069726564",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23248:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1d9a76268658ade1712ae55619bc1c81b967bd0e64856fe24b40acc468a5cb5",
																"typeString": "literal_string \"The signature expired\""
															},
															"value": "The signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1d9a76268658ade1712ae55619bc1c81b967bd0e64856fe24b40acc468a5cb5",
																"typeString": "literal_string \"The signature expired\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "23225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23225:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "23225:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1078,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "23299:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "23310:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1077,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "23289:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23289:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 999,
												"id": 1081,
												"nodeType": "Return",
												"src": "23282:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 996,
											"modifierName": {
												"argumentTypes": null,
												"id": 995,
												"name": "validLock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "22684:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22684:9:0"
										},
										{
											"arguments": null,
											"id": 998,
											"modifierName": {
												"argumentTypes": null,
												"id": 997,
												"name": "permissionCheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 508,
												"src": "22694:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22694:15:0"
										}
									],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22596:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22615:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 988,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22655:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "22666:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22595:81:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22710:0:0"
									},
									"scope": 1692,
									"src": "22573:754:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "23594:154:0",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "23604:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1090,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "23604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1092,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "23626:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1094,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1093,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "23641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23626:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23604:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1096,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "23666:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23681:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23666:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23740:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "23666:75:0",
													"trueExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1100,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "23692:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																			}
																		},
																		"id": 1102,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1101,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "23704:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23692:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																			"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																		}
																	},
																	"id": 1106,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1103,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "23713:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23728:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23713:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23692:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																		"typeString": "struct GTFX.Checkpoint storage ref"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 580,
																"src": "23692:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1099,
															"name": "ceil96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "23685:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																"typeString": "function (uint256) pure returns (uint96)"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23685:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1111,
												"nodeType": "Return",
												"src": "23659:82:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "23546:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23545:17:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "23586:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1087,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "23586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23585:8:0"
									},
									"scope": 1692,
									"src": "23521:227:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "24260:1102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1123,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "24278:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1124,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "24292:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "24292:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24278:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f742064657465726d696e656420796574",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24306:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94bcc40f99be07541a5d79a2a91efe41b164b4c8c044ddc355f1854a6163b3ee",
																"typeString": "literal_string \"Not determined yet\""
															},
															"value": "Not determined yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94bcc40f99be07541a5d79a2a91efe41b164b4c8c044ddc355f1854a6163b3ee",
																"typeString": "literal_string \"Not determined yet\""
															}
														],
														"id": 1122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "24270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24270:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "24270:57:0"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24338:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1130,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1132,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "24360:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1134,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1133,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "24375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24360:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24338:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1136,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "24397:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24413:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24397:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "24393:56:0",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "24416:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24437:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1140,
															"nodeType": "Return",
															"src": "24430:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1143,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "24506:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																	}
																},
																"id": 1145,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1144,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24518:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24506:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																	"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																}
															},
															"id": 1149,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1146,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "24527:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24542:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24527:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24506:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																"typeString": "struct GTFX.Checkpoint storage ref"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "24506:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "24558:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24506:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "24502:153:0",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "24571:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1154,
																					"name": "checkpoints",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "24599:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																						"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																					}
																				},
																				"id": 1156,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1155,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "24611:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "24599:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																					"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1157,
																					"name": "nCheckpoints",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "24620:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 1158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24635:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24620:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24599:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																				"typeString": "struct GTFX.Checkpoint storage ref"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "votes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 580,
																		"src": "24599:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1153,
																	"name": "ceil96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "24592:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																		"typeString": "function (uint256) pure returns (uint96)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24592:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1121,
															"id": 1163,
															"nodeType": "Return",
															"src": "24585:59:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1166,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "24713:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																	}
																},
																"id": 1168,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1167,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24725:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24713:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																	"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																}
															},
															"id": 1170,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24734:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24713:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																"typeString": "struct GTFX.Checkpoint storage ref"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "24713:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1172,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "24749:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24713:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "24709:86:0",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "24762:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24783:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1175,
															"nodeType": "Return",
															"src": "24776:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24805:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1178,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24820:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24805:16:0"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "24831:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1182,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "24831:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1184,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "24846:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24861:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "24846:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24831:31:0"
											},
											{
												"body": {
													"id": 1238,
													"nodeType": "Block",
													"src": "24894:404:0",
													"statements": [
														{
															"assignments": [
																1192
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1192,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "24908:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1191,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "24908:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1201,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "24924:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1194,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "24933:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1195,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "24941:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "24933:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "24932:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24950:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "24932:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "24924:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24908:43:0"
														},
														{
															"assignments": [
																1203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1203,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "24992:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																		"typeString": "struct GTFX.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1202,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 581,
																		"src": "24992:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_storage_ptr",
																			"typeString": "struct GTFX.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1209,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1204,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "25015:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1206,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1205,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "25027:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25015:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1208,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "25036:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25015:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "24992:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1210,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "25061:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																			"typeString": "struct GTFX.Checkpoint memory"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "25061:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1212,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "25077:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25061:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1220,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "25156:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																				"typeString": "struct GTFX.Checkpoint memory"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 578,
																		"src": "25156:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1222,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "25171:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25156:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1235,
																	"nodeType": "Block",
																	"src": "25237:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1229,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "25255:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1230,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "25263:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25272:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "25263:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "25255:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1234,
																			"nodeType": "ExpressionStatement",
																			"src": "25255:18:0"
																		}
																	]
																},
																"id": 1236,
																"nodeType": "IfStatement",
																"src": "25152:136:0",
																"trueBody": {
																	"id": 1228,
																	"nodeType": "Block",
																	"src": "25184:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1224,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "25202:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1225,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "25210:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "25202:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1227,
																			"nodeType": "ExpressionStatement",
																			"src": "25202:14:0"
																		}
																	]
																}
															},
															"id": 1237,
															"nodeType": "IfStatement",
															"src": "25057:231:0",
															"trueBody": {
																"id": 1219,
																"nodeType": "Block",
																"src": "25090:56:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1215,
																						"name": "cp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1203,
																						"src": "25122:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Checkpoint_$581_memory_ptr",
																							"typeString": "struct GTFX.Checkpoint memory"
																						}
																					},
																					"id": 1216,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "votes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 580,
																					"src": "25122:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1214,
																				"name": "ceil96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1679,
																				"src": "25115:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
																					"typeString": "function (uint256) pure returns (uint96)"
																				}
																			},
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25115:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 1121,
																		"id": 1218,
																		"nodeType": "Return",
																		"src": "25108:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1188,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "24879:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1189,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "24887:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "24879:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "WhileStatement",
												"src": "24872:426:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1241,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "25321:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "25333:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25321:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1245,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "lower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "25342:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25321:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 580,
															"src": "25321:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"name": "ceil96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "25314:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
															"typeString": "function (uint256) pure returns (uint96)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25314:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1248,
												"nodeType": "Return",
												"src": "25307:48:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24193:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24210:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24192:38:0"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "24252:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1119,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "24252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24251:8:0"
									},
									"scope": 1692,
									"src": "24170:1192:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "25447:481:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1260,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "25465:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25483:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25475:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25475:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25465:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25487:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e",
																"typeString": "literal_string \"Cannot transfer from the zero address\""
															},
															"value": "Cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd9517161462829be5a3d25154ae5230e5ad2e2aaab3c9bf15e6e48716b4a12e",
																"typeString": "literal_string \"Cannot transfer from the zero address\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25457:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "25457:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1269,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "25545:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25566:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25558:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25558:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25545:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25570:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288",
																"typeString": "literal_string \"Cannot transfer to the zero address\""
															},
															"value": "Cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deea2fa463cdaca7bcc6c65f53b7ae24609806e88ca4fdb7ade049dc06112288",
																"typeString": "literal_string \"Cannot transfer to the zero address\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "25537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25537:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "25537:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1277,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "25619:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1279,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1278,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "25629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25619:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1284,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "25661:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "546865207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25669:37:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973",
																	"typeString": "literal_string \"The transfer amount exceeds balance\""
																},
																"value": "The transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_3fc916dc37cf2cf07a856ad1473ad93b10f9a58e0ad4dc3c2ff0ceabba196973",
																	"typeString": "literal_string \"The transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1280,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "25639:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1282,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1281,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "25649:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25639:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "25639:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25639:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25619:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "25619:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1289,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "25717:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1290,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "25727:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25717:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1296,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "25765:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "5468652062616c616e6365206f766572666c6f7773",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25773:23:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e23656289b2eecf3e78812941d89fa3002f128c9e67944734781eb836c5cdbbc",
																	"typeString": "literal_string \"The balance overflows\""
																},
																"value": "The balance overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_e23656289b2eecf3e78812941d89fa3002f128c9e67944734781eb836c5cdbbc",
																	"typeString": "literal_string \"The balance overflows\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1292,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "25740:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1294,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1293,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "25750:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25740:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "25740:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25740:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25717:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "25717:80:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1302,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "25821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1303,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "25829:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1304,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "25840:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "25812:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25812:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "EmitStatement",
												"src": "25807:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1308,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "25873:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1310,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "25883:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25873:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1311,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "25892:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1313,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1312,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "25902:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25892:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "25914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "25858:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25858:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "25858:63:0"
											}
										]
									},
									"documentation": null,
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25403:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "25422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25386:51:0"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25447:0:0"
									},
									"scope": 1692,
									"src": "25368:560:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "26009:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1328,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "26027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26044:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26036:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26036:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26027:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26048:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d",
																"typeString": "literal_string \"Cannot approve from the zero address\""
															},
															"value": "Cannot approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ce88ba958e2b0d44cda35791945f0a281d35d6e350d9c9f8eedd2b2359d57d",
																"typeString": "literal_string \"Cannot approve from the zero address\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26019:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "26019:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1337,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "26105:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26124:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26116:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26105:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26128:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9",
																"typeString": "literal_string \"Cannot approve to the zero address\""
															},
															"value": "Cannot approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02cd250aff92ba04a009213390107e53e83f14a04575e595af9230b9654afed9",
																"typeString": "literal_string \"Cannot approve to the zero address\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26097:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26097:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "26097:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1345,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "26176:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1348,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1346,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "26188:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26176:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1349,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1347,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "26195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26176:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "26206:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26176:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "26176:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1354,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "26236:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1355,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "26243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1356,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "26252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1353,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															637
														],
														"referencedDeclaration": 637,
														"src": "26227:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26227:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "26222:37:0"
											}
										]
									},
									"documentation": null,
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "25984:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25951:48:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26009:0:0"
									},
									"scope": 1692,
									"src": "25934:332:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "26329:347:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1368,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "26347:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26366:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26358:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26347:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26370:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee",
																"typeString": "literal_string \"Cannot burn from the zero address\""
															},
															"value": "Cannot burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5cef2fe2a70ca222ed18c80624b418b6d950cfd5cb46a9f7c5ab6b4ab537cee",
																"typeString": "literal_string \"Cannot burn from the zero address\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "26339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26339:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "26339:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1376,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "26417:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26417:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1383,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "26461:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "546865206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26469:33:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1436b54442dad08301b59754c3ac41db1c7a4ad42f2d6ba2cd9d1cde8999d74f",
																	"typeString": "literal_string \"The burn amount exceeds balance\""
																},
																"value": "The burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_1436b54442dad08301b59754c3ac41db1c7a4ad42f2d6ba2cd9d1cde8999d74f",
																	"typeString": "literal_string \"The burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1379,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "26438:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1381,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1380,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "26448:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26438:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "26438:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26438:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26417:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "26417:86:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1388,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "26513:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "26545:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1389,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "26528:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "26528:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26528:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26513:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "26513:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26593:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26585:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26585:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "26597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629
														],
														"referencedDeclaration": 629,
														"src": "26567:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26567:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "EmitStatement",
												"src": "26562:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1404,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "26630:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1406,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "26640:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26630:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26658:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26650:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "26662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "26615:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26615:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "26615:54:0"
											}
										]
									},
									"documentation": null,
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "26287:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "26304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26286:33:0"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26329:0:0"
									},
									"scope": 1692,
									"src": "26272:404:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "26748:303:0",
										"statements": [
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "26758:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1421,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26758:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1423,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "26784:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1425,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1424,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "26794:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26784:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26758:46:0"
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "26814:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26814:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1429,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "26841:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1431,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1430,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "26851:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26841:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26814:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1433,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "26871:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1435,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1434,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "26881:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26871:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1436,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "26894:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26871:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "26871:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1440,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "26935:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1441,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26946:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1442,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "26963:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1439,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "26919:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26919:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "EmitStatement",
												"src": "26914:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1446,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26999:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1447,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "27016:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1448,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "27027:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "26984:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26984:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "26984:60:0"
											}
										]
									},
									"documentation": null,
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "26701:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "26720:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26700:38:0"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26748:0:0"
									},
									"scope": 1692,
									"src": "26682:369:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "27138:813:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "27152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1462,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "27162:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "27152:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1464,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "27172:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27181:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27172:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27152:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1557,
												"nodeType": "IfStatement",
												"src": "27148:797:0",
												"trueBody": {
													"id": 1556,
													"nodeType": "Block",
													"src": "27184:761:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1468,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "27202:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27220:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27212:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27202:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1511,
															"nodeType": "IfStatement",
															"src": "27198:362:0",
															"trueBody": {
																"id": 1510,
																"nodeType": "Block",
																"src": "27224:336:0",
																"statements": [
																	{
																		"assignments": [
																			1474
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1474,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27242:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1473,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "27242:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1478,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1475,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "27261:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1477,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1476,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "27276:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27261:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27242:41:0"
																	},
																	{
																		"assignments": [
																			1480
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1480,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27301:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1479,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27301:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1494,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1481,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "27321:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27333:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "27321:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27380:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "27321:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1484,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "27337:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																							}
																						},
																						"id": 1486,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1485,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1454,
																							"src": "27349:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "27337:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																							"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																						}
																					},
																					"id": 1490,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1487,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1474,
																							"src": "27357:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27369:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "27357:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27337:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																						"typeString": "struct GTFX.Checkpoint storage ref"
																					}
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "27337:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27301:80:0"
																	},
																	{
																		"assignments": [
																			1496
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1496,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1510,
																				"src": "27399:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1495,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27399:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1502,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1499,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "27433:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "54686520766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 1500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27441:28:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3febcc9d75a89ca64329c84ad05c5c32a433f1ccbf52201013f067d187d2f481",
																						"typeString": "literal_string \"The vote amount underflows\""
																					},
																					"value": "The vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3febcc9d75a89ca64329c84ad05c5c32a433f1ccbf52201013f067d187d2f481",
																						"typeString": "literal_string \"The vote amount underflows\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1497,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "27419:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 87,
																				"src": "27419:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27419:51:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27399:71:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1504,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "27505:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1505,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "27513:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1506,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "27524:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1507,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1496,
																					"src": "27535:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1503,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "27488:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27488:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1509,
																		"nodeType": "ExpressionStatement",
																		"src": "27488:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "27578:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27596:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27588:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27588:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "27578:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1555,
															"nodeType": "IfStatement",
															"src": "27574:361:0",
															"trueBody": {
																"id": 1554,
																"nodeType": "Block",
																"src": "27600:335:0",
																"statements": [
																	{
																		"assignments": [
																			1518
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1518,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27618:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1517,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "27618:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1522,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1519,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "27637:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1521,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1520,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "27652:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27637:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27618:41:0"
																	},
																	{
																		"assignments": [
																			1524
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1524,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27677:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1523,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27677:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1538,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1525,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "27697:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27709:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "27697:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27756:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "27697:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1528,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "27713:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																							}
																						},
																						"id": 1530,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1529,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1456,
																							"src": "27725:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "27713:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																							"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																						}
																					},
																					"id": 1534,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1531,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1518,
																							"src": "27733:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27745:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "27733:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27713:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																						"typeString": "struct GTFX.Checkpoint storage ref"
																					}
																				},
																				"id": 1535,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 580,
																				"src": "27713:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27677:80:0"
																	},
																	{
																		"assignments": [
																			1540
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1540,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1554,
																				"src": "27775:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1539,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "27775:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1546,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1543,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "27809:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "54686520766f746520616d6f756e74206f766572666c6f7773",
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27817:27:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_6281e829f7ec7f2cccd2aea5aead2c19a968d78b08a401d6fbbbcbceebdf1198",
																						"typeString": "literal_string \"The vote amount overflows\""
																					},
																					"value": "The vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_6281e829f7ec7f2cccd2aea5aead2c19a968d78b08a401d6fbbbcbceebdf1198",
																						"typeString": "literal_string \"The vote amount overflows\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1541,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "27795:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "27795:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																				}
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27795:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "27775:70:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1548,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1456,
																					"src": "27880:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1549,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "27888:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1550,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1524,
																					"src": "27899:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1551,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1540,
																					"src": "27910:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1547,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "27863:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27863:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1553,
																		"nodeType": "ExpressionStatement",
																		"src": "27863:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27080:48:0"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27138:0:0"
									},
									"scope": 1692,
									"src": "27057:894:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "28068:489:0",
										"statements": [
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "28076:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1570,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "28076:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1573,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "28104:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28104:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "54686520626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28118:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e113c43e880116d52c7f2636a37c913ac2cc14ba7aeb716cc0279d52a01cefb6",
																"typeString": "literal_string \"The block number exceeds 32 bits\""
															},
															"value": "The block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_e113c43e880116d52c7f2636a37c913ac2cc14ba7aeb716cc0279d52a01cefb6",
																"typeString": "literal_string \"The block number exceeds 32 bits\""
															}
														],
														"id": 1572,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "28097:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28097:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28076:77:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1578,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "28166:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28181:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "28166:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1581,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "28186:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																		}
																	},
																	"id": 1583,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1582,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "28198:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28186:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																		"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																	}
																},
																"id": 1587,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1584,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28209:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28224:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28209:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28186:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 578,
															"src": "28186:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1589,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "28240:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "28186:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28166:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "28337:149:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1604,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "28349:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																			}
																		},
																		"id": 1607,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1605,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "28361:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28349:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																			"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																		}
																	},
																	"id": 1608,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1606,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28372:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28349:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																		"typeString": "struct GTFX.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1610,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1571,
																			"src": "28399:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1611,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "28412:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1609,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "28388:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$581_storage_ptr_$",
																			"typeString": "type(struct GTFX.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28388:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$581_memory",
																		"typeString": "struct GTFX.Checkpoint memory"
																	}
																},
																"src": "28349:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																	"typeString": "struct GTFX.Checkpoint storage ref"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "28349:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1615,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "28433:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1617,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1616,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "28448:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28433:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1618,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "28461:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28476:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28461:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "28433:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1622,
															"nodeType": "ExpressionStatement",
															"src": "28433:44:0"
														}
													]
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "28162:324:0",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "28253:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1592,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "28265:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct GTFX.Checkpoint storage ref))"
																				}
																			},
																			"id": 1597,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1593,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "28277:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28265:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$581_storage_$",
																				"typeString": "mapping(uint32 => struct GTFX.Checkpoint storage ref)"
																			}
																		},
																		"id": 1598,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1594,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "28288:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28303:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28288:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28265:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$581_storage",
																			"typeString": "struct GTFX.Checkpoint storage ref"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 580,
																	"src": "28265:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1600,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "28314:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28265:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1602,
															"nodeType": "ExpressionStatement",
															"src": "28265:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1626,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "28520:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1627,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "28531:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1628,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "28541:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "28499:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28499:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "EmitStatement",
												"src": "28494:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "27983:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "28002:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1562,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "28023:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "28041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27982:76:0"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28068:0:0"
									},
									"scope": 1692,
									"src": "27957:600:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "28653:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1642,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "28671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28675:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28678:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "28675:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "28671:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1647,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "28682:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1710,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "28663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28663:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "28663:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1651,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "28719:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28712:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28712:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1653,
												"nodeType": "Return",
												"src": "28705:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28583:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28594:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28594:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28582:39:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "28645:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1638,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28644:8:0"
									},
									"scope": 1692,
									"src": "28567:161:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "28792:100:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1662,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "28806:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
															"typeString": "int_const 79228162514264337593543950336"
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28811:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3936",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28814:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_96_by_1",
																"typeString": "int_const 96"
															},
															"value": "96"
														},
														"src": "28811:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
															"typeString": "int_const 79228162514264337593543950336"
														}
													},
													"src": "28806:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1673,
												"nodeType": "IfStatement",
												"src": "28802:58:0",
												"trueBody": {
													"id": 1672,
													"nodeType": "Block",
													"src": "28818:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "28846:2:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28847:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	],
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28839:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": "uint96"
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28839:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 1661,
															"id": 1671,
															"nodeType": "Return",
															"src": "28832:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1675,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "28883:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28876:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28876:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1677,
												"nodeType": "Return",
												"src": "28869:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "28750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28749:11:0"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "28784:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1659,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "28784:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28783:8:0"
									},
									"scope": 1692,
									"src": "28734:158:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "28952:98:0",
										"statements": [
											{
												"assignments": [
													1685
												],
												"declarations": [
													{
														"constant": false,
														"id": 1685,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "28962:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "28962:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 1685,
															"isOffset": false,
															"isSlot": false,
															"src": "28998:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 1687,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "28987:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1688,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1685,
													"src": "29036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1689,
												"nodeType": "Return",
												"src": "29029:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28917:2:0"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "28943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28942:9:0"
									},
									"scope": 1692,
									"src": "28898:152:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "13447:15605:0"
						}
					],
					"src": "32:29021:0"
				},
				"id": 0
			}
		}
	}
}